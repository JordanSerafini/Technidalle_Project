
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model addresses
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type addresses = $Result.DefaultSelection<Prisma.$addressesPayload>
/**
 * Model clients
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type clients = $Result.DefaultSelection<Prisma.$clientsPayload>
/**
 * Model document_tags
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type document_tags = $Result.DefaultSelection<Prisma.$document_tagsPayload>
/**
 * Model documents
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type documents = $Result.DefaultSelection<Prisma.$documentsPayload>
/**
 * Model events
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type events = $Result.DefaultSelection<Prisma.$eventsPayload>
/**
 * Model materials
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type materials = $Result.DefaultSelection<Prisma.$materialsPayload>
/**
 * Model project_materials
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type project_materials = $Result.DefaultSelection<Prisma.$project_materialsPayload>
/**
 * Model project_media
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type project_media = $Result.DefaultSelection<Prisma.$project_mediaPayload>
/**
 * Model project_staff
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type project_staff = $Result.DefaultSelection<Prisma.$project_staffPayload>
/**
 * Model project_stages
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type project_stages = $Result.DefaultSelection<Prisma.$project_stagesPayload>
/**
 * Model project_tags
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type project_tags = $Result.DefaultSelection<Prisma.$project_tagsPayload>
/**
 * Model projects
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type projects = $Result.DefaultSelection<Prisma.$projectsPayload>
/**
 * Model roles
 * 
 */
export type roles = $Result.DefaultSelection<Prisma.$rolesPayload>
/**
 * Model site_reports
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type site_reports = $Result.DefaultSelection<Prisma.$site_reportsPayload>
/**
 * Model staff
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type staff = $Result.DefaultSelection<Prisma.$staffPayload>
/**
 * Model stage_checklists
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type stage_checklists = $Result.DefaultSelection<Prisma.$stage_checklistsPayload>
/**
 * Model stage_tags
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type stage_tags = $Result.DefaultSelection<Prisma.$stage_tagsPayload>
/**
 * Model tags
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type tags = $Result.DefaultSelection<Prisma.$tagsPayload>
/**
 * Model tasks
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type tasks = $Result.DefaultSelection<Prisma.$tasksPayload>
/**
 * Model time_logs
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type time_logs = $Result.DefaultSelection<Prisma.$time_logsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const document_status: {
  brouillon: 'brouillon',
  en_attente: 'en_attente',
  valide: 'valide',
  refuse: 'refuse',
  annule: 'annule'
};

export type document_status = (typeof document_status)[keyof typeof document_status]


export const document_type: {
  devis: 'devis',
  facture: 'facture',
  bon_de_commande: 'bon_de_commande',
  bon_de_livraison: 'bon_de_livraison',
  fiche_technique: 'fiche_technique',
  photo_chantier: 'photo_chantier',
  plan: 'plan',
  autre: 'autre'
};

export type document_type = (typeof document_type)[keyof typeof document_type]


export const event_type: {
  appel_telephonique: 'appel_telephonique',
  reunion_chantier: 'reunion_chantier',
  visite_technique: 'visite_technique',
  rendez_vous_client: 'rendez_vous_client',
  reunion_interne: 'reunion_interne',
  formation: 'formation',
  livraison_materiaux: 'livraison_materiaux',
  intervention_urgente: 'intervention_urgente',
  maintenance: 'maintenance',
  autre: 'autre'
};

export type event_type = (typeof event_type)[keyof typeof event_type]


export const project_status: {
  prospect: 'prospect',
  devis_en_cours: 'devis_en_cours',
  devis_accepte: 'devis_accepte',
  en_preparation: 'en_preparation',
  en_cours: 'en_cours',
  en_pause: 'en_pause',
  termine: 'termine',
  annule: 'annule'
};

export type project_status = (typeof project_status)[keyof typeof project_status]

}

export type document_status = $Enums.document_status

export const document_status: typeof $Enums.document_status

export type document_type = $Enums.document_type

export const document_type: typeof $Enums.document_type

export type event_type = $Enums.event_type

export const event_type: typeof $Enums.event_type

export type project_status = $Enums.project_status

export const project_status: typeof $Enums.project_status

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Addresses
 * const addresses = await prisma.addresses.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Addresses
   * const addresses = await prisma.addresses.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.addresses`: Exposes CRUD operations for the **addresses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.addresses.findMany()
    * ```
    */
  get addresses(): Prisma.addressesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clients`: Exposes CRUD operations for the **clients** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.clients.findMany()
    * ```
    */
  get clients(): Prisma.clientsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.document_tags`: Exposes CRUD operations for the **document_tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Document_tags
    * const document_tags = await prisma.document_tags.findMany()
    * ```
    */
  get document_tags(): Prisma.document_tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.documents`: Exposes CRUD operations for the **documents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.documents.findMany()
    * ```
    */
  get documents(): Prisma.documentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.events`: Exposes CRUD operations for the **events** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Events
    * const events = await prisma.events.findMany()
    * ```
    */
  get events(): Prisma.eventsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.materials`: Exposes CRUD operations for the **materials** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Materials
    * const materials = await prisma.materials.findMany()
    * ```
    */
  get materials(): Prisma.materialsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project_materials`: Exposes CRUD operations for the **project_materials** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_materials
    * const project_materials = await prisma.project_materials.findMany()
    * ```
    */
  get project_materials(): Prisma.project_materialsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project_media`: Exposes CRUD operations for the **project_media** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_medias
    * const project_medias = await prisma.project_media.findMany()
    * ```
    */
  get project_media(): Prisma.project_mediaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project_staff`: Exposes CRUD operations for the **project_staff** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_staffs
    * const project_staffs = await prisma.project_staff.findMany()
    * ```
    */
  get project_staff(): Prisma.project_staffDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project_stages`: Exposes CRUD operations for the **project_stages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_stages
    * const project_stages = await prisma.project_stages.findMany()
    * ```
    */
  get project_stages(): Prisma.project_stagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.project_tags`: Exposes CRUD operations for the **project_tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_tags
    * const project_tags = await prisma.project_tags.findMany()
    * ```
    */
  get project_tags(): Prisma.project_tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.projects`: Exposes CRUD operations for the **projects** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.projects.findMany()
    * ```
    */
  get projects(): Prisma.projectsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles`: Exposes CRUD operations for the **roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.site_reports`: Exposes CRUD operations for the **site_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Site_reports
    * const site_reports = await prisma.site_reports.findMany()
    * ```
    */
  get site_reports(): Prisma.site_reportsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.staff`: Exposes CRUD operations for the **staff** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Staff
    * const staff = await prisma.staff.findMany()
    * ```
    */
  get staff(): Prisma.staffDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stage_checklists`: Exposes CRUD operations for the **stage_checklists** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stage_checklists
    * const stage_checklists = await prisma.stage_checklists.findMany()
    * ```
    */
  get stage_checklists(): Prisma.stage_checklistsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stage_tags`: Exposes CRUD operations for the **stage_tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stage_tags
    * const stage_tags = await prisma.stage_tags.findMany()
    * ```
    */
  get stage_tags(): Prisma.stage_tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tags`: Exposes CRUD operations for the **tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tags.findMany()
    * ```
    */
  get tags(): Prisma.tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tasks`: Exposes CRUD operations for the **tasks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tasks
    * const tasks = await prisma.tasks.findMany()
    * ```
    */
  get tasks(): Prisma.tasksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.time_logs`: Exposes CRUD operations for the **time_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Time_logs
    * const time_logs = await prisma.time_logs.findMany()
    * ```
    */
  get time_logs(): Prisma.time_logsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    addresses: 'addresses',
    clients: 'clients',
    document_tags: 'document_tags',
    documents: 'documents',
    events: 'events',
    materials: 'materials',
    project_materials: 'project_materials',
    project_media: 'project_media',
    project_staff: 'project_staff',
    project_stages: 'project_stages',
    project_tags: 'project_tags',
    projects: 'projects',
    roles: 'roles',
    site_reports: 'site_reports',
    staff: 'staff',
    stage_checklists: 'stage_checklists',
    stage_tags: 'stage_tags',
    tags: 'tags',
    tasks: 'tasks',
    time_logs: 'time_logs'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "addresses" | "clients" | "document_tags" | "documents" | "events" | "materials" | "project_materials" | "project_media" | "project_staff" | "project_stages" | "project_tags" | "projects" | "roles" | "site_reports" | "staff" | "stage_checklists" | "stage_tags" | "tags" | "tasks" | "time_logs"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      addresses: {
        payload: Prisma.$addressesPayload<ExtArgs>
        fields: Prisma.addressesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.addressesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.addressesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          findFirst: {
            args: Prisma.addressesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.addressesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          findMany: {
            args: Prisma.addressesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>[]
          }
          create: {
            args: Prisma.addressesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          createMany: {
            args: Prisma.addressesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.addressesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>[]
          }
          delete: {
            args: Prisma.addressesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          update: {
            args: Prisma.addressesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          deleteMany: {
            args: Prisma.addressesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.addressesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.addressesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>[]
          }
          upsert: {
            args: Prisma.addressesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$addressesPayload>
          }
          aggregate: {
            args: Prisma.AddressesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddresses>
          }
          groupBy: {
            args: Prisma.addressesGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressesGroupByOutputType>[]
          }
          count: {
            args: Prisma.addressesCountArgs<ExtArgs>
            result: $Utils.Optional<AddressesCountAggregateOutputType> | number
          }
        }
      }
      clients: {
        payload: Prisma.$clientsPayload<ExtArgs>
        fields: Prisma.clientsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clientsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clientsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          findFirst: {
            args: Prisma.clientsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clientsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          findMany: {
            args: Prisma.clientsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>[]
          }
          create: {
            args: Prisma.clientsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          createMany: {
            args: Prisma.clientsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.clientsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>[]
          }
          delete: {
            args: Prisma.clientsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          update: {
            args: Prisma.clientsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          deleteMany: {
            args: Prisma.clientsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.clientsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.clientsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>[]
          }
          upsert: {
            args: Prisma.clientsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          aggregate: {
            args: Prisma.ClientsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClients>
          }
          groupBy: {
            args: Prisma.clientsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientsGroupByOutputType>[]
          }
          count: {
            args: Prisma.clientsCountArgs<ExtArgs>
            result: $Utils.Optional<ClientsCountAggregateOutputType> | number
          }
        }
      }
      document_tags: {
        payload: Prisma.$document_tagsPayload<ExtArgs>
        fields: Prisma.document_tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.document_tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.document_tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>
          }
          findFirst: {
            args: Prisma.document_tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.document_tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>
          }
          findMany: {
            args: Prisma.document_tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>[]
          }
          create: {
            args: Prisma.document_tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>
          }
          createMany: {
            args: Prisma.document_tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.document_tagsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>[]
          }
          delete: {
            args: Prisma.document_tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>
          }
          update: {
            args: Prisma.document_tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>
          }
          deleteMany: {
            args: Prisma.document_tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.document_tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.document_tagsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>[]
          }
          upsert: {
            args: Prisma.document_tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_tagsPayload>
          }
          aggregate: {
            args: Prisma.Document_tagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocument_tags>
          }
          groupBy: {
            args: Prisma.document_tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Document_tagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.document_tagsCountArgs<ExtArgs>
            result: $Utils.Optional<Document_tagsCountAggregateOutputType> | number
          }
        }
      }
      documents: {
        payload: Prisma.$documentsPayload<ExtArgs>
        fields: Prisma.documentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.documentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.documentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          findFirst: {
            args: Prisma.documentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.documentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          findMany: {
            args: Prisma.documentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>[]
          }
          create: {
            args: Prisma.documentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          createMany: {
            args: Prisma.documentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.documentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>[]
          }
          delete: {
            args: Prisma.documentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          update: {
            args: Prisma.documentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          deleteMany: {
            args: Prisma.documentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.documentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.documentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>[]
          }
          upsert: {
            args: Prisma.documentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentsPayload>
          }
          aggregate: {
            args: Prisma.DocumentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocuments>
          }
          groupBy: {
            args: Prisma.documentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.documentsCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentsCountAggregateOutputType> | number
          }
        }
      }
      events: {
        payload: Prisma.$eventsPayload<ExtArgs>
        fields: Prisma.eventsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.eventsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.eventsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          findFirst: {
            args: Prisma.eventsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.eventsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          findMany: {
            args: Prisma.eventsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>[]
          }
          create: {
            args: Prisma.eventsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          createMany: {
            args: Prisma.eventsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.eventsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>[]
          }
          delete: {
            args: Prisma.eventsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          update: {
            args: Prisma.eventsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          deleteMany: {
            args: Prisma.eventsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.eventsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.eventsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>[]
          }
          upsert: {
            args: Prisma.eventsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$eventsPayload>
          }
          aggregate: {
            args: Prisma.EventsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvents>
          }
          groupBy: {
            args: Prisma.eventsGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventsGroupByOutputType>[]
          }
          count: {
            args: Prisma.eventsCountArgs<ExtArgs>
            result: $Utils.Optional<EventsCountAggregateOutputType> | number
          }
        }
      }
      materials: {
        payload: Prisma.$materialsPayload<ExtArgs>
        fields: Prisma.materialsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.materialsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.materialsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>
          }
          findFirst: {
            args: Prisma.materialsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.materialsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>
          }
          findMany: {
            args: Prisma.materialsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>[]
          }
          create: {
            args: Prisma.materialsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>
          }
          createMany: {
            args: Prisma.materialsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.materialsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>[]
          }
          delete: {
            args: Prisma.materialsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>
          }
          update: {
            args: Prisma.materialsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>
          }
          deleteMany: {
            args: Prisma.materialsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.materialsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.materialsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>[]
          }
          upsert: {
            args: Prisma.materialsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$materialsPayload>
          }
          aggregate: {
            args: Prisma.MaterialsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaterials>
          }
          groupBy: {
            args: Prisma.materialsGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialsGroupByOutputType>[]
          }
          count: {
            args: Prisma.materialsCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialsCountAggregateOutputType> | number
          }
        }
      }
      project_materials: {
        payload: Prisma.$project_materialsPayload<ExtArgs>
        fields: Prisma.project_materialsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.project_materialsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.project_materialsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>
          }
          findFirst: {
            args: Prisma.project_materialsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.project_materialsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>
          }
          findMany: {
            args: Prisma.project_materialsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>[]
          }
          create: {
            args: Prisma.project_materialsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>
          }
          createMany: {
            args: Prisma.project_materialsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.project_materialsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>[]
          }
          delete: {
            args: Prisma.project_materialsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>
          }
          update: {
            args: Prisma.project_materialsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>
          }
          deleteMany: {
            args: Prisma.project_materialsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.project_materialsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.project_materialsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>[]
          }
          upsert: {
            args: Prisma.project_materialsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_materialsPayload>
          }
          aggregate: {
            args: Prisma.Project_materialsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject_materials>
          }
          groupBy: {
            args: Prisma.project_materialsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Project_materialsGroupByOutputType>[]
          }
          count: {
            args: Prisma.project_materialsCountArgs<ExtArgs>
            result: $Utils.Optional<Project_materialsCountAggregateOutputType> | number
          }
        }
      }
      project_media: {
        payload: Prisma.$project_mediaPayload<ExtArgs>
        fields: Prisma.project_mediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.project_mediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.project_mediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>
          }
          findFirst: {
            args: Prisma.project_mediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.project_mediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>
          }
          findMany: {
            args: Prisma.project_mediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>[]
          }
          create: {
            args: Prisma.project_mediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>
          }
          createMany: {
            args: Prisma.project_mediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.project_mediaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>[]
          }
          delete: {
            args: Prisma.project_mediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>
          }
          update: {
            args: Prisma.project_mediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>
          }
          deleteMany: {
            args: Prisma.project_mediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.project_mediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.project_mediaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>[]
          }
          upsert: {
            args: Prisma.project_mediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_mediaPayload>
          }
          aggregate: {
            args: Prisma.Project_mediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject_media>
          }
          groupBy: {
            args: Prisma.project_mediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Project_mediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.project_mediaCountArgs<ExtArgs>
            result: $Utils.Optional<Project_mediaCountAggregateOutputType> | number
          }
        }
      }
      project_staff: {
        payload: Prisma.$project_staffPayload<ExtArgs>
        fields: Prisma.project_staffFieldRefs
        operations: {
          findUnique: {
            args: Prisma.project_staffFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.project_staffFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>
          }
          findFirst: {
            args: Prisma.project_staffFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.project_staffFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>
          }
          findMany: {
            args: Prisma.project_staffFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>[]
          }
          create: {
            args: Prisma.project_staffCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>
          }
          createMany: {
            args: Prisma.project_staffCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.project_staffCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>[]
          }
          delete: {
            args: Prisma.project_staffDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>
          }
          update: {
            args: Prisma.project_staffUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>
          }
          deleteMany: {
            args: Prisma.project_staffDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.project_staffUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.project_staffUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>[]
          }
          upsert: {
            args: Prisma.project_staffUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_staffPayload>
          }
          aggregate: {
            args: Prisma.Project_staffAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject_staff>
          }
          groupBy: {
            args: Prisma.project_staffGroupByArgs<ExtArgs>
            result: $Utils.Optional<Project_staffGroupByOutputType>[]
          }
          count: {
            args: Prisma.project_staffCountArgs<ExtArgs>
            result: $Utils.Optional<Project_staffCountAggregateOutputType> | number
          }
        }
      }
      project_stages: {
        payload: Prisma.$project_stagesPayload<ExtArgs>
        fields: Prisma.project_stagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.project_stagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.project_stagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>
          }
          findFirst: {
            args: Prisma.project_stagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.project_stagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>
          }
          findMany: {
            args: Prisma.project_stagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>[]
          }
          create: {
            args: Prisma.project_stagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>
          }
          createMany: {
            args: Prisma.project_stagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.project_stagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>[]
          }
          delete: {
            args: Prisma.project_stagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>
          }
          update: {
            args: Prisma.project_stagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>
          }
          deleteMany: {
            args: Prisma.project_stagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.project_stagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.project_stagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>[]
          }
          upsert: {
            args: Prisma.project_stagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_stagesPayload>
          }
          aggregate: {
            args: Prisma.Project_stagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject_stages>
          }
          groupBy: {
            args: Prisma.project_stagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Project_stagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.project_stagesCountArgs<ExtArgs>
            result: $Utils.Optional<Project_stagesCountAggregateOutputType> | number
          }
        }
      }
      project_tags: {
        payload: Prisma.$project_tagsPayload<ExtArgs>
        fields: Prisma.project_tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.project_tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.project_tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>
          }
          findFirst: {
            args: Prisma.project_tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.project_tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>
          }
          findMany: {
            args: Prisma.project_tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>[]
          }
          create: {
            args: Prisma.project_tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>
          }
          createMany: {
            args: Prisma.project_tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.project_tagsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>[]
          }
          delete: {
            args: Prisma.project_tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>
          }
          update: {
            args: Prisma.project_tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>
          }
          deleteMany: {
            args: Prisma.project_tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.project_tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.project_tagsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>[]
          }
          upsert: {
            args: Prisma.project_tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$project_tagsPayload>
          }
          aggregate: {
            args: Prisma.Project_tagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject_tags>
          }
          groupBy: {
            args: Prisma.project_tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Project_tagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.project_tagsCountArgs<ExtArgs>
            result: $Utils.Optional<Project_tagsCountAggregateOutputType> | number
          }
        }
      }
      projects: {
        payload: Prisma.$projectsPayload<ExtArgs>
        fields: Prisma.projectsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.projectsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.projectsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>
          }
          findFirst: {
            args: Prisma.projectsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.projectsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>
          }
          findMany: {
            args: Prisma.projectsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>[]
          }
          create: {
            args: Prisma.projectsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>
          }
          createMany: {
            args: Prisma.projectsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.projectsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>[]
          }
          delete: {
            args: Prisma.projectsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>
          }
          update: {
            args: Prisma.projectsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>
          }
          deleteMany: {
            args: Prisma.projectsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.projectsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.projectsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>[]
          }
          upsert: {
            args: Prisma.projectsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectsPayload>
          }
          aggregate: {
            args: Prisma.ProjectsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProjects>
          }
          groupBy: {
            args: Prisma.projectsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectsGroupByOutputType>[]
          }
          count: {
            args: Prisma.projectsCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectsCountAggregateOutputType> | number
          }
        }
      }
      roles: {
        payload: Prisma.$rolesPayload<ExtArgs>
        fields: Prisma.rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findFirst: {
            args: Prisma.rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findMany: {
            args: Prisma.rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          create: {
            args: Prisma.rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          createMany: {
            args: Prisma.rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.rolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          delete: {
            args: Prisma.rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          update: {
            args: Prisma.rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          deleteMany: {
            args: Prisma.rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.rolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          upsert: {
            args: Prisma.rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolesCountArgs<ExtArgs>
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
      site_reports: {
        payload: Prisma.$site_reportsPayload<ExtArgs>
        fields: Prisma.site_reportsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.site_reportsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.site_reportsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>
          }
          findFirst: {
            args: Prisma.site_reportsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.site_reportsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>
          }
          findMany: {
            args: Prisma.site_reportsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>[]
          }
          create: {
            args: Prisma.site_reportsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>
          }
          createMany: {
            args: Prisma.site_reportsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.site_reportsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>[]
          }
          delete: {
            args: Prisma.site_reportsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>
          }
          update: {
            args: Prisma.site_reportsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>
          }
          deleteMany: {
            args: Prisma.site_reportsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.site_reportsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.site_reportsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>[]
          }
          upsert: {
            args: Prisma.site_reportsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$site_reportsPayload>
          }
          aggregate: {
            args: Prisma.Site_reportsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSite_reports>
          }
          groupBy: {
            args: Prisma.site_reportsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Site_reportsGroupByOutputType>[]
          }
          count: {
            args: Prisma.site_reportsCountArgs<ExtArgs>
            result: $Utils.Optional<Site_reportsCountAggregateOutputType> | number
          }
        }
      }
      staff: {
        payload: Prisma.$staffPayload<ExtArgs>
        fields: Prisma.staffFieldRefs
        operations: {
          findUnique: {
            args: Prisma.staffFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.staffFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>
          }
          findFirst: {
            args: Prisma.staffFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.staffFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>
          }
          findMany: {
            args: Prisma.staffFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>[]
          }
          create: {
            args: Prisma.staffCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>
          }
          createMany: {
            args: Prisma.staffCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.staffCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>[]
          }
          delete: {
            args: Prisma.staffDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>
          }
          update: {
            args: Prisma.staffUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>
          }
          deleteMany: {
            args: Prisma.staffDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.staffUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.staffUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>[]
          }
          upsert: {
            args: Prisma.staffUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staffPayload>
          }
          aggregate: {
            args: Prisma.StaffAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStaff>
          }
          groupBy: {
            args: Prisma.staffGroupByArgs<ExtArgs>
            result: $Utils.Optional<StaffGroupByOutputType>[]
          }
          count: {
            args: Prisma.staffCountArgs<ExtArgs>
            result: $Utils.Optional<StaffCountAggregateOutputType> | number
          }
        }
      }
      stage_checklists: {
        payload: Prisma.$stage_checklistsPayload<ExtArgs>
        fields: Prisma.stage_checklistsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stage_checklistsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stage_checklistsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>
          }
          findFirst: {
            args: Prisma.stage_checklistsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stage_checklistsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>
          }
          findMany: {
            args: Prisma.stage_checklistsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>[]
          }
          create: {
            args: Prisma.stage_checklistsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>
          }
          createMany: {
            args: Prisma.stage_checklistsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stage_checklistsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>[]
          }
          delete: {
            args: Prisma.stage_checklistsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>
          }
          update: {
            args: Prisma.stage_checklistsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>
          }
          deleteMany: {
            args: Prisma.stage_checklistsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stage_checklistsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stage_checklistsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>[]
          }
          upsert: {
            args: Prisma.stage_checklistsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_checklistsPayload>
          }
          aggregate: {
            args: Prisma.Stage_checklistsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStage_checklists>
          }
          groupBy: {
            args: Prisma.stage_checklistsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stage_checklistsGroupByOutputType>[]
          }
          count: {
            args: Prisma.stage_checklistsCountArgs<ExtArgs>
            result: $Utils.Optional<Stage_checklistsCountAggregateOutputType> | number
          }
        }
      }
      stage_tags: {
        payload: Prisma.$stage_tagsPayload<ExtArgs>
        fields: Prisma.stage_tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stage_tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stage_tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>
          }
          findFirst: {
            args: Prisma.stage_tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stage_tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>
          }
          findMany: {
            args: Prisma.stage_tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>[]
          }
          create: {
            args: Prisma.stage_tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>
          }
          createMany: {
            args: Prisma.stage_tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stage_tagsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>[]
          }
          delete: {
            args: Prisma.stage_tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>
          }
          update: {
            args: Prisma.stage_tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>
          }
          deleteMany: {
            args: Prisma.stage_tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stage_tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stage_tagsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>[]
          }
          upsert: {
            args: Prisma.stage_tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stage_tagsPayload>
          }
          aggregate: {
            args: Prisma.Stage_tagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStage_tags>
          }
          groupBy: {
            args: Prisma.stage_tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stage_tagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.stage_tagsCountArgs<ExtArgs>
            result: $Utils.Optional<Stage_tagsCountAggregateOutputType> | number
          }
        }
      }
      tags: {
        payload: Prisma.$tagsPayload<ExtArgs>
        fields: Prisma.tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          findFirst: {
            args: Prisma.tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          findMany: {
            args: Prisma.tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>[]
          }
          create: {
            args: Prisma.tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          createMany: {
            args: Prisma.tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tagsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>[]
          }
          delete: {
            args: Prisma.tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          update: {
            args: Prisma.tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          deleteMany: {
            args: Prisma.tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tagsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>[]
          }
          upsert: {
            args: Prisma.tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          aggregate: {
            args: Prisma.TagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTags>
          }
          groupBy: {
            args: Prisma.tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.tagsCountArgs<ExtArgs>
            result: $Utils.Optional<TagsCountAggregateOutputType> | number
          }
        }
      }
      tasks: {
        payload: Prisma.$tasksPayload<ExtArgs>
        fields: Prisma.tasksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tasksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tasksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          findFirst: {
            args: Prisma.tasksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tasksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          findMany: {
            args: Prisma.tasksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>[]
          }
          create: {
            args: Prisma.tasksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          createMany: {
            args: Prisma.tasksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tasksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>[]
          }
          delete: {
            args: Prisma.tasksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          update: {
            args: Prisma.tasksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          deleteMany: {
            args: Prisma.tasksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tasksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tasksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>[]
          }
          upsert: {
            args: Prisma.tasksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          aggregate: {
            args: Prisma.TasksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTasks>
          }
          groupBy: {
            args: Prisma.tasksGroupByArgs<ExtArgs>
            result: $Utils.Optional<TasksGroupByOutputType>[]
          }
          count: {
            args: Prisma.tasksCountArgs<ExtArgs>
            result: $Utils.Optional<TasksCountAggregateOutputType> | number
          }
        }
      }
      time_logs: {
        payload: Prisma.$time_logsPayload<ExtArgs>
        fields: Prisma.time_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.time_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.time_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>
          }
          findFirst: {
            args: Prisma.time_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.time_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>
          }
          findMany: {
            args: Prisma.time_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>[]
          }
          create: {
            args: Prisma.time_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>
          }
          createMany: {
            args: Prisma.time_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.time_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>[]
          }
          delete: {
            args: Prisma.time_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>
          }
          update: {
            args: Prisma.time_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>
          }
          deleteMany: {
            args: Prisma.time_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.time_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.time_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>[]
          }
          upsert: {
            args: Prisma.time_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$time_logsPayload>
          }
          aggregate: {
            args: Prisma.Time_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTime_logs>
          }
          groupBy: {
            args: Prisma.time_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Time_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.time_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Time_logsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    addresses?: addressesOmit
    clients?: clientsOmit
    document_tags?: document_tagsOmit
    documents?: documentsOmit
    events?: eventsOmit
    materials?: materialsOmit
    project_materials?: project_materialsOmit
    project_media?: project_mediaOmit
    project_staff?: project_staffOmit
    project_stages?: project_stagesOmit
    project_tags?: project_tagsOmit
    projects?: projectsOmit
    roles?: rolesOmit
    site_reports?: site_reportsOmit
    staff?: staffOmit
    stage_checklists?: stage_checklistsOmit
    stage_tags?: stage_tagsOmit
    tags?: tagsOmit
    tasks?: tasksOmit
    time_logs?: time_logsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AddressesCountOutputType
   */

  export type AddressesCountOutputType = {
    clients: number
    projects: number
    staff: number
  }

  export type AddressesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | AddressesCountOutputTypeCountClientsArgs
    projects?: boolean | AddressesCountOutputTypeCountProjectsArgs
    staff?: boolean | AddressesCountOutputTypeCountStaffArgs
  }

  // Custom InputTypes
  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AddressesCountOutputType
     */
    select?: AddressesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeCountClientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientsWhereInput
  }

  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeCountProjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectsWhereInput
  }

  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeCountStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: staffWhereInput
  }


  /**
   * Count Type ClientsCountOutputType
   */

  export type ClientsCountOutputType = {
    documents: number
    events: number
    projects: number
  }

  export type ClientsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | ClientsCountOutputTypeCountDocumentsArgs
    events?: boolean | ClientsCountOutputTypeCountEventsArgs
    projects?: boolean | ClientsCountOutputTypeCountProjectsArgs
  }

  // Custom InputTypes
  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientsCountOutputType
     */
    select?: ClientsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: documentsWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: eventsWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountProjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectsWhereInput
  }


  /**
   * Count Type DocumentsCountOutputType
   */

  export type DocumentsCountOutputType = {
    document_tags: number
  }

  export type DocumentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    document_tags?: boolean | DocumentsCountOutputTypeCountDocument_tagsArgs
  }

  // Custom InputTypes
  /**
   * DocumentsCountOutputType without action
   */
  export type DocumentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentsCountOutputType
     */
    select?: DocumentsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DocumentsCountOutputType without action
   */
  export type DocumentsCountOutputTypeCountDocument_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_tagsWhereInput
  }


  /**
   * Count Type MaterialsCountOutputType
   */

  export type MaterialsCountOutputType = {
    project_materials: number
  }

  export type MaterialsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project_materials?: boolean | MaterialsCountOutputTypeCountProject_materialsArgs
  }

  // Custom InputTypes
  /**
   * MaterialsCountOutputType without action
   */
  export type MaterialsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialsCountOutputType
     */
    select?: MaterialsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaterialsCountOutputType without action
   */
  export type MaterialsCountOutputTypeCountProject_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_materialsWhereInput
  }


  /**
   * Count Type Project_stagesCountOutputType
   */

  export type Project_stagesCountOutputType = {
    project_materials: number
    project_media: number
    project_staff: number
    site_reports: number
    stage_checklists: number
    stage_tags: number
    tasks: number
    time_logs: number
  }

  export type Project_stagesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project_materials?: boolean | Project_stagesCountOutputTypeCountProject_materialsArgs
    project_media?: boolean | Project_stagesCountOutputTypeCountProject_mediaArgs
    project_staff?: boolean | Project_stagesCountOutputTypeCountProject_staffArgs
    site_reports?: boolean | Project_stagesCountOutputTypeCountSite_reportsArgs
    stage_checklists?: boolean | Project_stagesCountOutputTypeCountStage_checklistsArgs
    stage_tags?: boolean | Project_stagesCountOutputTypeCountStage_tagsArgs
    tasks?: boolean | Project_stagesCountOutputTypeCountTasksArgs
    time_logs?: boolean | Project_stagesCountOutputTypeCountTime_logsArgs
  }

  // Custom InputTypes
  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project_stagesCountOutputType
     */
    select?: Project_stagesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountProject_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_materialsWhereInput
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountProject_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_mediaWhereInput
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountProject_staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_staffWhereInput
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountSite_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: site_reportsWhereInput
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountStage_checklistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stage_checklistsWhereInput
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountStage_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stage_tagsWhereInput
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
  }

  /**
   * Project_stagesCountOutputType without action
   */
  export type Project_stagesCountOutputTypeCountTime_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: time_logsWhereInput
  }


  /**
   * Count Type ProjectsCountOutputType
   */

  export type ProjectsCountOutputType = {
    documents: number
    events: number
    project_materials: number
    project_media: number
    project_staff: number
    project_stages: number
    project_tags: number
    site_reports: number
    time_logs: number
  }

  export type ProjectsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | ProjectsCountOutputTypeCountDocumentsArgs
    events?: boolean | ProjectsCountOutputTypeCountEventsArgs
    project_materials?: boolean | ProjectsCountOutputTypeCountProject_materialsArgs
    project_media?: boolean | ProjectsCountOutputTypeCountProject_mediaArgs
    project_staff?: boolean | ProjectsCountOutputTypeCountProject_staffArgs
    project_stages?: boolean | ProjectsCountOutputTypeCountProject_stagesArgs
    project_tags?: boolean | ProjectsCountOutputTypeCountProject_tagsArgs
    site_reports?: boolean | ProjectsCountOutputTypeCountSite_reportsArgs
    time_logs?: boolean | ProjectsCountOutputTypeCountTime_logsArgs
  }

  // Custom InputTypes
  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectsCountOutputType
     */
    select?: ProjectsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: documentsWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: eventsWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountProject_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_materialsWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountProject_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_mediaWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountProject_staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_staffWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountProject_stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_stagesWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountProject_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_tagsWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountSite_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: site_reportsWhereInput
  }

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountTime_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: time_logsWhereInput
  }


  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    staff: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | RolesCountOutputTypeCountStaffArgs
  }

  // Custom InputTypes
  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: staffWhereInput
  }


  /**
   * Count Type StaffCountOutputType
   */

  export type StaffCountOutputType = {
    events: number
    project_media: number
    project_staff: number
    site_reports: number
    stage_checklists: number
    tasks: number
    time_logs: number
  }

  export type StaffCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | StaffCountOutputTypeCountEventsArgs
    project_media?: boolean | StaffCountOutputTypeCountProject_mediaArgs
    project_staff?: boolean | StaffCountOutputTypeCountProject_staffArgs
    site_reports?: boolean | StaffCountOutputTypeCountSite_reportsArgs
    stage_checklists?: boolean | StaffCountOutputTypeCountStage_checklistsArgs
    tasks?: boolean | StaffCountOutputTypeCountTasksArgs
    time_logs?: boolean | StaffCountOutputTypeCountTime_logsArgs
  }

  // Custom InputTypes
  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCountOutputType
     */
    select?: StaffCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: eventsWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountProject_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_mediaWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountProject_staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_staffWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountSite_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: site_reportsWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountStage_checklistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stage_checklistsWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountTime_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: time_logsWhereInput
  }


  /**
   * Count Type TagsCountOutputType
   */

  export type TagsCountOutputType = {
    document_tags: number
    project_tags: number
    stage_tags: number
  }

  export type TagsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    document_tags?: boolean | TagsCountOutputTypeCountDocument_tagsArgs
    project_tags?: boolean | TagsCountOutputTypeCountProject_tagsArgs
    stage_tags?: boolean | TagsCountOutputTypeCountStage_tagsArgs
  }

  // Custom InputTypes
  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagsCountOutputType
     */
    select?: TagsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountDocument_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_tagsWhereInput
  }

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountProject_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_tagsWhereInput
  }

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountStage_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stage_tagsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model addresses
   */

  export type AggregateAddresses = {
    _count: AddressesCountAggregateOutputType | null
    _avg: AddressesAvgAggregateOutputType | null
    _sum: AddressesSumAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  export type AddressesAvgAggregateOutputType = {
    id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type AddressesSumAggregateOutputType = {
    id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type AddressesMinAggregateOutputType = {
    id: number | null
    street_number: string | null
    street_name: string | null
    additional_address: string | null
    zip_code: string | null
    city: string | null
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AddressesMaxAggregateOutputType = {
    id: number | null
    street_number: string | null
    street_name: string | null
    additional_address: string | null
    zip_code: string | null
    city: string | null
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AddressesCountAggregateOutputType = {
    id: number
    street_number: number
    street_name: number
    additional_address: number
    zip_code: number
    city: number
    country: number
    latitude: number
    longitude: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type AddressesAvgAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
  }

  export type AddressesSumAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
  }

  export type AddressesMinAggregateInputType = {
    id?: true
    street_number?: true
    street_name?: true
    additional_address?: true
    zip_code?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    created_at?: true
    updated_at?: true
  }

  export type AddressesMaxAggregateInputType = {
    id?: true
    street_number?: true
    street_name?: true
    additional_address?: true
    zip_code?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    created_at?: true
    updated_at?: true
  }

  export type AddressesCountAggregateInputType = {
    id?: true
    street_number?: true
    street_name?: true
    additional_address?: true
    zip_code?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type AddressesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which addresses to aggregate.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned addresses
    **/
    _count?: true | AddressesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AddressesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AddressesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressesMaxAggregateInputType
  }

  export type GetAddressesAggregateType<T extends AddressesAggregateArgs> = {
        [P in keyof T & keyof AggregateAddresses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddresses[P]>
      : GetScalarType<T[P], AggregateAddresses[P]>
  }




  export type addressesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: addressesWhereInput
    orderBy?: addressesOrderByWithAggregationInput | addressesOrderByWithAggregationInput[]
    by: AddressesScalarFieldEnum[] | AddressesScalarFieldEnum
    having?: addressesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressesCountAggregateInputType | true
    _avg?: AddressesAvgAggregateInputType
    _sum?: AddressesSumAggregateInputType
    _min?: AddressesMinAggregateInputType
    _max?: AddressesMaxAggregateInputType
  }

  export type AddressesGroupByOutputType = {
    id: number
    street_number: string | null
    street_name: string
    additional_address: string | null
    zip_code: string
    city: string
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    _count: AddressesCountAggregateOutputType | null
    _avg: AddressesAvgAggregateOutputType | null
    _sum: AddressesSumAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  type GetAddressesGroupByPayload<T extends addressesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressesGroupByOutputType[P]>
            : GetScalarType<T[P], AddressesGroupByOutputType[P]>
        }
      >
    >


  export type addressesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    street_number?: boolean
    street_name?: boolean
    additional_address?: boolean
    zip_code?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | addresses$clientsArgs<ExtArgs>
    projects?: boolean | addresses$projectsArgs<ExtArgs>
    staff?: boolean | addresses$staffArgs<ExtArgs>
    _count?: boolean | AddressesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["addresses"]>

  export type addressesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    street_number?: boolean
    street_name?: boolean
    additional_address?: boolean
    zip_code?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["addresses"]>

  export type addressesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    street_number?: boolean
    street_name?: boolean
    additional_address?: boolean
    zip_code?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["addresses"]>

  export type addressesSelectScalar = {
    id?: boolean
    street_number?: boolean
    street_name?: boolean
    additional_address?: boolean
    zip_code?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type addressesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "street_number" | "street_name" | "additional_address" | "zip_code" | "city" | "country" | "latitude" | "longitude" | "created_at" | "updated_at", ExtArgs["result"]["addresses"]>
  export type addressesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | addresses$clientsArgs<ExtArgs>
    projects?: boolean | addresses$projectsArgs<ExtArgs>
    staff?: boolean | addresses$staffArgs<ExtArgs>
    _count?: boolean | AddressesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type addressesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type addressesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $addressesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "addresses"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs>[]
      projects: Prisma.$projectsPayload<ExtArgs>[]
      staff: Prisma.$staffPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      street_number: string | null
      street_name: string
      additional_address: string | null
      zip_code: string
      city: string
      country: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["addresses"]>
    composites: {}
  }

  type addressesGetPayload<S extends boolean | null | undefined | addressesDefaultArgs> = $Result.GetResult<Prisma.$addressesPayload, S>

  type addressesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<addressesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressesCountAggregateInputType | true
    }

  export interface addressesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['addresses'], meta: { name: 'addresses' } }
    /**
     * Find zero or one Addresses that matches the filter.
     * @param {addressesFindUniqueArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends addressesFindUniqueArgs>(args: SelectSubset<T, addressesFindUniqueArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Addresses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {addressesFindUniqueOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends addressesFindUniqueOrThrowArgs>(args: SelectSubset<T, addressesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindFirstArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends addressesFindFirstArgs>(args?: SelectSubset<T, addressesFindFirstArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Addresses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindFirstOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends addressesFindFirstOrThrowArgs>(args?: SelectSubset<T, addressesFindFirstOrThrowArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.addresses.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.addresses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressesWithIdOnly = await prisma.addresses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends addressesFindManyArgs>(args?: SelectSubset<T, addressesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Addresses.
     * @param {addressesCreateArgs} args - Arguments to create a Addresses.
     * @example
     * // Create one Addresses
     * const Addresses = await prisma.addresses.create({
     *   data: {
     *     // ... data to create a Addresses
     *   }
     * })
     * 
     */
    create<T extends addressesCreateArgs>(args: SelectSubset<T, addressesCreateArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Addresses.
     * @param {addressesCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const addresses = await prisma.addresses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends addressesCreateManyArgs>(args?: SelectSubset<T, addressesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {addressesCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const addresses = await prisma.addresses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `id`
     * const addressesWithIdOnly = await prisma.addresses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends addressesCreateManyAndReturnArgs>(args?: SelectSubset<T, addressesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Addresses.
     * @param {addressesDeleteArgs} args - Arguments to delete one Addresses.
     * @example
     * // Delete one Addresses
     * const Addresses = await prisma.addresses.delete({
     *   where: {
     *     // ... filter to delete one Addresses
     *   }
     * })
     * 
     */
    delete<T extends addressesDeleteArgs>(args: SelectSubset<T, addressesDeleteArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Addresses.
     * @param {addressesUpdateArgs} args - Arguments to update one Addresses.
     * @example
     * // Update one Addresses
     * const addresses = await prisma.addresses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends addressesUpdateArgs>(args: SelectSubset<T, addressesUpdateArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Addresses.
     * @param {addressesDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.addresses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends addressesDeleteManyArgs>(args?: SelectSubset<T, addressesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const addresses = await prisma.addresses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends addressesUpdateManyArgs>(args: SelectSubset<T, addressesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses and returns the data updated in the database.
     * @param {addressesUpdateManyAndReturnArgs} args - Arguments to update many Addresses.
     * @example
     * // Update many Addresses
     * const addresses = await prisma.addresses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Addresses and only return the `id`
     * const addressesWithIdOnly = await prisma.addresses.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends addressesUpdateManyAndReturnArgs>(args: SelectSubset<T, addressesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Addresses.
     * @param {addressesUpsertArgs} args - Arguments to update or create a Addresses.
     * @example
     * // Update or create a Addresses
     * const addresses = await prisma.addresses.upsert({
     *   create: {
     *     // ... data to create a Addresses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Addresses we want to update
     *   }
     * })
     */
    upsert<T extends addressesUpsertArgs>(args: SelectSubset<T, addressesUpsertArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.addresses.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends addressesCountArgs>(
      args?: Subset<T, addressesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressesAggregateArgs>(args: Subset<T, AddressesAggregateArgs>): Prisma.PrismaPromise<GetAddressesAggregateType<T>>

    /**
     * Group by Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {addressesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends addressesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: addressesGroupByArgs['orderBy'] }
        : { orderBy?: addressesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, addressesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the addresses model
   */
  readonly fields: addressesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for addresses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__addressesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends addresses$clientsArgs<ExtArgs> = {}>(args?: Subset<T, addresses$clientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    projects<T extends addresses$projectsArgs<ExtArgs> = {}>(args?: Subset<T, addresses$projectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    staff<T extends addresses$staffArgs<ExtArgs> = {}>(args?: Subset<T, addresses$staffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the addresses model
   */
  interface addressesFieldRefs {
    readonly id: FieldRef<"addresses", 'Int'>
    readonly street_number: FieldRef<"addresses", 'String'>
    readonly street_name: FieldRef<"addresses", 'String'>
    readonly additional_address: FieldRef<"addresses", 'String'>
    readonly zip_code: FieldRef<"addresses", 'String'>
    readonly city: FieldRef<"addresses", 'String'>
    readonly country: FieldRef<"addresses", 'String'>
    readonly latitude: FieldRef<"addresses", 'Decimal'>
    readonly longitude: FieldRef<"addresses", 'Decimal'>
    readonly created_at: FieldRef<"addresses", 'DateTime'>
    readonly updated_at: FieldRef<"addresses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * addresses findUnique
   */
  export type addressesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses findUniqueOrThrow
   */
  export type addressesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses findFirst
   */
  export type addressesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses findFirstOrThrow
   */
  export type addressesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses findMany
   */
  export type addressesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter, which addresses to fetch.
     */
    where?: addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of addresses to fetch.
     */
    orderBy?: addressesOrderByWithRelationInput | addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing addresses.
     */
    cursor?: addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` addresses.
     */
    skip?: number
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * addresses create
   */
  export type addressesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The data needed to create a addresses.
     */
    data: XOR<addressesCreateInput, addressesUncheckedCreateInput>
  }

  /**
   * addresses createMany
   */
  export type addressesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many addresses.
     */
    data: addressesCreateManyInput | addressesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * addresses createManyAndReturn
   */
  export type addressesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * The data used to create many addresses.
     */
    data: addressesCreateManyInput | addressesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * addresses update
   */
  export type addressesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The data needed to update a addresses.
     */
    data: XOR<addressesUpdateInput, addressesUncheckedUpdateInput>
    /**
     * Choose, which addresses to update.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses updateMany
   */
  export type addressesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update addresses.
     */
    data: XOR<addressesUpdateManyMutationInput, addressesUncheckedUpdateManyInput>
    /**
     * Filter which addresses to update
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to update.
     */
    limit?: number
  }

  /**
   * addresses updateManyAndReturn
   */
  export type addressesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * The data used to update addresses.
     */
    data: XOR<addressesUpdateManyMutationInput, addressesUncheckedUpdateManyInput>
    /**
     * Filter which addresses to update
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to update.
     */
    limit?: number
  }

  /**
   * addresses upsert
   */
  export type addressesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * The filter to search for the addresses to update in case it exists.
     */
    where: addressesWhereUniqueInput
    /**
     * In case the addresses found by the `where` argument doesn't exist, create a new addresses with this data.
     */
    create: XOR<addressesCreateInput, addressesUncheckedCreateInput>
    /**
     * In case the addresses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<addressesUpdateInput, addressesUncheckedUpdateInput>
  }

  /**
   * addresses delete
   */
  export type addressesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    /**
     * Filter which addresses to delete.
     */
    where: addressesWhereUniqueInput
  }

  /**
   * addresses deleteMany
   */
  export type addressesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which addresses to delete
     */
    where?: addressesWhereInput
    /**
     * Limit how many addresses to delete.
     */
    limit?: number
  }

  /**
   * addresses.clients
   */
  export type addresses$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    cursor?: clientsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * addresses.projects
   */
  export type addresses$projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    where?: projectsWhereInput
    orderBy?: projectsOrderByWithRelationInput | projectsOrderByWithRelationInput[]
    cursor?: projectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectsScalarFieldEnum | ProjectsScalarFieldEnum[]
  }

  /**
   * addresses.staff
   */
  export type addresses$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    where?: staffWhereInput
    orderBy?: staffOrderByWithRelationInput | staffOrderByWithRelationInput[]
    cursor?: staffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * addresses without action
   */
  export type addressesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
  }


  /**
   * Model clients
   */

  export type AggregateClients = {
    _count: ClientsCountAggregateOutputType | null
    _avg: ClientsAvgAggregateOutputType | null
    _sum: ClientsSumAggregateOutputType | null
    _min: ClientsMinAggregateOutputType | null
    _max: ClientsMaxAggregateOutputType | null
  }

  export type ClientsAvgAggregateOutputType = {
    id: number | null
    address_id: number | null
  }

  export type ClientsSumAggregateOutputType = {
    id: number | null
    address_id: number | null
  }

  export type ClientsMinAggregateOutputType = {
    id: number | null
    company_name: string | null
    firstname: string | null
    lastname: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    address_id: number | null
    siret: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ClientsMaxAggregateOutputType = {
    id: number | null
    company_name: string | null
    firstname: string | null
    lastname: string | null
    email: string | null
    phone: string | null
    mobile: string | null
    address_id: number | null
    siret: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ClientsCountAggregateOutputType = {
    id: number
    company_name: number
    firstname: number
    lastname: number
    email: number
    phone: number
    mobile: number
    address_id: number
    siret: number
    notes: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ClientsAvgAggregateInputType = {
    id?: true
    address_id?: true
  }

  export type ClientsSumAggregateInputType = {
    id?: true
    address_id?: true
  }

  export type ClientsMinAggregateInputType = {
    id?: true
    company_name?: true
    firstname?: true
    lastname?: true
    email?: true
    phone?: true
    mobile?: true
    address_id?: true
    siret?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type ClientsMaxAggregateInputType = {
    id?: true
    company_name?: true
    firstname?: true
    lastname?: true
    email?: true
    phone?: true
    mobile?: true
    address_id?: true
    siret?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type ClientsCountAggregateInputType = {
    id?: true
    company_name?: true
    firstname?: true
    lastname?: true
    email?: true
    phone?: true
    mobile?: true
    address_id?: true
    siret?: true
    notes?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ClientsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clients to aggregate.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clients
    **/
    _count?: true | ClientsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientsMaxAggregateInputType
  }

  export type GetClientsAggregateType<T extends ClientsAggregateArgs> = {
        [P in keyof T & keyof AggregateClients]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClients[P]>
      : GetScalarType<T[P], AggregateClients[P]>
  }




  export type clientsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientsWhereInput
    orderBy?: clientsOrderByWithAggregationInput | clientsOrderByWithAggregationInput[]
    by: ClientsScalarFieldEnum[] | ClientsScalarFieldEnum
    having?: clientsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientsCountAggregateInputType | true
    _avg?: ClientsAvgAggregateInputType
    _sum?: ClientsSumAggregateInputType
    _min?: ClientsMinAggregateInputType
    _max?: ClientsMaxAggregateInputType
  }

  export type ClientsGroupByOutputType = {
    id: number
    company_name: string | null
    firstname: string
    lastname: string
    email: string
    phone: string | null
    mobile: string | null
    address_id: number | null
    siret: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: ClientsCountAggregateOutputType | null
    _avg: ClientsAvgAggregateOutputType | null
    _sum: ClientsSumAggregateOutputType | null
    _min: ClientsMinAggregateOutputType | null
    _max: ClientsMaxAggregateOutputType | null
  }

  type GetClientsGroupByPayload<T extends clientsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientsGroupByOutputType[P]>
            : GetScalarType<T[P], ClientsGroupByOutputType[P]>
        }
      >
    >


  export type clientsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    siret?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    addresses?: boolean | clients$addressesArgs<ExtArgs>
    documents?: boolean | clients$documentsArgs<ExtArgs>
    events?: boolean | clients$eventsArgs<ExtArgs>
    projects?: boolean | clients$projectsArgs<ExtArgs>
    _count?: boolean | ClientsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clients"]>

  export type clientsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    siret?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    addresses?: boolean | clients$addressesArgs<ExtArgs>
  }, ExtArgs["result"]["clients"]>

  export type clientsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    siret?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    addresses?: boolean | clients$addressesArgs<ExtArgs>
  }, ExtArgs["result"]["clients"]>

  export type clientsSelectScalar = {
    id?: boolean
    company_name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    siret?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type clientsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "company_name" | "firstname" | "lastname" | "email" | "phone" | "mobile" | "address_id" | "siret" | "notes" | "created_at" | "updated_at", ExtArgs["result"]["clients"]>
  export type clientsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | clients$addressesArgs<ExtArgs>
    documents?: boolean | clients$documentsArgs<ExtArgs>
    events?: boolean | clients$eventsArgs<ExtArgs>
    projects?: boolean | clients$projectsArgs<ExtArgs>
    _count?: boolean | ClientsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type clientsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | clients$addressesArgs<ExtArgs>
  }
  export type clientsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | clients$addressesArgs<ExtArgs>
  }

  export type $clientsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "clients"
    objects: {
      addresses: Prisma.$addressesPayload<ExtArgs> | null
      documents: Prisma.$documentsPayload<ExtArgs>[]
      events: Prisma.$eventsPayload<ExtArgs>[]
      projects: Prisma.$projectsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      company_name: string | null
      firstname: string
      lastname: string
      email: string
      phone: string | null
      mobile: string | null
      address_id: number | null
      siret: string | null
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["clients"]>
    composites: {}
  }

  type clientsGetPayload<S extends boolean | null | undefined | clientsDefaultArgs> = $Result.GetResult<Prisma.$clientsPayload, S>

  type clientsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<clientsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientsCountAggregateInputType | true
    }

  export interface clientsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['clients'], meta: { name: 'clients' } }
    /**
     * Find zero or one Clients that matches the filter.
     * @param {clientsFindUniqueArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends clientsFindUniqueArgs>(args: SelectSubset<T, clientsFindUniqueArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Clients that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {clientsFindUniqueOrThrowArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends clientsFindUniqueOrThrowArgs>(args: SelectSubset<T, clientsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindFirstArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends clientsFindFirstArgs>(args?: SelectSubset<T, clientsFindFirstArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clients that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindFirstOrThrowArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends clientsFindFirstOrThrowArgs>(args?: SelectSubset<T, clientsFindFirstOrThrowArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.clients.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.clients.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientsWithIdOnly = await prisma.clients.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends clientsFindManyArgs>(args?: SelectSubset<T, clientsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Clients.
     * @param {clientsCreateArgs} args - Arguments to create a Clients.
     * @example
     * // Create one Clients
     * const Clients = await prisma.clients.create({
     *   data: {
     *     // ... data to create a Clients
     *   }
     * })
     * 
     */
    create<T extends clientsCreateArgs>(args: SelectSubset<T, clientsCreateArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clients.
     * @param {clientsCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const clients = await prisma.clients.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends clientsCreateManyArgs>(args?: SelectSubset<T, clientsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {clientsCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const clients = await prisma.clients.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientsWithIdOnly = await prisma.clients.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends clientsCreateManyAndReturnArgs>(args?: SelectSubset<T, clientsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Clients.
     * @param {clientsDeleteArgs} args - Arguments to delete one Clients.
     * @example
     * // Delete one Clients
     * const Clients = await prisma.clients.delete({
     *   where: {
     *     // ... filter to delete one Clients
     *   }
     * })
     * 
     */
    delete<T extends clientsDeleteArgs>(args: SelectSubset<T, clientsDeleteArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Clients.
     * @param {clientsUpdateArgs} args - Arguments to update one Clients.
     * @example
     * // Update one Clients
     * const clients = await prisma.clients.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends clientsUpdateArgs>(args: SelectSubset<T, clientsUpdateArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clients.
     * @param {clientsDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.clients.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends clientsDeleteManyArgs>(args?: SelectSubset<T, clientsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const clients = await prisma.clients.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends clientsUpdateManyArgs>(args: SelectSubset<T, clientsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients and returns the data updated in the database.
     * @param {clientsUpdateManyAndReturnArgs} args - Arguments to update many Clients.
     * @example
     * // Update many Clients
     * const clients = await prisma.clients.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clients and only return the `id`
     * const clientsWithIdOnly = await prisma.clients.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends clientsUpdateManyAndReturnArgs>(args: SelectSubset<T, clientsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Clients.
     * @param {clientsUpsertArgs} args - Arguments to update or create a Clients.
     * @example
     * // Update or create a Clients
     * const clients = await prisma.clients.upsert({
     *   create: {
     *     // ... data to create a Clients
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clients we want to update
     *   }
     * })
     */
    upsert<T extends clientsUpsertArgs>(args: SelectSubset<T, clientsUpsertArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.clients.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends clientsCountArgs>(
      args?: Subset<T, clientsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientsAggregateArgs>(args: Subset<T, ClientsAggregateArgs>): Prisma.PrismaPromise<GetClientsAggregateType<T>>

    /**
     * Group by Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clientsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clientsGroupByArgs['orderBy'] }
        : { orderBy?: clientsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clientsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the clients model
   */
  readonly fields: clientsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for clients.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clientsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    addresses<T extends clients$addressesArgs<ExtArgs> = {}>(args?: Subset<T, clients$addressesArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    documents<T extends clients$documentsArgs<ExtArgs> = {}>(args?: Subset<T, clients$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends clients$eventsArgs<ExtArgs> = {}>(args?: Subset<T, clients$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    projects<T extends clients$projectsArgs<ExtArgs> = {}>(args?: Subset<T, clients$projectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the clients model
   */
  interface clientsFieldRefs {
    readonly id: FieldRef<"clients", 'Int'>
    readonly company_name: FieldRef<"clients", 'String'>
    readonly firstname: FieldRef<"clients", 'String'>
    readonly lastname: FieldRef<"clients", 'String'>
    readonly email: FieldRef<"clients", 'String'>
    readonly phone: FieldRef<"clients", 'String'>
    readonly mobile: FieldRef<"clients", 'String'>
    readonly address_id: FieldRef<"clients", 'Int'>
    readonly siret: FieldRef<"clients", 'String'>
    readonly notes: FieldRef<"clients", 'String'>
    readonly created_at: FieldRef<"clients", 'DateTime'>
    readonly updated_at: FieldRef<"clients", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * clients findUnique
   */
  export type clientsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients findUniqueOrThrow
   */
  export type clientsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients findFirst
   */
  export type clientsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clients.
     */
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients findFirstOrThrow
   */
  export type clientsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clients.
     */
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients findMany
   */
  export type clientsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients create
   */
  export type clientsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The data needed to create a clients.
     */
    data: XOR<clientsCreateInput, clientsUncheckedCreateInput>
  }

  /**
   * clients createMany
   */
  export type clientsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clients.
     */
    data: clientsCreateManyInput | clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * clients createManyAndReturn
   */
  export type clientsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * The data used to create many clients.
     */
    data: clientsCreateManyInput | clientsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * clients update
   */
  export type clientsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The data needed to update a clients.
     */
    data: XOR<clientsUpdateInput, clientsUncheckedUpdateInput>
    /**
     * Choose, which clients to update.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients updateMany
   */
  export type clientsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clients.
     */
    data: XOR<clientsUpdateManyMutationInput, clientsUncheckedUpdateManyInput>
    /**
     * Filter which clients to update
     */
    where?: clientsWhereInput
    /**
     * Limit how many clients to update.
     */
    limit?: number
  }

  /**
   * clients updateManyAndReturn
   */
  export type clientsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * The data used to update clients.
     */
    data: XOR<clientsUpdateManyMutationInput, clientsUncheckedUpdateManyInput>
    /**
     * Filter which clients to update
     */
    where?: clientsWhereInput
    /**
     * Limit how many clients to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * clients upsert
   */
  export type clientsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The filter to search for the clients to update in case it exists.
     */
    where: clientsWhereUniqueInput
    /**
     * In case the clients found by the `where` argument doesn't exist, create a new clients with this data.
     */
    create: XOR<clientsCreateInput, clientsUncheckedCreateInput>
    /**
     * In case the clients was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clientsUpdateInput, clientsUncheckedUpdateInput>
  }

  /**
   * clients delete
   */
  export type clientsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter which clients to delete.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients deleteMany
   */
  export type clientsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clients to delete
     */
    where?: clientsWhereInput
    /**
     * Limit how many clients to delete.
     */
    limit?: number
  }

  /**
   * clients.addresses
   */
  export type clients$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    where?: addressesWhereInput
  }

  /**
   * clients.documents
   */
  export type clients$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    where?: documentsWhereInput
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    cursor?: documentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * clients.events
   */
  export type clients$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    where?: eventsWhereInput
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    cursor?: eventsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * clients.projects
   */
  export type clients$projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    where?: projectsWhereInput
    orderBy?: projectsOrderByWithRelationInput | projectsOrderByWithRelationInput[]
    cursor?: projectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectsScalarFieldEnum | ProjectsScalarFieldEnum[]
  }

  /**
   * clients without action
   */
  export type clientsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
  }


  /**
   * Model document_tags
   */

  export type AggregateDocument_tags = {
    _count: Document_tagsCountAggregateOutputType | null
    _avg: Document_tagsAvgAggregateOutputType | null
    _sum: Document_tagsSumAggregateOutputType | null
    _min: Document_tagsMinAggregateOutputType | null
    _max: Document_tagsMaxAggregateOutputType | null
  }

  export type Document_tagsAvgAggregateOutputType = {
    document_id: number | null
    tag_id: number | null
  }

  export type Document_tagsSumAggregateOutputType = {
    document_id: number | null
    tag_id: number | null
  }

  export type Document_tagsMinAggregateOutputType = {
    document_id: number | null
    tag_id: number | null
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Document_tagsMaxAggregateOutputType = {
    document_id: number | null
    tag_id: number | null
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Document_tagsCountAggregateOutputType = {
    document_id: number
    tag_id: number
    created_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Document_tagsAvgAggregateInputType = {
    document_id?: true
    tag_id?: true
  }

  export type Document_tagsSumAggregateInputType = {
    document_id?: true
    tag_id?: true
  }

  export type Document_tagsMinAggregateInputType = {
    document_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Document_tagsMaxAggregateInputType = {
    document_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Document_tagsCountAggregateInputType = {
    document_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Document_tagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_tags to aggregate.
     */
    where?: document_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_tags to fetch.
     */
    orderBy?: document_tagsOrderByWithRelationInput | document_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: document_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned document_tags
    **/
    _count?: true | Document_tagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Document_tagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Document_tagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Document_tagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Document_tagsMaxAggregateInputType
  }

  export type GetDocument_tagsAggregateType<T extends Document_tagsAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument_tags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument_tags[P]>
      : GetScalarType<T[P], AggregateDocument_tags[P]>
  }




  export type document_tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_tagsWhereInput
    orderBy?: document_tagsOrderByWithAggregationInput | document_tagsOrderByWithAggregationInput[]
    by: Document_tagsScalarFieldEnum[] | Document_tagsScalarFieldEnum
    having?: document_tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Document_tagsCountAggregateInputType | true
    _avg?: Document_tagsAvgAggregateInputType
    _sum?: Document_tagsSumAggregateInputType
    _min?: Document_tagsMinAggregateInputType
    _max?: Document_tagsMaxAggregateInputType
  }

  export type Document_tagsGroupByOutputType = {
    document_id: number
    tag_id: number
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Document_tagsCountAggregateOutputType | null
    _avg: Document_tagsAvgAggregateOutputType | null
    _sum: Document_tagsSumAggregateOutputType | null
    _min: Document_tagsMinAggregateOutputType | null
    _max: Document_tagsMaxAggregateOutputType | null
  }

  type GetDocument_tagsGroupByPayload<T extends document_tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Document_tagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Document_tagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Document_tagsGroupByOutputType[P]>
            : GetScalarType<T[P], Document_tagsGroupByOutputType[P]>
        }
      >
    >


  export type document_tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    document_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    documents?: boolean | documentsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_tags"]>

  export type document_tagsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    document_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    documents?: boolean | documentsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_tags"]>

  export type document_tagsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    document_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    documents?: boolean | documentsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_tags"]>

  export type document_tagsSelectScalar = {
    document_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type document_tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"document_id" | "tag_id" | "created_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["document_tags"]>
  export type document_tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | documentsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type document_tagsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | documentsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type document_tagsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | documentsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }

  export type $document_tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "document_tags"
    objects: {
      documents: Prisma.$documentsPayload<ExtArgs>
      tags: Prisma.$tagsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      document_id: number
      tag_id: number
      created_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["document_tags"]>
    composites: {}
  }

  type document_tagsGetPayload<S extends boolean | null | undefined | document_tagsDefaultArgs> = $Result.GetResult<Prisma.$document_tagsPayload, S>

  type document_tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<document_tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Document_tagsCountAggregateInputType | true
    }

  export interface document_tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['document_tags'], meta: { name: 'document_tags' } }
    /**
     * Find zero or one Document_tags that matches the filter.
     * @param {document_tagsFindUniqueArgs} args - Arguments to find a Document_tags
     * @example
     * // Get one Document_tags
     * const document_tags = await prisma.document_tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends document_tagsFindUniqueArgs>(args: SelectSubset<T, document_tagsFindUniqueArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Document_tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {document_tagsFindUniqueOrThrowArgs} args - Arguments to find a Document_tags
     * @example
     * // Get one Document_tags
     * const document_tags = await prisma.document_tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends document_tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, document_tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_tagsFindFirstArgs} args - Arguments to find a Document_tags
     * @example
     * // Get one Document_tags
     * const document_tags = await prisma.document_tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends document_tagsFindFirstArgs>(args?: SelectSubset<T, document_tagsFindFirstArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document_tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_tagsFindFirstOrThrowArgs} args - Arguments to find a Document_tags
     * @example
     * // Get one Document_tags
     * const document_tags = await prisma.document_tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends document_tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, document_tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Document_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Document_tags
     * const document_tags = await prisma.document_tags.findMany()
     * 
     * // Get first 10 Document_tags
     * const document_tags = await prisma.document_tags.findMany({ take: 10 })
     * 
     * // Only select the `document_id`
     * const document_tagsWithDocument_idOnly = await prisma.document_tags.findMany({ select: { document_id: true } })
     * 
     */
    findMany<T extends document_tagsFindManyArgs>(args?: SelectSubset<T, document_tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Document_tags.
     * @param {document_tagsCreateArgs} args - Arguments to create a Document_tags.
     * @example
     * // Create one Document_tags
     * const Document_tags = await prisma.document_tags.create({
     *   data: {
     *     // ... data to create a Document_tags
     *   }
     * })
     * 
     */
    create<T extends document_tagsCreateArgs>(args: SelectSubset<T, document_tagsCreateArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Document_tags.
     * @param {document_tagsCreateManyArgs} args - Arguments to create many Document_tags.
     * @example
     * // Create many Document_tags
     * const document_tags = await prisma.document_tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends document_tagsCreateManyArgs>(args?: SelectSubset<T, document_tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Document_tags and returns the data saved in the database.
     * @param {document_tagsCreateManyAndReturnArgs} args - Arguments to create many Document_tags.
     * @example
     * // Create many Document_tags
     * const document_tags = await prisma.document_tags.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Document_tags and only return the `document_id`
     * const document_tagsWithDocument_idOnly = await prisma.document_tags.createManyAndReturn({
     *   select: { document_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends document_tagsCreateManyAndReturnArgs>(args?: SelectSubset<T, document_tagsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Document_tags.
     * @param {document_tagsDeleteArgs} args - Arguments to delete one Document_tags.
     * @example
     * // Delete one Document_tags
     * const Document_tags = await prisma.document_tags.delete({
     *   where: {
     *     // ... filter to delete one Document_tags
     *   }
     * })
     * 
     */
    delete<T extends document_tagsDeleteArgs>(args: SelectSubset<T, document_tagsDeleteArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Document_tags.
     * @param {document_tagsUpdateArgs} args - Arguments to update one Document_tags.
     * @example
     * // Update one Document_tags
     * const document_tags = await prisma.document_tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends document_tagsUpdateArgs>(args: SelectSubset<T, document_tagsUpdateArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Document_tags.
     * @param {document_tagsDeleteManyArgs} args - Arguments to filter Document_tags to delete.
     * @example
     * // Delete a few Document_tags
     * const { count } = await prisma.document_tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends document_tagsDeleteManyArgs>(args?: SelectSubset<T, document_tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Document_tags
     * const document_tags = await prisma.document_tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends document_tagsUpdateManyArgs>(args: SelectSubset<T, document_tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_tags and returns the data updated in the database.
     * @param {document_tagsUpdateManyAndReturnArgs} args - Arguments to update many Document_tags.
     * @example
     * // Update many Document_tags
     * const document_tags = await prisma.document_tags.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Document_tags and only return the `document_id`
     * const document_tagsWithDocument_idOnly = await prisma.document_tags.updateManyAndReturn({
     *   select: { document_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends document_tagsUpdateManyAndReturnArgs>(args: SelectSubset<T, document_tagsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Document_tags.
     * @param {document_tagsUpsertArgs} args - Arguments to update or create a Document_tags.
     * @example
     * // Update or create a Document_tags
     * const document_tags = await prisma.document_tags.upsert({
     *   create: {
     *     // ... data to create a Document_tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document_tags we want to update
     *   }
     * })
     */
    upsert<T extends document_tagsUpsertArgs>(args: SelectSubset<T, document_tagsUpsertArgs<ExtArgs>>): Prisma__document_tagsClient<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Document_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_tagsCountArgs} args - Arguments to filter Document_tags to count.
     * @example
     * // Count the number of Document_tags
     * const count = await prisma.document_tags.count({
     *   where: {
     *     // ... the filter for the Document_tags we want to count
     *   }
     * })
    **/
    count<T extends document_tagsCountArgs>(
      args?: Subset<T, document_tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Document_tagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_tagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Document_tagsAggregateArgs>(args: Subset<T, Document_tagsAggregateArgs>): Prisma.PrismaPromise<GetDocument_tagsAggregateType<T>>

    /**
     * Group by Document_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends document_tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: document_tagsGroupByArgs['orderBy'] }
        : { orderBy?: document_tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, document_tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocument_tagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the document_tags model
   */
  readonly fields: document_tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for document_tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__document_tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    documents<T extends documentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, documentsDefaultArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tags<T extends tagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tagsDefaultArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the document_tags model
   */
  interface document_tagsFieldRefs {
    readonly document_id: FieldRef<"document_tags", 'Int'>
    readonly tag_id: FieldRef<"document_tags", 'Int'>
    readonly created_at: FieldRef<"document_tags", 'DateTime'>
    readonly synced_at: FieldRef<"document_tags", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"document_tags", 'String'>
  }
    

  // Custom InputTypes
  /**
   * document_tags findUnique
   */
  export type document_tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * Filter, which document_tags to fetch.
     */
    where: document_tagsWhereUniqueInput
  }

  /**
   * document_tags findUniqueOrThrow
   */
  export type document_tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * Filter, which document_tags to fetch.
     */
    where: document_tagsWhereUniqueInput
  }

  /**
   * document_tags findFirst
   */
  export type document_tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * Filter, which document_tags to fetch.
     */
    where?: document_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_tags to fetch.
     */
    orderBy?: document_tagsOrderByWithRelationInput | document_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_tags.
     */
    cursor?: document_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_tags.
     */
    distinct?: Document_tagsScalarFieldEnum | Document_tagsScalarFieldEnum[]
  }

  /**
   * document_tags findFirstOrThrow
   */
  export type document_tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * Filter, which document_tags to fetch.
     */
    where?: document_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_tags to fetch.
     */
    orderBy?: document_tagsOrderByWithRelationInput | document_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_tags.
     */
    cursor?: document_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_tags.
     */
    distinct?: Document_tagsScalarFieldEnum | Document_tagsScalarFieldEnum[]
  }

  /**
   * document_tags findMany
   */
  export type document_tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * Filter, which document_tags to fetch.
     */
    where?: document_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_tags to fetch.
     */
    orderBy?: document_tagsOrderByWithRelationInput | document_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing document_tags.
     */
    cursor?: document_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_tags.
     */
    skip?: number
    distinct?: Document_tagsScalarFieldEnum | Document_tagsScalarFieldEnum[]
  }

  /**
   * document_tags create
   */
  export type document_tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a document_tags.
     */
    data: XOR<document_tagsCreateInput, document_tagsUncheckedCreateInput>
  }

  /**
   * document_tags createMany
   */
  export type document_tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many document_tags.
     */
    data: document_tagsCreateManyInput | document_tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document_tags createManyAndReturn
   */
  export type document_tagsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * The data used to create many document_tags.
     */
    data: document_tagsCreateManyInput | document_tagsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * document_tags update
   */
  export type document_tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a document_tags.
     */
    data: XOR<document_tagsUpdateInput, document_tagsUncheckedUpdateInput>
    /**
     * Choose, which document_tags to update.
     */
    where: document_tagsWhereUniqueInput
  }

  /**
   * document_tags updateMany
   */
  export type document_tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update document_tags.
     */
    data: XOR<document_tagsUpdateManyMutationInput, document_tagsUncheckedUpdateManyInput>
    /**
     * Filter which document_tags to update
     */
    where?: document_tagsWhereInput
    /**
     * Limit how many document_tags to update.
     */
    limit?: number
  }

  /**
   * document_tags updateManyAndReturn
   */
  export type document_tagsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * The data used to update document_tags.
     */
    data: XOR<document_tagsUpdateManyMutationInput, document_tagsUncheckedUpdateManyInput>
    /**
     * Filter which document_tags to update
     */
    where?: document_tagsWhereInput
    /**
     * Limit how many document_tags to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * document_tags upsert
   */
  export type document_tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the document_tags to update in case it exists.
     */
    where: document_tagsWhereUniqueInput
    /**
     * In case the document_tags found by the `where` argument doesn't exist, create a new document_tags with this data.
     */
    create: XOR<document_tagsCreateInput, document_tagsUncheckedCreateInput>
    /**
     * In case the document_tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<document_tagsUpdateInput, document_tagsUncheckedUpdateInput>
  }

  /**
   * document_tags delete
   */
  export type document_tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    /**
     * Filter which document_tags to delete.
     */
    where: document_tagsWhereUniqueInput
  }

  /**
   * document_tags deleteMany
   */
  export type document_tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_tags to delete
     */
    where?: document_tagsWhereInput
    /**
     * Limit how many document_tags to delete.
     */
    limit?: number
  }

  /**
   * document_tags without action
   */
  export type document_tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
  }


  /**
   * Model documents
   */

  export type AggregateDocuments = {
    _count: DocumentsCountAggregateOutputType | null
    _avg: DocumentsAvgAggregateOutputType | null
    _sum: DocumentsSumAggregateOutputType | null
    _min: DocumentsMinAggregateOutputType | null
    _max: DocumentsMaxAggregateOutputType | null
  }

  export type DocumentsAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    client_id: number | null
    amount: Decimal | null
    tva_rate: Decimal | null
  }

  export type DocumentsSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    client_id: number | null
    amount: Decimal | null
    tva_rate: Decimal | null
  }

  export type DocumentsMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    client_id: number | null
    type: $Enums.document_type | null
    reference: string | null
    status: $Enums.document_status | null
    amount: Decimal | null
    tva_rate: Decimal | null
    issue_date: Date | null
    due_date: Date | null
    payment_date: Date | null
    payment_method: string | null
    notes: string | null
    file_path: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DocumentsMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    client_id: number | null
    type: $Enums.document_type | null
    reference: string | null
    status: $Enums.document_status | null
    amount: Decimal | null
    tva_rate: Decimal | null
    issue_date: Date | null
    due_date: Date | null
    payment_date: Date | null
    payment_method: string | null
    notes: string | null
    file_path: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DocumentsCountAggregateOutputType = {
    id: number
    project_id: number
    client_id: number
    type: number
    reference: number
    status: number
    amount: number
    tva_rate: number
    issue_date: number
    due_date: number
    payment_date: number
    payment_method: number
    notes: number
    file_path: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DocumentsAvgAggregateInputType = {
    id?: true
    project_id?: true
    client_id?: true
    amount?: true
    tva_rate?: true
  }

  export type DocumentsSumAggregateInputType = {
    id?: true
    project_id?: true
    client_id?: true
    amount?: true
    tva_rate?: true
  }

  export type DocumentsMinAggregateInputType = {
    id?: true
    project_id?: true
    client_id?: true
    type?: true
    reference?: true
    status?: true
    amount?: true
    tva_rate?: true
    issue_date?: true
    due_date?: true
    payment_date?: true
    payment_method?: true
    notes?: true
    file_path?: true
    created_at?: true
    updated_at?: true
  }

  export type DocumentsMaxAggregateInputType = {
    id?: true
    project_id?: true
    client_id?: true
    type?: true
    reference?: true
    status?: true
    amount?: true
    tva_rate?: true
    issue_date?: true
    due_date?: true
    payment_date?: true
    payment_method?: true
    notes?: true
    file_path?: true
    created_at?: true
    updated_at?: true
  }

  export type DocumentsCountAggregateInputType = {
    id?: true
    project_id?: true
    client_id?: true
    type?: true
    reference?: true
    status?: true
    amount?: true
    tva_rate?: true
    issue_date?: true
    due_date?: true
    payment_date?: true
    payment_method?: true
    notes?: true
    file_path?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DocumentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which documents to aggregate.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned documents
    **/
    _count?: true | DocumentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentsMaxAggregateInputType
  }

  export type GetDocumentsAggregateType<T extends DocumentsAggregateArgs> = {
        [P in keyof T & keyof AggregateDocuments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocuments[P]>
      : GetScalarType<T[P], AggregateDocuments[P]>
  }




  export type documentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: documentsWhereInput
    orderBy?: documentsOrderByWithAggregationInput | documentsOrderByWithAggregationInput[]
    by: DocumentsScalarFieldEnum[] | DocumentsScalarFieldEnum
    having?: documentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentsCountAggregateInputType | true
    _avg?: DocumentsAvgAggregateInputType
    _sum?: DocumentsSumAggregateInputType
    _min?: DocumentsMinAggregateInputType
    _max?: DocumentsMaxAggregateInputType
  }

  export type DocumentsGroupByOutputType = {
    id: number
    project_id: number
    client_id: number | null
    type: $Enums.document_type
    reference: string
    status: $Enums.document_status | null
    amount: Decimal | null
    tva_rate: Decimal | null
    issue_date: Date
    due_date: Date | null
    payment_date: Date | null
    payment_method: string | null
    notes: string | null
    file_path: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: DocumentsCountAggregateOutputType | null
    _avg: DocumentsAvgAggregateOutputType | null
    _sum: DocumentsSumAggregateOutputType | null
    _min: DocumentsMinAggregateOutputType | null
    _max: DocumentsMaxAggregateOutputType | null
  }

  type GetDocumentsGroupByPayload<T extends documentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentsGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentsGroupByOutputType[P]>
        }
      >
    >


  export type documentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    client_id?: boolean
    type?: boolean
    reference?: boolean
    status?: boolean
    amount?: boolean
    tva_rate?: boolean
    issue_date?: boolean
    due_date?: boolean
    payment_date?: boolean
    payment_method?: boolean
    notes?: boolean
    file_path?: boolean
    created_at?: boolean
    updated_at?: boolean
    document_tags?: boolean | documents$document_tagsArgs<ExtArgs>
    clients?: boolean | documents$clientsArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    _count?: boolean | DocumentsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documents"]>

  export type documentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    client_id?: boolean
    type?: boolean
    reference?: boolean
    status?: boolean
    amount?: boolean
    tva_rate?: boolean
    issue_date?: boolean
    due_date?: boolean
    payment_date?: boolean
    payment_method?: boolean
    notes?: boolean
    file_path?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | documents$clientsArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documents"]>

  export type documentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    client_id?: boolean
    type?: boolean
    reference?: boolean
    status?: boolean
    amount?: boolean
    tva_rate?: boolean
    issue_date?: boolean
    due_date?: boolean
    payment_date?: boolean
    payment_method?: boolean
    notes?: boolean
    file_path?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | documents$clientsArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documents"]>

  export type documentsSelectScalar = {
    id?: boolean
    project_id?: boolean
    client_id?: boolean
    type?: boolean
    reference?: boolean
    status?: boolean
    amount?: boolean
    tva_rate?: boolean
    issue_date?: boolean
    due_date?: boolean
    payment_date?: boolean
    payment_method?: boolean
    notes?: boolean
    file_path?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type documentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "client_id" | "type" | "reference" | "status" | "amount" | "tva_rate" | "issue_date" | "due_date" | "payment_date" | "payment_method" | "notes" | "file_path" | "created_at" | "updated_at", ExtArgs["result"]["documents"]>
  export type documentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    document_tags?: boolean | documents$document_tagsArgs<ExtArgs>
    clients?: boolean | documents$clientsArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    _count?: boolean | DocumentsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type documentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | documents$clientsArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }
  export type documentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | documents$clientsArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }

  export type $documentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "documents"
    objects: {
      document_tags: Prisma.$document_tagsPayload<ExtArgs>[]
      clients: Prisma.$clientsPayload<ExtArgs> | null
      projects: Prisma.$projectsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number
      client_id: number | null
      type: $Enums.document_type
      reference: string
      status: $Enums.document_status | null
      amount: Prisma.Decimal | null
      tva_rate: Prisma.Decimal | null
      issue_date: Date
      due_date: Date | null
      payment_date: Date | null
      payment_method: string | null
      notes: string | null
      file_path: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["documents"]>
    composites: {}
  }

  type documentsGetPayload<S extends boolean | null | undefined | documentsDefaultArgs> = $Result.GetResult<Prisma.$documentsPayload, S>

  type documentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<documentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DocumentsCountAggregateInputType | true
    }

  export interface documentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['documents'], meta: { name: 'documents' } }
    /**
     * Find zero or one Documents that matches the filter.
     * @param {documentsFindUniqueArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends documentsFindUniqueArgs>(args: SelectSubset<T, documentsFindUniqueArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Documents that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {documentsFindUniqueOrThrowArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends documentsFindUniqueOrThrowArgs>(args: SelectSubset<T, documentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsFindFirstArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends documentsFindFirstArgs>(args?: SelectSubset<T, documentsFindFirstArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Documents that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsFindFirstOrThrowArgs} args - Arguments to find a Documents
     * @example
     * // Get one Documents
     * const documents = await prisma.documents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends documentsFindFirstOrThrowArgs>(args?: SelectSubset<T, documentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documents
     * const documents = await prisma.documents.findMany()
     * 
     * // Get first 10 Documents
     * const documents = await prisma.documents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentsWithIdOnly = await prisma.documents.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends documentsFindManyArgs>(args?: SelectSubset<T, documentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Documents.
     * @param {documentsCreateArgs} args - Arguments to create a Documents.
     * @example
     * // Create one Documents
     * const Documents = await prisma.documents.create({
     *   data: {
     *     // ... data to create a Documents
     *   }
     * })
     * 
     */
    create<T extends documentsCreateArgs>(args: SelectSubset<T, documentsCreateArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Documents.
     * @param {documentsCreateManyArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const documents = await prisma.documents.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends documentsCreateManyArgs>(args?: SelectSubset<T, documentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Documents and returns the data saved in the database.
     * @param {documentsCreateManyAndReturnArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const documents = await prisma.documents.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Documents and only return the `id`
     * const documentsWithIdOnly = await prisma.documents.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends documentsCreateManyAndReturnArgs>(args?: SelectSubset<T, documentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Documents.
     * @param {documentsDeleteArgs} args - Arguments to delete one Documents.
     * @example
     * // Delete one Documents
     * const Documents = await prisma.documents.delete({
     *   where: {
     *     // ... filter to delete one Documents
     *   }
     * })
     * 
     */
    delete<T extends documentsDeleteArgs>(args: SelectSubset<T, documentsDeleteArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Documents.
     * @param {documentsUpdateArgs} args - Arguments to update one Documents.
     * @example
     * // Update one Documents
     * const documents = await prisma.documents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends documentsUpdateArgs>(args: SelectSubset<T, documentsUpdateArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Documents.
     * @param {documentsDeleteManyArgs} args - Arguments to filter Documents to delete.
     * @example
     * // Delete a few Documents
     * const { count } = await prisma.documents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends documentsDeleteManyArgs>(args?: SelectSubset<T, documentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documents
     * const documents = await prisma.documents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends documentsUpdateManyArgs>(args: SelectSubset<T, documentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents and returns the data updated in the database.
     * @param {documentsUpdateManyAndReturnArgs} args - Arguments to update many Documents.
     * @example
     * // Update many Documents
     * const documents = await prisma.documents.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Documents and only return the `id`
     * const documentsWithIdOnly = await prisma.documents.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends documentsUpdateManyAndReturnArgs>(args: SelectSubset<T, documentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Documents.
     * @param {documentsUpsertArgs} args - Arguments to update or create a Documents.
     * @example
     * // Update or create a Documents
     * const documents = await prisma.documents.upsert({
     *   create: {
     *     // ... data to create a Documents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Documents we want to update
     *   }
     * })
     */
    upsert<T extends documentsUpsertArgs>(args: SelectSubset<T, documentsUpsertArgs<ExtArgs>>): Prisma__documentsClient<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsCountArgs} args - Arguments to filter Documents to count.
     * @example
     * // Count the number of Documents
     * const count = await prisma.documents.count({
     *   where: {
     *     // ... the filter for the Documents we want to count
     *   }
     * })
    **/
    count<T extends documentsCountArgs>(
      args?: Subset<T, documentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentsAggregateArgs>(args: Subset<T, DocumentsAggregateArgs>): Prisma.PrismaPromise<GetDocumentsAggregateType<T>>

    /**
     * Group by Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends documentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: documentsGroupByArgs['orderBy'] }
        : { orderBy?: documentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, documentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the documents model
   */
  readonly fields: documentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for documents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__documentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    document_tags<T extends documents$document_tagsArgs<ExtArgs> = {}>(args?: Subset<T, documents$document_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clients<T extends documents$clientsArgs<ExtArgs> = {}>(args?: Subset<T, documents$clientsArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    projects<T extends projectsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectsDefaultArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the documents model
   */
  interface documentsFieldRefs {
    readonly id: FieldRef<"documents", 'Int'>
    readonly project_id: FieldRef<"documents", 'Int'>
    readonly client_id: FieldRef<"documents", 'Int'>
    readonly type: FieldRef<"documents", 'document_type'>
    readonly reference: FieldRef<"documents", 'String'>
    readonly status: FieldRef<"documents", 'document_status'>
    readonly amount: FieldRef<"documents", 'Decimal'>
    readonly tva_rate: FieldRef<"documents", 'Decimal'>
    readonly issue_date: FieldRef<"documents", 'DateTime'>
    readonly due_date: FieldRef<"documents", 'DateTime'>
    readonly payment_date: FieldRef<"documents", 'DateTime'>
    readonly payment_method: FieldRef<"documents", 'String'>
    readonly notes: FieldRef<"documents", 'String'>
    readonly file_path: FieldRef<"documents", 'String'>
    readonly created_at: FieldRef<"documents", 'DateTime'>
    readonly updated_at: FieldRef<"documents", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * documents findUnique
   */
  export type documentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents findUniqueOrThrow
   */
  export type documentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents findFirst
   */
  export type documentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documents.
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documents.
     */
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * documents findFirstOrThrow
   */
  export type documentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documents.
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documents.
     */
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * documents findMany
   */
  export type documentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter, which documents to fetch.
     */
    where?: documentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documents to fetch.
     */
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing documents.
     */
    cursor?: documentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documents.
     */
    skip?: number
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * documents create
   */
  export type documentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * The data needed to create a documents.
     */
    data: XOR<documentsCreateInput, documentsUncheckedCreateInput>
  }

  /**
   * documents createMany
   */
  export type documentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many documents.
     */
    data: documentsCreateManyInput | documentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * documents createManyAndReturn
   */
  export type documentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * The data used to create many documents.
     */
    data: documentsCreateManyInput | documentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * documents update
   */
  export type documentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * The data needed to update a documents.
     */
    data: XOR<documentsUpdateInput, documentsUncheckedUpdateInput>
    /**
     * Choose, which documents to update.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents updateMany
   */
  export type documentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update documents.
     */
    data: XOR<documentsUpdateManyMutationInput, documentsUncheckedUpdateManyInput>
    /**
     * Filter which documents to update
     */
    where?: documentsWhereInput
    /**
     * Limit how many documents to update.
     */
    limit?: number
  }

  /**
   * documents updateManyAndReturn
   */
  export type documentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * The data used to update documents.
     */
    data: XOR<documentsUpdateManyMutationInput, documentsUncheckedUpdateManyInput>
    /**
     * Filter which documents to update
     */
    where?: documentsWhereInput
    /**
     * Limit how many documents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * documents upsert
   */
  export type documentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * The filter to search for the documents to update in case it exists.
     */
    where: documentsWhereUniqueInput
    /**
     * In case the documents found by the `where` argument doesn't exist, create a new documents with this data.
     */
    create: XOR<documentsCreateInput, documentsUncheckedCreateInput>
    /**
     * In case the documents was found with the provided `where` argument, update it with this data.
     */
    update: XOR<documentsUpdateInput, documentsUncheckedUpdateInput>
  }

  /**
   * documents delete
   */
  export type documentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    /**
     * Filter which documents to delete.
     */
    where: documentsWhereUniqueInput
  }

  /**
   * documents deleteMany
   */
  export type documentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which documents to delete
     */
    where?: documentsWhereInput
    /**
     * Limit how many documents to delete.
     */
    limit?: number
  }

  /**
   * documents.document_tags
   */
  export type documents$document_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    where?: document_tagsWhereInput
    orderBy?: document_tagsOrderByWithRelationInput | document_tagsOrderByWithRelationInput[]
    cursor?: document_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Document_tagsScalarFieldEnum | Document_tagsScalarFieldEnum[]
  }

  /**
   * documents.clients
   */
  export type documents$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
  }

  /**
   * documents without action
   */
  export type documentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
  }


  /**
   * Model events
   */

  export type AggregateEvents = {
    _count: EventsCountAggregateOutputType | null
    _avg: EventsAvgAggregateOutputType | null
    _sum: EventsSumAggregateOutputType | null
    _min: EventsMinAggregateOutputType | null
    _max: EventsMaxAggregateOutputType | null
  }

  export type EventsAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    client_id: number | null
  }

  export type EventsSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    client_id: number | null
  }

  export type EventsMinAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    event_type: $Enums.event_type | null
    start_date: Date | null
    end_date: Date | null
    all_day: boolean | null
    location: string | null
    project_id: number | null
    staff_id: number | null
    client_id: number | null
    status: string | null
    color: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type EventsMaxAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    event_type: $Enums.event_type | null
    start_date: Date | null
    end_date: Date | null
    all_day: boolean | null
    location: string | null
    project_id: number | null
    staff_id: number | null
    client_id: number | null
    status: string | null
    color: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type EventsCountAggregateOutputType = {
    id: number
    title: number
    description: number
    event_type: number
    start_date: number
    end_date: number
    all_day: number
    location: number
    project_id: number
    staff_id: number
    client_id: number
    status: number
    color: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type EventsAvgAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    client_id?: true
  }

  export type EventsSumAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    client_id?: true
  }

  export type EventsMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    event_type?: true
    start_date?: true
    end_date?: true
    all_day?: true
    location?: true
    project_id?: true
    staff_id?: true
    client_id?: true
    status?: true
    color?: true
    created_at?: true
    updated_at?: true
  }

  export type EventsMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    event_type?: true
    start_date?: true
    end_date?: true
    all_day?: true
    location?: true
    project_id?: true
    staff_id?: true
    client_id?: true
    status?: true
    color?: true
    created_at?: true
    updated_at?: true
  }

  export type EventsCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    event_type?: true
    start_date?: true
    end_date?: true
    all_day?: true
    location?: true
    project_id?: true
    staff_id?: true
    client_id?: true
    status?: true
    color?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type EventsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which events to aggregate.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned events
    **/
    _count?: true | EventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventsMaxAggregateInputType
  }

  export type GetEventsAggregateType<T extends EventsAggregateArgs> = {
        [P in keyof T & keyof AggregateEvents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvents[P]>
      : GetScalarType<T[P], AggregateEvents[P]>
  }




  export type eventsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: eventsWhereInput
    orderBy?: eventsOrderByWithAggregationInput | eventsOrderByWithAggregationInput[]
    by: EventsScalarFieldEnum[] | EventsScalarFieldEnum
    having?: eventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventsCountAggregateInputType | true
    _avg?: EventsAvgAggregateInputType
    _sum?: EventsSumAggregateInputType
    _min?: EventsMinAggregateInputType
    _max?: EventsMaxAggregateInputType
  }

  export type EventsGroupByOutputType = {
    id: number
    title: string
    description: string | null
    event_type: $Enums.event_type
    start_date: Date
    end_date: Date
    all_day: boolean | null
    location: string | null
    project_id: number | null
    staff_id: number | null
    client_id: number | null
    status: string | null
    color: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: EventsCountAggregateOutputType | null
    _avg: EventsAvgAggregateOutputType | null
    _sum: EventsSumAggregateOutputType | null
    _min: EventsMinAggregateOutputType | null
    _max: EventsMaxAggregateOutputType | null
  }

  type GetEventsGroupByPayload<T extends eventsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventsGroupByOutputType[P]>
            : GetScalarType<T[P], EventsGroupByOutputType[P]>
        }
      >
    >


  export type eventsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    event_type?: boolean
    start_date?: boolean
    end_date?: boolean
    all_day?: boolean
    location?: boolean
    project_id?: boolean
    staff_id?: boolean
    client_id?: boolean
    status?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | events$clientsArgs<ExtArgs>
    projects?: boolean | events$projectsArgs<ExtArgs>
    staff?: boolean | events$staffArgs<ExtArgs>
  }, ExtArgs["result"]["events"]>

  export type eventsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    event_type?: boolean
    start_date?: boolean
    end_date?: boolean
    all_day?: boolean
    location?: boolean
    project_id?: boolean
    staff_id?: boolean
    client_id?: boolean
    status?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | events$clientsArgs<ExtArgs>
    projects?: boolean | events$projectsArgs<ExtArgs>
    staff?: boolean | events$staffArgs<ExtArgs>
  }, ExtArgs["result"]["events"]>

  export type eventsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    event_type?: boolean
    start_date?: boolean
    end_date?: boolean
    all_day?: boolean
    location?: boolean
    project_id?: boolean
    staff_id?: boolean
    client_id?: boolean
    status?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | events$clientsArgs<ExtArgs>
    projects?: boolean | events$projectsArgs<ExtArgs>
    staff?: boolean | events$staffArgs<ExtArgs>
  }, ExtArgs["result"]["events"]>

  export type eventsSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    event_type?: boolean
    start_date?: boolean
    end_date?: boolean
    all_day?: boolean
    location?: boolean
    project_id?: boolean
    staff_id?: boolean
    client_id?: boolean
    status?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type eventsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "event_type" | "start_date" | "end_date" | "all_day" | "location" | "project_id" | "staff_id" | "client_id" | "status" | "color" | "created_at" | "updated_at", ExtArgs["result"]["events"]>
  export type eventsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | events$clientsArgs<ExtArgs>
    projects?: boolean | events$projectsArgs<ExtArgs>
    staff?: boolean | events$staffArgs<ExtArgs>
  }
  export type eventsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | events$clientsArgs<ExtArgs>
    projects?: boolean | events$projectsArgs<ExtArgs>
    staff?: boolean | events$staffArgs<ExtArgs>
  }
  export type eventsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | events$clientsArgs<ExtArgs>
    projects?: boolean | events$projectsArgs<ExtArgs>
    staff?: boolean | events$staffArgs<ExtArgs>
  }

  export type $eventsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "events"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs> | null
      projects: Prisma.$projectsPayload<ExtArgs> | null
      staff: Prisma.$staffPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      description: string | null
      event_type: $Enums.event_type
      start_date: Date
      end_date: Date
      all_day: boolean | null
      location: string | null
      project_id: number | null
      staff_id: number | null
      client_id: number | null
      status: string | null
      color: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["events"]>
    composites: {}
  }

  type eventsGetPayload<S extends boolean | null | undefined | eventsDefaultArgs> = $Result.GetResult<Prisma.$eventsPayload, S>

  type eventsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<eventsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventsCountAggregateInputType | true
    }

  export interface eventsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['events'], meta: { name: 'events' } }
    /**
     * Find zero or one Events that matches the filter.
     * @param {eventsFindUniqueArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends eventsFindUniqueArgs>(args: SelectSubset<T, eventsFindUniqueArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Events that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {eventsFindUniqueOrThrowArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends eventsFindUniqueOrThrowArgs>(args: SelectSubset<T, eventsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsFindFirstArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends eventsFindFirstArgs>(args?: SelectSubset<T, eventsFindFirstArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Events that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsFindFirstOrThrowArgs} args - Arguments to find a Events
     * @example
     * // Get one Events
     * const events = await prisma.events.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends eventsFindFirstOrThrowArgs>(args?: SelectSubset<T, eventsFindFirstOrThrowArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Events
     * const events = await prisma.events.findMany()
     * 
     * // Get first 10 Events
     * const events = await prisma.events.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventsWithIdOnly = await prisma.events.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends eventsFindManyArgs>(args?: SelectSubset<T, eventsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Events.
     * @param {eventsCreateArgs} args - Arguments to create a Events.
     * @example
     * // Create one Events
     * const Events = await prisma.events.create({
     *   data: {
     *     // ... data to create a Events
     *   }
     * })
     * 
     */
    create<T extends eventsCreateArgs>(args: SelectSubset<T, eventsCreateArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Events.
     * @param {eventsCreateManyArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const events = await prisma.events.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends eventsCreateManyArgs>(args?: SelectSubset<T, eventsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Events and returns the data saved in the database.
     * @param {eventsCreateManyAndReturnArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const events = await prisma.events.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Events and only return the `id`
     * const eventsWithIdOnly = await prisma.events.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends eventsCreateManyAndReturnArgs>(args?: SelectSubset<T, eventsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Events.
     * @param {eventsDeleteArgs} args - Arguments to delete one Events.
     * @example
     * // Delete one Events
     * const Events = await prisma.events.delete({
     *   where: {
     *     // ... filter to delete one Events
     *   }
     * })
     * 
     */
    delete<T extends eventsDeleteArgs>(args: SelectSubset<T, eventsDeleteArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Events.
     * @param {eventsUpdateArgs} args - Arguments to update one Events.
     * @example
     * // Update one Events
     * const events = await prisma.events.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends eventsUpdateArgs>(args: SelectSubset<T, eventsUpdateArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Events.
     * @param {eventsDeleteManyArgs} args - Arguments to filter Events to delete.
     * @example
     * // Delete a few Events
     * const { count } = await prisma.events.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends eventsDeleteManyArgs>(args?: SelectSubset<T, eventsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Events
     * const events = await prisma.events.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends eventsUpdateManyArgs>(args: SelectSubset<T, eventsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events and returns the data updated in the database.
     * @param {eventsUpdateManyAndReturnArgs} args - Arguments to update many Events.
     * @example
     * // Update many Events
     * const events = await prisma.events.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Events and only return the `id`
     * const eventsWithIdOnly = await prisma.events.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends eventsUpdateManyAndReturnArgs>(args: SelectSubset<T, eventsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Events.
     * @param {eventsUpsertArgs} args - Arguments to update or create a Events.
     * @example
     * // Update or create a Events
     * const events = await prisma.events.upsert({
     *   create: {
     *     // ... data to create a Events
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Events we want to update
     *   }
     * })
     */
    upsert<T extends eventsUpsertArgs>(args: SelectSubset<T, eventsUpsertArgs<ExtArgs>>): Prisma__eventsClient<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsCountArgs} args - Arguments to filter Events to count.
     * @example
     * // Count the number of Events
     * const count = await prisma.events.count({
     *   where: {
     *     // ... the filter for the Events we want to count
     *   }
     * })
    **/
    count<T extends eventsCountArgs>(
      args?: Subset<T, eventsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventsAggregateArgs>(args: Subset<T, EventsAggregateArgs>): Prisma.PrismaPromise<GetEventsAggregateType<T>>

    /**
     * Group by Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends eventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: eventsGroupByArgs['orderBy'] }
        : { orderBy?: eventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, eventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the events model
   */
  readonly fields: eventsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for events.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__eventsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends events$clientsArgs<ExtArgs> = {}>(args?: Subset<T, events$clientsArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    projects<T extends events$projectsArgs<ExtArgs> = {}>(args?: Subset<T, events$projectsArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    staff<T extends events$staffArgs<ExtArgs> = {}>(args?: Subset<T, events$staffArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the events model
   */
  interface eventsFieldRefs {
    readonly id: FieldRef<"events", 'Int'>
    readonly title: FieldRef<"events", 'String'>
    readonly description: FieldRef<"events", 'String'>
    readonly event_type: FieldRef<"events", 'event_type'>
    readonly start_date: FieldRef<"events", 'DateTime'>
    readonly end_date: FieldRef<"events", 'DateTime'>
    readonly all_day: FieldRef<"events", 'Boolean'>
    readonly location: FieldRef<"events", 'String'>
    readonly project_id: FieldRef<"events", 'Int'>
    readonly staff_id: FieldRef<"events", 'Int'>
    readonly client_id: FieldRef<"events", 'Int'>
    readonly status: FieldRef<"events", 'String'>
    readonly color: FieldRef<"events", 'String'>
    readonly created_at: FieldRef<"events", 'DateTime'>
    readonly updated_at: FieldRef<"events", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * events findUnique
   */
  export type eventsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events findUniqueOrThrow
   */
  export type eventsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events findFirst
   */
  export type eventsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for events.
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of events.
     */
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * events findFirstOrThrow
   */
  export type eventsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for events.
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of events.
     */
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * events findMany
   */
  export type eventsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter, which events to fetch.
     */
    where?: eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of events to fetch.
     */
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing events.
     */
    cursor?: eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` events.
     */
    skip?: number
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * events create
   */
  export type eventsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * The data needed to create a events.
     */
    data: XOR<eventsCreateInput, eventsUncheckedCreateInput>
  }

  /**
   * events createMany
   */
  export type eventsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many events.
     */
    data: eventsCreateManyInput | eventsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * events createManyAndReturn
   */
  export type eventsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * The data used to create many events.
     */
    data: eventsCreateManyInput | eventsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * events update
   */
  export type eventsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * The data needed to update a events.
     */
    data: XOR<eventsUpdateInput, eventsUncheckedUpdateInput>
    /**
     * Choose, which events to update.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events updateMany
   */
  export type eventsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update events.
     */
    data: XOR<eventsUpdateManyMutationInput, eventsUncheckedUpdateManyInput>
    /**
     * Filter which events to update
     */
    where?: eventsWhereInput
    /**
     * Limit how many events to update.
     */
    limit?: number
  }

  /**
   * events updateManyAndReturn
   */
  export type eventsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * The data used to update events.
     */
    data: XOR<eventsUpdateManyMutationInput, eventsUncheckedUpdateManyInput>
    /**
     * Filter which events to update
     */
    where?: eventsWhereInput
    /**
     * Limit how many events to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * events upsert
   */
  export type eventsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * The filter to search for the events to update in case it exists.
     */
    where: eventsWhereUniqueInput
    /**
     * In case the events found by the `where` argument doesn't exist, create a new events with this data.
     */
    create: XOR<eventsCreateInput, eventsUncheckedCreateInput>
    /**
     * In case the events was found with the provided `where` argument, update it with this data.
     */
    update: XOR<eventsUpdateInput, eventsUncheckedUpdateInput>
  }

  /**
   * events delete
   */
  export type eventsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    /**
     * Filter which events to delete.
     */
    where: eventsWhereUniqueInput
  }

  /**
   * events deleteMany
   */
  export type eventsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which events to delete
     */
    where?: eventsWhereInput
    /**
     * Limit how many events to delete.
     */
    limit?: number
  }

  /**
   * events.clients
   */
  export type events$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
  }

  /**
   * events.projects
   */
  export type events$projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    where?: projectsWhereInput
  }

  /**
   * events.staff
   */
  export type events$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    where?: staffWhereInput
  }

  /**
   * events without action
   */
  export type eventsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
  }


  /**
   * Model materials
   */

  export type AggregateMaterials = {
    _count: MaterialsCountAggregateOutputType | null
    _avg: MaterialsAvgAggregateOutputType | null
    _sum: MaterialsSumAggregateOutputType | null
    _min: MaterialsMinAggregateOutputType | null
    _max: MaterialsMaxAggregateOutputType | null
  }

  export type MaterialsAvgAggregateOutputType = {
    id: number | null
    price: Decimal | null
    stock_quantity: number | null
    minimum_stock: number | null
  }

  export type MaterialsSumAggregateOutputType = {
    id: number | null
    price: Decimal | null
    stock_quantity: number | null
    minimum_stock: number | null
  }

  export type MaterialsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    reference: string | null
    unit: string | null
    price: Decimal | null
    stock_quantity: number | null
    minimum_stock: number | null
    supplier: string | null
    supplier_reference: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type MaterialsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    reference: string | null
    unit: string | null
    price: Decimal | null
    stock_quantity: number | null
    minimum_stock: number | null
    supplier: string | null
    supplier_reference: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type MaterialsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    reference: number
    unit: number
    price: number
    stock_quantity: number
    minimum_stock: number
    supplier: number
    supplier_reference: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type MaterialsAvgAggregateInputType = {
    id?: true
    price?: true
    stock_quantity?: true
    minimum_stock?: true
  }

  export type MaterialsSumAggregateInputType = {
    id?: true
    price?: true
    stock_quantity?: true
    minimum_stock?: true
  }

  export type MaterialsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    reference?: true
    unit?: true
    price?: true
    stock_quantity?: true
    minimum_stock?: true
    supplier?: true
    supplier_reference?: true
    created_at?: true
    updated_at?: true
  }

  export type MaterialsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    reference?: true
    unit?: true
    price?: true
    stock_quantity?: true
    minimum_stock?: true
    supplier?: true
    supplier_reference?: true
    created_at?: true
    updated_at?: true
  }

  export type MaterialsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    reference?: true
    unit?: true
    price?: true
    stock_quantity?: true
    minimum_stock?: true
    supplier?: true
    supplier_reference?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type MaterialsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which materials to aggregate.
     */
    where?: materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of materials to fetch.
     */
    orderBy?: materialsOrderByWithRelationInput | materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned materials
    **/
    _count?: true | MaterialsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaterialsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaterialsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialsMaxAggregateInputType
  }

  export type GetMaterialsAggregateType<T extends MaterialsAggregateArgs> = {
        [P in keyof T & keyof AggregateMaterials]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaterials[P]>
      : GetScalarType<T[P], AggregateMaterials[P]>
  }




  export type materialsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: materialsWhereInput
    orderBy?: materialsOrderByWithAggregationInput | materialsOrderByWithAggregationInput[]
    by: MaterialsScalarFieldEnum[] | MaterialsScalarFieldEnum
    having?: materialsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialsCountAggregateInputType | true
    _avg?: MaterialsAvgAggregateInputType
    _sum?: MaterialsSumAggregateInputType
    _min?: MaterialsMinAggregateInputType
    _max?: MaterialsMaxAggregateInputType
  }

  export type MaterialsGroupByOutputType = {
    id: number
    name: string
    description: string | null
    reference: string | null
    unit: string
    price: Decimal | null
    stock_quantity: number | null
    minimum_stock: number | null
    supplier: string | null
    supplier_reference: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: MaterialsCountAggregateOutputType | null
    _avg: MaterialsAvgAggregateOutputType | null
    _sum: MaterialsSumAggregateOutputType | null
    _min: MaterialsMinAggregateOutputType | null
    _max: MaterialsMaxAggregateOutputType | null
  }

  type GetMaterialsGroupByPayload<T extends materialsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialsGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialsGroupByOutputType[P]>
        }
      >
    >


  export type materialsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    reference?: boolean
    unit?: boolean
    price?: boolean
    stock_quantity?: boolean
    minimum_stock?: boolean
    supplier?: boolean
    supplier_reference?: boolean
    created_at?: boolean
    updated_at?: boolean
    project_materials?: boolean | materials$project_materialsArgs<ExtArgs>
    _count?: boolean | MaterialsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["materials"]>

  export type materialsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    reference?: boolean
    unit?: boolean
    price?: boolean
    stock_quantity?: boolean
    minimum_stock?: boolean
    supplier?: boolean
    supplier_reference?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["materials"]>

  export type materialsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    reference?: boolean
    unit?: boolean
    price?: boolean
    stock_quantity?: boolean
    minimum_stock?: boolean
    supplier?: boolean
    supplier_reference?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["materials"]>

  export type materialsSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    reference?: boolean
    unit?: boolean
    price?: boolean
    stock_quantity?: boolean
    minimum_stock?: boolean
    supplier?: boolean
    supplier_reference?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type materialsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "reference" | "unit" | "price" | "stock_quantity" | "minimum_stock" | "supplier" | "supplier_reference" | "created_at" | "updated_at", ExtArgs["result"]["materials"]>
  export type materialsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project_materials?: boolean | materials$project_materialsArgs<ExtArgs>
    _count?: boolean | MaterialsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type materialsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type materialsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $materialsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "materials"
    objects: {
      project_materials: Prisma.$project_materialsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      reference: string | null
      unit: string
      price: Prisma.Decimal | null
      stock_quantity: number | null
      minimum_stock: number | null
      supplier: string | null
      supplier_reference: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["materials"]>
    composites: {}
  }

  type materialsGetPayload<S extends boolean | null | undefined | materialsDefaultArgs> = $Result.GetResult<Prisma.$materialsPayload, S>

  type materialsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<materialsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MaterialsCountAggregateInputType | true
    }

  export interface materialsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['materials'], meta: { name: 'materials' } }
    /**
     * Find zero or one Materials that matches the filter.
     * @param {materialsFindUniqueArgs} args - Arguments to find a Materials
     * @example
     * // Get one Materials
     * const materials = await prisma.materials.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends materialsFindUniqueArgs>(args: SelectSubset<T, materialsFindUniqueArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Materials that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {materialsFindUniqueOrThrowArgs} args - Arguments to find a Materials
     * @example
     * // Get one Materials
     * const materials = await prisma.materials.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends materialsFindUniqueOrThrowArgs>(args: SelectSubset<T, materialsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {materialsFindFirstArgs} args - Arguments to find a Materials
     * @example
     * // Get one Materials
     * const materials = await prisma.materials.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends materialsFindFirstArgs>(args?: SelectSubset<T, materialsFindFirstArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Materials that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {materialsFindFirstOrThrowArgs} args - Arguments to find a Materials
     * @example
     * // Get one Materials
     * const materials = await prisma.materials.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends materialsFindFirstOrThrowArgs>(args?: SelectSubset<T, materialsFindFirstOrThrowArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {materialsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Materials
     * const materials = await prisma.materials.findMany()
     * 
     * // Get first 10 Materials
     * const materials = await prisma.materials.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materialsWithIdOnly = await prisma.materials.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends materialsFindManyArgs>(args?: SelectSubset<T, materialsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Materials.
     * @param {materialsCreateArgs} args - Arguments to create a Materials.
     * @example
     * // Create one Materials
     * const Materials = await prisma.materials.create({
     *   data: {
     *     // ... data to create a Materials
     *   }
     * })
     * 
     */
    create<T extends materialsCreateArgs>(args: SelectSubset<T, materialsCreateArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Materials.
     * @param {materialsCreateManyArgs} args - Arguments to create many Materials.
     * @example
     * // Create many Materials
     * const materials = await prisma.materials.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends materialsCreateManyArgs>(args?: SelectSubset<T, materialsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Materials and returns the data saved in the database.
     * @param {materialsCreateManyAndReturnArgs} args - Arguments to create many Materials.
     * @example
     * // Create many Materials
     * const materials = await prisma.materials.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Materials and only return the `id`
     * const materialsWithIdOnly = await prisma.materials.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends materialsCreateManyAndReturnArgs>(args?: SelectSubset<T, materialsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Materials.
     * @param {materialsDeleteArgs} args - Arguments to delete one Materials.
     * @example
     * // Delete one Materials
     * const Materials = await prisma.materials.delete({
     *   where: {
     *     // ... filter to delete one Materials
     *   }
     * })
     * 
     */
    delete<T extends materialsDeleteArgs>(args: SelectSubset<T, materialsDeleteArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Materials.
     * @param {materialsUpdateArgs} args - Arguments to update one Materials.
     * @example
     * // Update one Materials
     * const materials = await prisma.materials.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends materialsUpdateArgs>(args: SelectSubset<T, materialsUpdateArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Materials.
     * @param {materialsDeleteManyArgs} args - Arguments to filter Materials to delete.
     * @example
     * // Delete a few Materials
     * const { count } = await prisma.materials.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends materialsDeleteManyArgs>(args?: SelectSubset<T, materialsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {materialsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Materials
     * const materials = await prisma.materials.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends materialsUpdateManyArgs>(args: SelectSubset<T, materialsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materials and returns the data updated in the database.
     * @param {materialsUpdateManyAndReturnArgs} args - Arguments to update many Materials.
     * @example
     * // Update many Materials
     * const materials = await prisma.materials.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Materials and only return the `id`
     * const materialsWithIdOnly = await prisma.materials.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends materialsUpdateManyAndReturnArgs>(args: SelectSubset<T, materialsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Materials.
     * @param {materialsUpsertArgs} args - Arguments to update or create a Materials.
     * @example
     * // Update or create a Materials
     * const materials = await prisma.materials.upsert({
     *   create: {
     *     // ... data to create a Materials
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Materials we want to update
     *   }
     * })
     */
    upsert<T extends materialsUpsertArgs>(args: SelectSubset<T, materialsUpsertArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {materialsCountArgs} args - Arguments to filter Materials to count.
     * @example
     * // Count the number of Materials
     * const count = await prisma.materials.count({
     *   where: {
     *     // ... the filter for the Materials we want to count
     *   }
     * })
    **/
    count<T extends materialsCountArgs>(
      args?: Subset<T, materialsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialsAggregateArgs>(args: Subset<T, MaterialsAggregateArgs>): Prisma.PrismaPromise<GetMaterialsAggregateType<T>>

    /**
     * Group by Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {materialsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends materialsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: materialsGroupByArgs['orderBy'] }
        : { orderBy?: materialsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, materialsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the materials model
   */
  readonly fields: materialsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for materials.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__materialsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project_materials<T extends materials$project_materialsArgs<ExtArgs> = {}>(args?: Subset<T, materials$project_materialsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the materials model
   */
  interface materialsFieldRefs {
    readonly id: FieldRef<"materials", 'Int'>
    readonly name: FieldRef<"materials", 'String'>
    readonly description: FieldRef<"materials", 'String'>
    readonly reference: FieldRef<"materials", 'String'>
    readonly unit: FieldRef<"materials", 'String'>
    readonly price: FieldRef<"materials", 'Decimal'>
    readonly stock_quantity: FieldRef<"materials", 'Int'>
    readonly minimum_stock: FieldRef<"materials", 'Int'>
    readonly supplier: FieldRef<"materials", 'String'>
    readonly supplier_reference: FieldRef<"materials", 'String'>
    readonly created_at: FieldRef<"materials", 'DateTime'>
    readonly updated_at: FieldRef<"materials", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * materials findUnique
   */
  export type materialsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * Filter, which materials to fetch.
     */
    where: materialsWhereUniqueInput
  }

  /**
   * materials findUniqueOrThrow
   */
  export type materialsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * Filter, which materials to fetch.
     */
    where: materialsWhereUniqueInput
  }

  /**
   * materials findFirst
   */
  export type materialsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * Filter, which materials to fetch.
     */
    where?: materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of materials to fetch.
     */
    orderBy?: materialsOrderByWithRelationInput | materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for materials.
     */
    cursor?: materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of materials.
     */
    distinct?: MaterialsScalarFieldEnum | MaterialsScalarFieldEnum[]
  }

  /**
   * materials findFirstOrThrow
   */
  export type materialsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * Filter, which materials to fetch.
     */
    where?: materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of materials to fetch.
     */
    orderBy?: materialsOrderByWithRelationInput | materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for materials.
     */
    cursor?: materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of materials.
     */
    distinct?: MaterialsScalarFieldEnum | MaterialsScalarFieldEnum[]
  }

  /**
   * materials findMany
   */
  export type materialsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * Filter, which materials to fetch.
     */
    where?: materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of materials to fetch.
     */
    orderBy?: materialsOrderByWithRelationInput | materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing materials.
     */
    cursor?: materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` materials.
     */
    skip?: number
    distinct?: MaterialsScalarFieldEnum | MaterialsScalarFieldEnum[]
  }

  /**
   * materials create
   */
  export type materialsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * The data needed to create a materials.
     */
    data: XOR<materialsCreateInput, materialsUncheckedCreateInput>
  }

  /**
   * materials createMany
   */
  export type materialsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many materials.
     */
    data: materialsCreateManyInput | materialsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * materials createManyAndReturn
   */
  export type materialsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * The data used to create many materials.
     */
    data: materialsCreateManyInput | materialsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * materials update
   */
  export type materialsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * The data needed to update a materials.
     */
    data: XOR<materialsUpdateInput, materialsUncheckedUpdateInput>
    /**
     * Choose, which materials to update.
     */
    where: materialsWhereUniqueInput
  }

  /**
   * materials updateMany
   */
  export type materialsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update materials.
     */
    data: XOR<materialsUpdateManyMutationInput, materialsUncheckedUpdateManyInput>
    /**
     * Filter which materials to update
     */
    where?: materialsWhereInput
    /**
     * Limit how many materials to update.
     */
    limit?: number
  }

  /**
   * materials updateManyAndReturn
   */
  export type materialsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * The data used to update materials.
     */
    data: XOR<materialsUpdateManyMutationInput, materialsUncheckedUpdateManyInput>
    /**
     * Filter which materials to update
     */
    where?: materialsWhereInput
    /**
     * Limit how many materials to update.
     */
    limit?: number
  }

  /**
   * materials upsert
   */
  export type materialsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * The filter to search for the materials to update in case it exists.
     */
    where: materialsWhereUniqueInput
    /**
     * In case the materials found by the `where` argument doesn't exist, create a new materials with this data.
     */
    create: XOR<materialsCreateInput, materialsUncheckedCreateInput>
    /**
     * In case the materials was found with the provided `where` argument, update it with this data.
     */
    update: XOR<materialsUpdateInput, materialsUncheckedUpdateInput>
  }

  /**
   * materials delete
   */
  export type materialsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
    /**
     * Filter which materials to delete.
     */
    where: materialsWhereUniqueInput
  }

  /**
   * materials deleteMany
   */
  export type materialsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which materials to delete
     */
    where?: materialsWhereInput
    /**
     * Limit how many materials to delete.
     */
    limit?: number
  }

  /**
   * materials.project_materials
   */
  export type materials$project_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    where?: project_materialsWhereInput
    orderBy?: project_materialsOrderByWithRelationInput | project_materialsOrderByWithRelationInput[]
    cursor?: project_materialsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_materialsScalarFieldEnum | Project_materialsScalarFieldEnum[]
  }

  /**
   * materials without action
   */
  export type materialsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the materials
     */
    select?: materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the materials
     */
    omit?: materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: materialsInclude<ExtArgs> | null
  }


  /**
   * Model project_materials
   */

  export type AggregateProject_materials = {
    _count: Project_materialsCountAggregateOutputType | null
    _avg: Project_materialsAvgAggregateOutputType | null
    _sum: Project_materialsSumAggregateOutputType | null
    _min: Project_materialsMinAggregateOutputType | null
    _max: Project_materialsMaxAggregateOutputType | null
  }

  export type Project_materialsAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    material_id: number | null
    stage_id: number | null
    quantity_planned: number | null
    quantity_used: number | null
    unit_price: Decimal | null
  }

  export type Project_materialsSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    material_id: number | null
    stage_id: number | null
    quantity_planned: number | null
    quantity_used: number | null
    unit_price: Decimal | null
  }

  export type Project_materialsMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    material_id: number | null
    stage_id: number | null
    quantity_planned: number | null
    quantity_used: number | null
    unit_price: Decimal | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Project_materialsMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    material_id: number | null
    stage_id: number | null
    quantity_planned: number | null
    quantity_used: number | null
    unit_price: Decimal | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Project_materialsCountAggregateOutputType = {
    id: number
    project_id: number
    material_id: number
    stage_id: number
    quantity_planned: number
    quantity_used: number
    unit_price: number
    notes: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Project_materialsAvgAggregateInputType = {
    id?: true
    project_id?: true
    material_id?: true
    stage_id?: true
    quantity_planned?: true
    quantity_used?: true
    unit_price?: true
  }

  export type Project_materialsSumAggregateInputType = {
    id?: true
    project_id?: true
    material_id?: true
    stage_id?: true
    quantity_planned?: true
    quantity_used?: true
    unit_price?: true
  }

  export type Project_materialsMinAggregateInputType = {
    id?: true
    project_id?: true
    material_id?: true
    stage_id?: true
    quantity_planned?: true
    quantity_used?: true
    unit_price?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type Project_materialsMaxAggregateInputType = {
    id?: true
    project_id?: true
    material_id?: true
    stage_id?: true
    quantity_planned?: true
    quantity_used?: true
    unit_price?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type Project_materialsCountAggregateInputType = {
    id?: true
    project_id?: true
    material_id?: true
    stage_id?: true
    quantity_planned?: true
    quantity_used?: true
    unit_price?: true
    notes?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Project_materialsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_materials to aggregate.
     */
    where?: project_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_materials to fetch.
     */
    orderBy?: project_materialsOrderByWithRelationInput | project_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: project_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned project_materials
    **/
    _count?: true | Project_materialsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Project_materialsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Project_materialsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_materialsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_materialsMaxAggregateInputType
  }

  export type GetProject_materialsAggregateType<T extends Project_materialsAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_materials]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_materials[P]>
      : GetScalarType<T[P], AggregateProject_materials[P]>
  }




  export type project_materialsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_materialsWhereInput
    orderBy?: project_materialsOrderByWithAggregationInput | project_materialsOrderByWithAggregationInput[]
    by: Project_materialsScalarFieldEnum[] | Project_materialsScalarFieldEnum
    having?: project_materialsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_materialsCountAggregateInputType | true
    _avg?: Project_materialsAvgAggregateInputType
    _sum?: Project_materialsSumAggregateInputType
    _min?: Project_materialsMinAggregateInputType
    _max?: Project_materialsMaxAggregateInputType
  }

  export type Project_materialsGroupByOutputType = {
    id: number
    project_id: number
    material_id: number
    stage_id: number | null
    quantity_planned: number
    quantity_used: number | null
    unit_price: Decimal
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Project_materialsCountAggregateOutputType | null
    _avg: Project_materialsAvgAggregateOutputType | null
    _sum: Project_materialsSumAggregateOutputType | null
    _min: Project_materialsMinAggregateOutputType | null
    _max: Project_materialsMaxAggregateOutputType | null
  }

  type GetProject_materialsGroupByPayload<T extends project_materialsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Project_materialsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_materialsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_materialsGroupByOutputType[P]>
            : GetScalarType<T[P], Project_materialsGroupByOutputType[P]>
        }
      >
    >


  export type project_materialsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    material_id?: boolean
    stage_id?: boolean
    quantity_planned?: boolean
    quantity_used?: boolean
    unit_price?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    materials?: boolean | materialsDefaultArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    project_stages?: boolean | project_materials$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_materials"]>

  export type project_materialsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    material_id?: boolean
    stage_id?: boolean
    quantity_planned?: boolean
    quantity_used?: boolean
    unit_price?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    materials?: boolean | materialsDefaultArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    project_stages?: boolean | project_materials$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_materials"]>

  export type project_materialsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    material_id?: boolean
    stage_id?: boolean
    quantity_planned?: boolean
    quantity_used?: boolean
    unit_price?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    materials?: boolean | materialsDefaultArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    project_stages?: boolean | project_materials$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_materials"]>

  export type project_materialsSelectScalar = {
    id?: boolean
    project_id?: boolean
    material_id?: boolean
    stage_id?: boolean
    quantity_planned?: boolean
    quantity_used?: boolean
    unit_price?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type project_materialsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "material_id" | "stage_id" | "quantity_planned" | "quantity_used" | "unit_price" | "notes" | "created_at" | "updated_at", ExtArgs["result"]["project_materials"]>
  export type project_materialsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materials?: boolean | materialsDefaultArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    project_stages?: boolean | project_materials$project_stagesArgs<ExtArgs>
  }
  export type project_materialsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materials?: boolean | materialsDefaultArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    project_stages?: boolean | project_materials$project_stagesArgs<ExtArgs>
  }
  export type project_materialsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materials?: boolean | materialsDefaultArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    project_stages?: boolean | project_materials$project_stagesArgs<ExtArgs>
  }

  export type $project_materialsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "project_materials"
    objects: {
      materials: Prisma.$materialsPayload<ExtArgs>
      projects: Prisma.$projectsPayload<ExtArgs>
      project_stages: Prisma.$project_stagesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number
      material_id: number
      stage_id: number | null
      quantity_planned: number
      quantity_used: number | null
      unit_price: Prisma.Decimal
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["project_materials"]>
    composites: {}
  }

  type project_materialsGetPayload<S extends boolean | null | undefined | project_materialsDefaultArgs> = $Result.GetResult<Prisma.$project_materialsPayload, S>

  type project_materialsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<project_materialsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Project_materialsCountAggregateInputType | true
    }

  export interface project_materialsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['project_materials'], meta: { name: 'project_materials' } }
    /**
     * Find zero or one Project_materials that matches the filter.
     * @param {project_materialsFindUniqueArgs} args - Arguments to find a Project_materials
     * @example
     * // Get one Project_materials
     * const project_materials = await prisma.project_materials.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends project_materialsFindUniqueArgs>(args: SelectSubset<T, project_materialsFindUniqueArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project_materials that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {project_materialsFindUniqueOrThrowArgs} args - Arguments to find a Project_materials
     * @example
     * // Get one Project_materials
     * const project_materials = await prisma.project_materials.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends project_materialsFindUniqueOrThrowArgs>(args: SelectSubset<T, project_materialsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_materialsFindFirstArgs} args - Arguments to find a Project_materials
     * @example
     * // Get one Project_materials
     * const project_materials = await prisma.project_materials.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends project_materialsFindFirstArgs>(args?: SelectSubset<T, project_materialsFindFirstArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_materials that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_materialsFindFirstOrThrowArgs} args - Arguments to find a Project_materials
     * @example
     * // Get one Project_materials
     * const project_materials = await prisma.project_materials.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends project_materialsFindFirstOrThrowArgs>(args?: SelectSubset<T, project_materialsFindFirstOrThrowArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Project_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_materialsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_materials
     * const project_materials = await prisma.project_materials.findMany()
     * 
     * // Get first 10 Project_materials
     * const project_materials = await prisma.project_materials.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const project_materialsWithIdOnly = await prisma.project_materials.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends project_materialsFindManyArgs>(args?: SelectSubset<T, project_materialsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project_materials.
     * @param {project_materialsCreateArgs} args - Arguments to create a Project_materials.
     * @example
     * // Create one Project_materials
     * const Project_materials = await prisma.project_materials.create({
     *   data: {
     *     // ... data to create a Project_materials
     *   }
     * })
     * 
     */
    create<T extends project_materialsCreateArgs>(args: SelectSubset<T, project_materialsCreateArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Project_materials.
     * @param {project_materialsCreateManyArgs} args - Arguments to create many Project_materials.
     * @example
     * // Create many Project_materials
     * const project_materials = await prisma.project_materials.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends project_materialsCreateManyArgs>(args?: SelectSubset<T, project_materialsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Project_materials and returns the data saved in the database.
     * @param {project_materialsCreateManyAndReturnArgs} args - Arguments to create many Project_materials.
     * @example
     * // Create many Project_materials
     * const project_materials = await prisma.project_materials.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Project_materials and only return the `id`
     * const project_materialsWithIdOnly = await prisma.project_materials.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends project_materialsCreateManyAndReturnArgs>(args?: SelectSubset<T, project_materialsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project_materials.
     * @param {project_materialsDeleteArgs} args - Arguments to delete one Project_materials.
     * @example
     * // Delete one Project_materials
     * const Project_materials = await prisma.project_materials.delete({
     *   where: {
     *     // ... filter to delete one Project_materials
     *   }
     * })
     * 
     */
    delete<T extends project_materialsDeleteArgs>(args: SelectSubset<T, project_materialsDeleteArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project_materials.
     * @param {project_materialsUpdateArgs} args - Arguments to update one Project_materials.
     * @example
     * // Update one Project_materials
     * const project_materials = await prisma.project_materials.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends project_materialsUpdateArgs>(args: SelectSubset<T, project_materialsUpdateArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Project_materials.
     * @param {project_materialsDeleteManyArgs} args - Arguments to filter Project_materials to delete.
     * @example
     * // Delete a few Project_materials
     * const { count } = await prisma.project_materials.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends project_materialsDeleteManyArgs>(args?: SelectSubset<T, project_materialsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_materialsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_materials
     * const project_materials = await prisma.project_materials.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends project_materialsUpdateManyArgs>(args: SelectSubset<T, project_materialsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_materials and returns the data updated in the database.
     * @param {project_materialsUpdateManyAndReturnArgs} args - Arguments to update many Project_materials.
     * @example
     * // Update many Project_materials
     * const project_materials = await prisma.project_materials.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Project_materials and only return the `id`
     * const project_materialsWithIdOnly = await prisma.project_materials.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends project_materialsUpdateManyAndReturnArgs>(args: SelectSubset<T, project_materialsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project_materials.
     * @param {project_materialsUpsertArgs} args - Arguments to update or create a Project_materials.
     * @example
     * // Update or create a Project_materials
     * const project_materials = await prisma.project_materials.upsert({
     *   create: {
     *     // ... data to create a Project_materials
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_materials we want to update
     *   }
     * })
     */
    upsert<T extends project_materialsUpsertArgs>(args: SelectSubset<T, project_materialsUpsertArgs<ExtArgs>>): Prisma__project_materialsClient<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Project_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_materialsCountArgs} args - Arguments to filter Project_materials to count.
     * @example
     * // Count the number of Project_materials
     * const count = await prisma.project_materials.count({
     *   where: {
     *     // ... the filter for the Project_materials we want to count
     *   }
     * })
    **/
    count<T extends project_materialsCountArgs>(
      args?: Subset<T, project_materialsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_materialsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_materialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_materialsAggregateArgs>(args: Subset<T, Project_materialsAggregateArgs>): Prisma.PrismaPromise<GetProject_materialsAggregateType<T>>

    /**
     * Group by Project_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_materialsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends project_materialsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: project_materialsGroupByArgs['orderBy'] }
        : { orderBy?: project_materialsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, project_materialsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_materialsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the project_materials model
   */
  readonly fields: project_materialsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for project_materials.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__project_materialsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    materials<T extends materialsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, materialsDefaultArgs<ExtArgs>>): Prisma__materialsClient<$Result.GetResult<Prisma.$materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    projects<T extends projectsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectsDefaultArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    project_stages<T extends project_materials$project_stagesArgs<ExtArgs> = {}>(args?: Subset<T, project_materials$project_stagesArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the project_materials model
   */
  interface project_materialsFieldRefs {
    readonly id: FieldRef<"project_materials", 'Int'>
    readonly project_id: FieldRef<"project_materials", 'Int'>
    readonly material_id: FieldRef<"project_materials", 'Int'>
    readonly stage_id: FieldRef<"project_materials", 'Int'>
    readonly quantity_planned: FieldRef<"project_materials", 'Int'>
    readonly quantity_used: FieldRef<"project_materials", 'Int'>
    readonly unit_price: FieldRef<"project_materials", 'Decimal'>
    readonly notes: FieldRef<"project_materials", 'String'>
    readonly created_at: FieldRef<"project_materials", 'DateTime'>
    readonly updated_at: FieldRef<"project_materials", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * project_materials findUnique
   */
  export type project_materialsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * Filter, which project_materials to fetch.
     */
    where: project_materialsWhereUniqueInput
  }

  /**
   * project_materials findUniqueOrThrow
   */
  export type project_materialsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * Filter, which project_materials to fetch.
     */
    where: project_materialsWhereUniqueInput
  }

  /**
   * project_materials findFirst
   */
  export type project_materialsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * Filter, which project_materials to fetch.
     */
    where?: project_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_materials to fetch.
     */
    orderBy?: project_materialsOrderByWithRelationInput | project_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_materials.
     */
    cursor?: project_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_materials.
     */
    distinct?: Project_materialsScalarFieldEnum | Project_materialsScalarFieldEnum[]
  }

  /**
   * project_materials findFirstOrThrow
   */
  export type project_materialsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * Filter, which project_materials to fetch.
     */
    where?: project_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_materials to fetch.
     */
    orderBy?: project_materialsOrderByWithRelationInput | project_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_materials.
     */
    cursor?: project_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_materials.
     */
    distinct?: Project_materialsScalarFieldEnum | Project_materialsScalarFieldEnum[]
  }

  /**
   * project_materials findMany
   */
  export type project_materialsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * Filter, which project_materials to fetch.
     */
    where?: project_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_materials to fetch.
     */
    orderBy?: project_materialsOrderByWithRelationInput | project_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing project_materials.
     */
    cursor?: project_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_materials.
     */
    skip?: number
    distinct?: Project_materialsScalarFieldEnum | Project_materialsScalarFieldEnum[]
  }

  /**
   * project_materials create
   */
  export type project_materialsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * The data needed to create a project_materials.
     */
    data: XOR<project_materialsCreateInput, project_materialsUncheckedCreateInput>
  }

  /**
   * project_materials createMany
   */
  export type project_materialsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many project_materials.
     */
    data: project_materialsCreateManyInput | project_materialsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * project_materials createManyAndReturn
   */
  export type project_materialsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * The data used to create many project_materials.
     */
    data: project_materialsCreateManyInput | project_materialsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_materials update
   */
  export type project_materialsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * The data needed to update a project_materials.
     */
    data: XOR<project_materialsUpdateInput, project_materialsUncheckedUpdateInput>
    /**
     * Choose, which project_materials to update.
     */
    where: project_materialsWhereUniqueInput
  }

  /**
   * project_materials updateMany
   */
  export type project_materialsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update project_materials.
     */
    data: XOR<project_materialsUpdateManyMutationInput, project_materialsUncheckedUpdateManyInput>
    /**
     * Filter which project_materials to update
     */
    where?: project_materialsWhereInput
    /**
     * Limit how many project_materials to update.
     */
    limit?: number
  }

  /**
   * project_materials updateManyAndReturn
   */
  export type project_materialsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * The data used to update project_materials.
     */
    data: XOR<project_materialsUpdateManyMutationInput, project_materialsUncheckedUpdateManyInput>
    /**
     * Filter which project_materials to update
     */
    where?: project_materialsWhereInput
    /**
     * Limit how many project_materials to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_materials upsert
   */
  export type project_materialsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * The filter to search for the project_materials to update in case it exists.
     */
    where: project_materialsWhereUniqueInput
    /**
     * In case the project_materials found by the `where` argument doesn't exist, create a new project_materials with this data.
     */
    create: XOR<project_materialsCreateInput, project_materialsUncheckedCreateInput>
    /**
     * In case the project_materials was found with the provided `where` argument, update it with this data.
     */
    update: XOR<project_materialsUpdateInput, project_materialsUncheckedUpdateInput>
  }

  /**
   * project_materials delete
   */
  export type project_materialsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    /**
     * Filter which project_materials to delete.
     */
    where: project_materialsWhereUniqueInput
  }

  /**
   * project_materials deleteMany
   */
  export type project_materialsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_materials to delete
     */
    where?: project_materialsWhereInput
    /**
     * Limit how many project_materials to delete.
     */
    limit?: number
  }

  /**
   * project_materials.project_stages
   */
  export type project_materials$project_stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    where?: project_stagesWhereInput
  }

  /**
   * project_materials without action
   */
  export type project_materialsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
  }


  /**
   * Model project_media
   */

  export type AggregateProject_media = {
    _count: Project_mediaCountAggregateOutputType | null
    _avg: Project_mediaAvgAggregateOutputType | null
    _sum: Project_mediaSumAggregateOutputType | null
    _min: Project_mediaMinAggregateOutputType | null
    _max: Project_mediaMaxAggregateOutputType | null
  }

  export type Project_mediaAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    stage_id: number | null
    staff_id: number | null
  }

  export type Project_mediaSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    stage_id: number | null
    staff_id: number | null
  }

  export type Project_mediaMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    stage_id: number | null
    staff_id: number | null
    media_type: string | null
    file_path: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Project_mediaMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    stage_id: number | null
    staff_id: number | null
    media_type: string | null
    file_path: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Project_mediaCountAggregateOutputType = {
    id: number
    project_id: number
    stage_id: number
    staff_id: number
    media_type: number
    file_path: number
    description: number
    created_at: number
    updated_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Project_mediaAvgAggregateInputType = {
    id?: true
    project_id?: true
    stage_id?: true
    staff_id?: true
  }

  export type Project_mediaSumAggregateInputType = {
    id?: true
    project_id?: true
    stage_id?: true
    staff_id?: true
  }

  export type Project_mediaMinAggregateInputType = {
    id?: true
    project_id?: true
    stage_id?: true
    staff_id?: true
    media_type?: true
    file_path?: true
    description?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Project_mediaMaxAggregateInputType = {
    id?: true
    project_id?: true
    stage_id?: true
    staff_id?: true
    media_type?: true
    file_path?: true
    description?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Project_mediaCountAggregateInputType = {
    id?: true
    project_id?: true
    stage_id?: true
    staff_id?: true
    media_type?: true
    file_path?: true
    description?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Project_mediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_media to aggregate.
     */
    where?: project_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_medias to fetch.
     */
    orderBy?: project_mediaOrderByWithRelationInput | project_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: project_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned project_medias
    **/
    _count?: true | Project_mediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Project_mediaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Project_mediaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_mediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_mediaMaxAggregateInputType
  }

  export type GetProject_mediaAggregateType<T extends Project_mediaAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_media]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_media[P]>
      : GetScalarType<T[P], AggregateProject_media[P]>
  }




  export type project_mediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_mediaWhereInput
    orderBy?: project_mediaOrderByWithAggregationInput | project_mediaOrderByWithAggregationInput[]
    by: Project_mediaScalarFieldEnum[] | Project_mediaScalarFieldEnum
    having?: project_mediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_mediaCountAggregateInputType | true
    _avg?: Project_mediaAvgAggregateInputType
    _sum?: Project_mediaSumAggregateInputType
    _min?: Project_mediaMinAggregateInputType
    _max?: Project_mediaMaxAggregateInputType
  }

  export type Project_mediaGroupByOutputType = {
    id: number
    project_id: number | null
    stage_id: number | null
    staff_id: number | null
    media_type: string | null
    file_path: string
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Project_mediaCountAggregateOutputType | null
    _avg: Project_mediaAvgAggregateOutputType | null
    _sum: Project_mediaSumAggregateOutputType | null
    _min: Project_mediaMinAggregateOutputType | null
    _max: Project_mediaMaxAggregateOutputType | null
  }

  type GetProject_mediaGroupByPayload<T extends project_mediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Project_mediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_mediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_mediaGroupByOutputType[P]>
            : GetScalarType<T[P], Project_mediaGroupByOutputType[P]>
        }
      >
    >


  export type project_mediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    stage_id?: boolean
    staff_id?: boolean
    media_type?: boolean
    file_path?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | project_media$projectsArgs<ExtArgs>
    staff?: boolean | project_media$staffArgs<ExtArgs>
    project_stages?: boolean | project_media$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_media"]>

  export type project_mediaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    stage_id?: boolean
    staff_id?: boolean
    media_type?: boolean
    file_path?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | project_media$projectsArgs<ExtArgs>
    staff?: boolean | project_media$staffArgs<ExtArgs>
    project_stages?: boolean | project_media$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_media"]>

  export type project_mediaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    stage_id?: boolean
    staff_id?: boolean
    media_type?: boolean
    file_path?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | project_media$projectsArgs<ExtArgs>
    staff?: boolean | project_media$staffArgs<ExtArgs>
    project_stages?: boolean | project_media$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_media"]>

  export type project_mediaSelectScalar = {
    id?: boolean
    project_id?: boolean
    stage_id?: boolean
    staff_id?: boolean
    media_type?: boolean
    file_path?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type project_mediaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "stage_id" | "staff_id" | "media_type" | "file_path" | "description" | "created_at" | "updated_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["project_media"]>
  export type project_mediaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | project_media$projectsArgs<ExtArgs>
    staff?: boolean | project_media$staffArgs<ExtArgs>
    project_stages?: boolean | project_media$project_stagesArgs<ExtArgs>
  }
  export type project_mediaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | project_media$projectsArgs<ExtArgs>
    staff?: boolean | project_media$staffArgs<ExtArgs>
    project_stages?: boolean | project_media$project_stagesArgs<ExtArgs>
  }
  export type project_mediaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | project_media$projectsArgs<ExtArgs>
    staff?: boolean | project_media$staffArgs<ExtArgs>
    project_stages?: boolean | project_media$project_stagesArgs<ExtArgs>
  }

  export type $project_mediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "project_media"
    objects: {
      projects: Prisma.$projectsPayload<ExtArgs> | null
      staff: Prisma.$staffPayload<ExtArgs> | null
      project_stages: Prisma.$project_stagesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number | null
      stage_id: number | null
      staff_id: number | null
      media_type: string | null
      file_path: string
      description: string | null
      created_at: Date | null
      updated_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["project_media"]>
    composites: {}
  }

  type project_mediaGetPayload<S extends boolean | null | undefined | project_mediaDefaultArgs> = $Result.GetResult<Prisma.$project_mediaPayload, S>

  type project_mediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<project_mediaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Project_mediaCountAggregateInputType | true
    }

  export interface project_mediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['project_media'], meta: { name: 'project_media' } }
    /**
     * Find zero or one Project_media that matches the filter.
     * @param {project_mediaFindUniqueArgs} args - Arguments to find a Project_media
     * @example
     * // Get one Project_media
     * const project_media = await prisma.project_media.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends project_mediaFindUniqueArgs>(args: SelectSubset<T, project_mediaFindUniqueArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project_media that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {project_mediaFindUniqueOrThrowArgs} args - Arguments to find a Project_media
     * @example
     * // Get one Project_media
     * const project_media = await prisma.project_media.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends project_mediaFindUniqueOrThrowArgs>(args: SelectSubset<T, project_mediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_mediaFindFirstArgs} args - Arguments to find a Project_media
     * @example
     * // Get one Project_media
     * const project_media = await prisma.project_media.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends project_mediaFindFirstArgs>(args?: SelectSubset<T, project_mediaFindFirstArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_media that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_mediaFindFirstOrThrowArgs} args - Arguments to find a Project_media
     * @example
     * // Get one Project_media
     * const project_media = await prisma.project_media.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends project_mediaFindFirstOrThrowArgs>(args?: SelectSubset<T, project_mediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Project_medias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_mediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_medias
     * const project_medias = await prisma.project_media.findMany()
     * 
     * // Get first 10 Project_medias
     * const project_medias = await prisma.project_media.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const project_mediaWithIdOnly = await prisma.project_media.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends project_mediaFindManyArgs>(args?: SelectSubset<T, project_mediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project_media.
     * @param {project_mediaCreateArgs} args - Arguments to create a Project_media.
     * @example
     * // Create one Project_media
     * const Project_media = await prisma.project_media.create({
     *   data: {
     *     // ... data to create a Project_media
     *   }
     * })
     * 
     */
    create<T extends project_mediaCreateArgs>(args: SelectSubset<T, project_mediaCreateArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Project_medias.
     * @param {project_mediaCreateManyArgs} args - Arguments to create many Project_medias.
     * @example
     * // Create many Project_medias
     * const project_media = await prisma.project_media.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends project_mediaCreateManyArgs>(args?: SelectSubset<T, project_mediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Project_medias and returns the data saved in the database.
     * @param {project_mediaCreateManyAndReturnArgs} args - Arguments to create many Project_medias.
     * @example
     * // Create many Project_medias
     * const project_media = await prisma.project_media.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Project_medias and only return the `id`
     * const project_mediaWithIdOnly = await prisma.project_media.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends project_mediaCreateManyAndReturnArgs>(args?: SelectSubset<T, project_mediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project_media.
     * @param {project_mediaDeleteArgs} args - Arguments to delete one Project_media.
     * @example
     * // Delete one Project_media
     * const Project_media = await prisma.project_media.delete({
     *   where: {
     *     // ... filter to delete one Project_media
     *   }
     * })
     * 
     */
    delete<T extends project_mediaDeleteArgs>(args: SelectSubset<T, project_mediaDeleteArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project_media.
     * @param {project_mediaUpdateArgs} args - Arguments to update one Project_media.
     * @example
     * // Update one Project_media
     * const project_media = await prisma.project_media.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends project_mediaUpdateArgs>(args: SelectSubset<T, project_mediaUpdateArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Project_medias.
     * @param {project_mediaDeleteManyArgs} args - Arguments to filter Project_medias to delete.
     * @example
     * // Delete a few Project_medias
     * const { count } = await prisma.project_media.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends project_mediaDeleteManyArgs>(args?: SelectSubset<T, project_mediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_mediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_medias
     * const project_media = await prisma.project_media.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends project_mediaUpdateManyArgs>(args: SelectSubset<T, project_mediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_medias and returns the data updated in the database.
     * @param {project_mediaUpdateManyAndReturnArgs} args - Arguments to update many Project_medias.
     * @example
     * // Update many Project_medias
     * const project_media = await prisma.project_media.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Project_medias and only return the `id`
     * const project_mediaWithIdOnly = await prisma.project_media.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends project_mediaUpdateManyAndReturnArgs>(args: SelectSubset<T, project_mediaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project_media.
     * @param {project_mediaUpsertArgs} args - Arguments to update or create a Project_media.
     * @example
     * // Update or create a Project_media
     * const project_media = await prisma.project_media.upsert({
     *   create: {
     *     // ... data to create a Project_media
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_media we want to update
     *   }
     * })
     */
    upsert<T extends project_mediaUpsertArgs>(args: SelectSubset<T, project_mediaUpsertArgs<ExtArgs>>): Prisma__project_mediaClient<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Project_medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_mediaCountArgs} args - Arguments to filter Project_medias to count.
     * @example
     * // Count the number of Project_medias
     * const count = await prisma.project_media.count({
     *   where: {
     *     // ... the filter for the Project_medias we want to count
     *   }
     * })
    **/
    count<T extends project_mediaCountArgs>(
      args?: Subset<T, project_mediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_mediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_mediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_mediaAggregateArgs>(args: Subset<T, Project_mediaAggregateArgs>): Prisma.PrismaPromise<GetProject_mediaAggregateType<T>>

    /**
     * Group by Project_media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_mediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends project_mediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: project_mediaGroupByArgs['orderBy'] }
        : { orderBy?: project_mediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, project_mediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_mediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the project_media model
   */
  readonly fields: project_mediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for project_media.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__project_mediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    projects<T extends project_media$projectsArgs<ExtArgs> = {}>(args?: Subset<T, project_media$projectsArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    staff<T extends project_media$staffArgs<ExtArgs> = {}>(args?: Subset<T, project_media$staffArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project_stages<T extends project_media$project_stagesArgs<ExtArgs> = {}>(args?: Subset<T, project_media$project_stagesArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the project_media model
   */
  interface project_mediaFieldRefs {
    readonly id: FieldRef<"project_media", 'Int'>
    readonly project_id: FieldRef<"project_media", 'Int'>
    readonly stage_id: FieldRef<"project_media", 'Int'>
    readonly staff_id: FieldRef<"project_media", 'Int'>
    readonly media_type: FieldRef<"project_media", 'String'>
    readonly file_path: FieldRef<"project_media", 'String'>
    readonly description: FieldRef<"project_media", 'String'>
    readonly created_at: FieldRef<"project_media", 'DateTime'>
    readonly updated_at: FieldRef<"project_media", 'DateTime'>
    readonly synced_at: FieldRef<"project_media", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"project_media", 'String'>
  }
    

  // Custom InputTypes
  /**
   * project_media findUnique
   */
  export type project_mediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * Filter, which project_media to fetch.
     */
    where: project_mediaWhereUniqueInput
  }

  /**
   * project_media findUniqueOrThrow
   */
  export type project_mediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * Filter, which project_media to fetch.
     */
    where: project_mediaWhereUniqueInput
  }

  /**
   * project_media findFirst
   */
  export type project_mediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * Filter, which project_media to fetch.
     */
    where?: project_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_medias to fetch.
     */
    orderBy?: project_mediaOrderByWithRelationInput | project_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_medias.
     */
    cursor?: project_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_medias.
     */
    distinct?: Project_mediaScalarFieldEnum | Project_mediaScalarFieldEnum[]
  }

  /**
   * project_media findFirstOrThrow
   */
  export type project_mediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * Filter, which project_media to fetch.
     */
    where?: project_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_medias to fetch.
     */
    orderBy?: project_mediaOrderByWithRelationInput | project_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_medias.
     */
    cursor?: project_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_medias.
     */
    distinct?: Project_mediaScalarFieldEnum | Project_mediaScalarFieldEnum[]
  }

  /**
   * project_media findMany
   */
  export type project_mediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * Filter, which project_medias to fetch.
     */
    where?: project_mediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_medias to fetch.
     */
    orderBy?: project_mediaOrderByWithRelationInput | project_mediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing project_medias.
     */
    cursor?: project_mediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_medias.
     */
    skip?: number
    distinct?: Project_mediaScalarFieldEnum | Project_mediaScalarFieldEnum[]
  }

  /**
   * project_media create
   */
  export type project_mediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * The data needed to create a project_media.
     */
    data: XOR<project_mediaCreateInput, project_mediaUncheckedCreateInput>
  }

  /**
   * project_media createMany
   */
  export type project_mediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many project_medias.
     */
    data: project_mediaCreateManyInput | project_mediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * project_media createManyAndReturn
   */
  export type project_mediaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * The data used to create many project_medias.
     */
    data: project_mediaCreateManyInput | project_mediaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_media update
   */
  export type project_mediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * The data needed to update a project_media.
     */
    data: XOR<project_mediaUpdateInput, project_mediaUncheckedUpdateInput>
    /**
     * Choose, which project_media to update.
     */
    where: project_mediaWhereUniqueInput
  }

  /**
   * project_media updateMany
   */
  export type project_mediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update project_medias.
     */
    data: XOR<project_mediaUpdateManyMutationInput, project_mediaUncheckedUpdateManyInput>
    /**
     * Filter which project_medias to update
     */
    where?: project_mediaWhereInput
    /**
     * Limit how many project_medias to update.
     */
    limit?: number
  }

  /**
   * project_media updateManyAndReturn
   */
  export type project_mediaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * The data used to update project_medias.
     */
    data: XOR<project_mediaUpdateManyMutationInput, project_mediaUncheckedUpdateManyInput>
    /**
     * Filter which project_medias to update
     */
    where?: project_mediaWhereInput
    /**
     * Limit how many project_medias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_media upsert
   */
  export type project_mediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * The filter to search for the project_media to update in case it exists.
     */
    where: project_mediaWhereUniqueInput
    /**
     * In case the project_media found by the `where` argument doesn't exist, create a new project_media with this data.
     */
    create: XOR<project_mediaCreateInput, project_mediaUncheckedCreateInput>
    /**
     * In case the project_media was found with the provided `where` argument, update it with this data.
     */
    update: XOR<project_mediaUpdateInput, project_mediaUncheckedUpdateInput>
  }

  /**
   * project_media delete
   */
  export type project_mediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    /**
     * Filter which project_media to delete.
     */
    where: project_mediaWhereUniqueInput
  }

  /**
   * project_media deleteMany
   */
  export type project_mediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_medias to delete
     */
    where?: project_mediaWhereInput
    /**
     * Limit how many project_medias to delete.
     */
    limit?: number
  }

  /**
   * project_media.projects
   */
  export type project_media$projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    where?: projectsWhereInput
  }

  /**
   * project_media.staff
   */
  export type project_media$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    where?: staffWhereInput
  }

  /**
   * project_media.project_stages
   */
  export type project_media$project_stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    where?: project_stagesWhereInput
  }

  /**
   * project_media without action
   */
  export type project_mediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
  }


  /**
   * Model project_staff
   */

  export type AggregateProject_staff = {
    _count: Project_staffCountAggregateOutputType | null
    _avg: Project_staffAvgAggregateOutputType | null
    _sum: Project_staffSumAggregateOutputType | null
    _min: Project_staffMinAggregateOutputType | null
    _max: Project_staffMaxAggregateOutputType | null
  }

  export type Project_staffAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
    hours_planned: number | null
    hours_worked: number | null
  }

  export type Project_staffSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
    hours_planned: number | null
    hours_worked: number | null
  }

  export type Project_staffMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
    role_description: string | null
    start_date: Date | null
    end_date: Date | null
    hours_planned: number | null
    hours_worked: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Project_staffMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
    role_description: string | null
    start_date: Date | null
    end_date: Date | null
    hours_planned: number | null
    hours_worked: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Project_staffCountAggregateOutputType = {
    id: number
    project_id: number
    staff_id: number
    stage_id: number
    role_description: number
    start_date: number
    end_date: number
    hours_planned: number
    hours_worked: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Project_staffAvgAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    hours_planned?: true
    hours_worked?: true
  }

  export type Project_staffSumAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    hours_planned?: true
    hours_worked?: true
  }

  export type Project_staffMinAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    role_description?: true
    start_date?: true
    end_date?: true
    hours_planned?: true
    hours_worked?: true
    created_at?: true
    updated_at?: true
  }

  export type Project_staffMaxAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    role_description?: true
    start_date?: true
    end_date?: true
    hours_planned?: true
    hours_worked?: true
    created_at?: true
    updated_at?: true
  }

  export type Project_staffCountAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    role_description?: true
    start_date?: true
    end_date?: true
    hours_planned?: true
    hours_worked?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Project_staffAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_staff to aggregate.
     */
    where?: project_staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_staffs to fetch.
     */
    orderBy?: project_staffOrderByWithRelationInput | project_staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: project_staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_staffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_staffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned project_staffs
    **/
    _count?: true | Project_staffCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Project_staffAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Project_staffSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_staffMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_staffMaxAggregateInputType
  }

  export type GetProject_staffAggregateType<T extends Project_staffAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_staff]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_staff[P]>
      : GetScalarType<T[P], AggregateProject_staff[P]>
  }




  export type project_staffGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_staffWhereInput
    orderBy?: project_staffOrderByWithAggregationInput | project_staffOrderByWithAggregationInput[]
    by: Project_staffScalarFieldEnum[] | Project_staffScalarFieldEnum
    having?: project_staffScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_staffCountAggregateInputType | true
    _avg?: Project_staffAvgAggregateInputType
    _sum?: Project_staffSumAggregateInputType
    _min?: Project_staffMinAggregateInputType
    _max?: Project_staffMaxAggregateInputType
  }

  export type Project_staffGroupByOutputType = {
    id: number
    project_id: number
    staff_id: number
    stage_id: number | null
    role_description: string | null
    start_date: Date
    end_date: Date | null
    hours_planned: number | null
    hours_worked: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: Project_staffCountAggregateOutputType | null
    _avg: Project_staffAvgAggregateOutputType | null
    _sum: Project_staffSumAggregateOutputType | null
    _min: Project_staffMinAggregateOutputType | null
    _max: Project_staffMaxAggregateOutputType | null
  }

  type GetProject_staffGroupByPayload<T extends project_staffGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Project_staffGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_staffGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_staffGroupByOutputType[P]>
            : GetScalarType<T[P], Project_staffGroupByOutputType[P]>
        }
      >
    >


  export type project_staffSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    role_description?: boolean
    start_date?: boolean
    end_date?: boolean
    hours_planned?: boolean
    hours_worked?: boolean
    created_at?: boolean
    updated_at?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | project_staff$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_staff"]>

  export type project_staffSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    role_description?: boolean
    start_date?: boolean
    end_date?: boolean
    hours_planned?: boolean
    hours_worked?: boolean
    created_at?: boolean
    updated_at?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | project_staff$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_staff"]>

  export type project_staffSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    role_description?: boolean
    start_date?: boolean
    end_date?: boolean
    hours_planned?: boolean
    hours_worked?: boolean
    created_at?: boolean
    updated_at?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | project_staff$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["project_staff"]>

  export type project_staffSelectScalar = {
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    role_description?: boolean
    start_date?: boolean
    end_date?: boolean
    hours_planned?: boolean
    hours_worked?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type project_staffOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "staff_id" | "stage_id" | "role_description" | "start_date" | "end_date" | "hours_planned" | "hours_worked" | "created_at" | "updated_at", ExtArgs["result"]["project_staff"]>
  export type project_staffInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | project_staff$project_stagesArgs<ExtArgs>
  }
  export type project_staffIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | project_staff$project_stagesArgs<ExtArgs>
  }
  export type project_staffIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | project_staff$project_stagesArgs<ExtArgs>
  }

  export type $project_staffPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "project_staff"
    objects: {
      projects: Prisma.$projectsPayload<ExtArgs>
      staff: Prisma.$staffPayload<ExtArgs>
      project_stages: Prisma.$project_stagesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number
      staff_id: number
      stage_id: number | null
      role_description: string | null
      start_date: Date
      end_date: Date | null
      hours_planned: number | null
      hours_worked: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["project_staff"]>
    composites: {}
  }

  type project_staffGetPayload<S extends boolean | null | undefined | project_staffDefaultArgs> = $Result.GetResult<Prisma.$project_staffPayload, S>

  type project_staffCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<project_staffFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Project_staffCountAggregateInputType | true
    }

  export interface project_staffDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['project_staff'], meta: { name: 'project_staff' } }
    /**
     * Find zero or one Project_staff that matches the filter.
     * @param {project_staffFindUniqueArgs} args - Arguments to find a Project_staff
     * @example
     * // Get one Project_staff
     * const project_staff = await prisma.project_staff.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends project_staffFindUniqueArgs>(args: SelectSubset<T, project_staffFindUniqueArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project_staff that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {project_staffFindUniqueOrThrowArgs} args - Arguments to find a Project_staff
     * @example
     * // Get one Project_staff
     * const project_staff = await prisma.project_staff.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends project_staffFindUniqueOrThrowArgs>(args: SelectSubset<T, project_staffFindUniqueOrThrowArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_staff that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_staffFindFirstArgs} args - Arguments to find a Project_staff
     * @example
     * // Get one Project_staff
     * const project_staff = await prisma.project_staff.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends project_staffFindFirstArgs>(args?: SelectSubset<T, project_staffFindFirstArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_staff that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_staffFindFirstOrThrowArgs} args - Arguments to find a Project_staff
     * @example
     * // Get one Project_staff
     * const project_staff = await prisma.project_staff.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends project_staffFindFirstOrThrowArgs>(args?: SelectSubset<T, project_staffFindFirstOrThrowArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Project_staffs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_staffFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_staffs
     * const project_staffs = await prisma.project_staff.findMany()
     * 
     * // Get first 10 Project_staffs
     * const project_staffs = await prisma.project_staff.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const project_staffWithIdOnly = await prisma.project_staff.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends project_staffFindManyArgs>(args?: SelectSubset<T, project_staffFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project_staff.
     * @param {project_staffCreateArgs} args - Arguments to create a Project_staff.
     * @example
     * // Create one Project_staff
     * const Project_staff = await prisma.project_staff.create({
     *   data: {
     *     // ... data to create a Project_staff
     *   }
     * })
     * 
     */
    create<T extends project_staffCreateArgs>(args: SelectSubset<T, project_staffCreateArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Project_staffs.
     * @param {project_staffCreateManyArgs} args - Arguments to create many Project_staffs.
     * @example
     * // Create many Project_staffs
     * const project_staff = await prisma.project_staff.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends project_staffCreateManyArgs>(args?: SelectSubset<T, project_staffCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Project_staffs and returns the data saved in the database.
     * @param {project_staffCreateManyAndReturnArgs} args - Arguments to create many Project_staffs.
     * @example
     * // Create many Project_staffs
     * const project_staff = await prisma.project_staff.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Project_staffs and only return the `id`
     * const project_staffWithIdOnly = await prisma.project_staff.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends project_staffCreateManyAndReturnArgs>(args?: SelectSubset<T, project_staffCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project_staff.
     * @param {project_staffDeleteArgs} args - Arguments to delete one Project_staff.
     * @example
     * // Delete one Project_staff
     * const Project_staff = await prisma.project_staff.delete({
     *   where: {
     *     // ... filter to delete one Project_staff
     *   }
     * })
     * 
     */
    delete<T extends project_staffDeleteArgs>(args: SelectSubset<T, project_staffDeleteArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project_staff.
     * @param {project_staffUpdateArgs} args - Arguments to update one Project_staff.
     * @example
     * // Update one Project_staff
     * const project_staff = await prisma.project_staff.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends project_staffUpdateArgs>(args: SelectSubset<T, project_staffUpdateArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Project_staffs.
     * @param {project_staffDeleteManyArgs} args - Arguments to filter Project_staffs to delete.
     * @example
     * // Delete a few Project_staffs
     * const { count } = await prisma.project_staff.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends project_staffDeleteManyArgs>(args?: SelectSubset<T, project_staffDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_staffs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_staffUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_staffs
     * const project_staff = await prisma.project_staff.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends project_staffUpdateManyArgs>(args: SelectSubset<T, project_staffUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_staffs and returns the data updated in the database.
     * @param {project_staffUpdateManyAndReturnArgs} args - Arguments to update many Project_staffs.
     * @example
     * // Update many Project_staffs
     * const project_staff = await prisma.project_staff.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Project_staffs and only return the `id`
     * const project_staffWithIdOnly = await prisma.project_staff.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends project_staffUpdateManyAndReturnArgs>(args: SelectSubset<T, project_staffUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project_staff.
     * @param {project_staffUpsertArgs} args - Arguments to update or create a Project_staff.
     * @example
     * // Update or create a Project_staff
     * const project_staff = await prisma.project_staff.upsert({
     *   create: {
     *     // ... data to create a Project_staff
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_staff we want to update
     *   }
     * })
     */
    upsert<T extends project_staffUpsertArgs>(args: SelectSubset<T, project_staffUpsertArgs<ExtArgs>>): Prisma__project_staffClient<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Project_staffs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_staffCountArgs} args - Arguments to filter Project_staffs to count.
     * @example
     * // Count the number of Project_staffs
     * const count = await prisma.project_staff.count({
     *   where: {
     *     // ... the filter for the Project_staffs we want to count
     *   }
     * })
    **/
    count<T extends project_staffCountArgs>(
      args?: Subset<T, project_staffCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_staffCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_staffAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_staffAggregateArgs>(args: Subset<T, Project_staffAggregateArgs>): Prisma.PrismaPromise<GetProject_staffAggregateType<T>>

    /**
     * Group by Project_staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_staffGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends project_staffGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: project_staffGroupByArgs['orderBy'] }
        : { orderBy?: project_staffGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, project_staffGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_staffGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the project_staff model
   */
  readonly fields: project_staffFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for project_staff.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__project_staffClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    projects<T extends projectsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectsDefaultArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    staff<T extends staffDefaultArgs<ExtArgs> = {}>(args?: Subset<T, staffDefaultArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    project_stages<T extends project_staff$project_stagesArgs<ExtArgs> = {}>(args?: Subset<T, project_staff$project_stagesArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the project_staff model
   */
  interface project_staffFieldRefs {
    readonly id: FieldRef<"project_staff", 'Int'>
    readonly project_id: FieldRef<"project_staff", 'Int'>
    readonly staff_id: FieldRef<"project_staff", 'Int'>
    readonly stage_id: FieldRef<"project_staff", 'Int'>
    readonly role_description: FieldRef<"project_staff", 'String'>
    readonly start_date: FieldRef<"project_staff", 'DateTime'>
    readonly end_date: FieldRef<"project_staff", 'DateTime'>
    readonly hours_planned: FieldRef<"project_staff", 'Int'>
    readonly hours_worked: FieldRef<"project_staff", 'Int'>
    readonly created_at: FieldRef<"project_staff", 'DateTime'>
    readonly updated_at: FieldRef<"project_staff", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * project_staff findUnique
   */
  export type project_staffFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * Filter, which project_staff to fetch.
     */
    where: project_staffWhereUniqueInput
  }

  /**
   * project_staff findUniqueOrThrow
   */
  export type project_staffFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * Filter, which project_staff to fetch.
     */
    where: project_staffWhereUniqueInput
  }

  /**
   * project_staff findFirst
   */
  export type project_staffFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * Filter, which project_staff to fetch.
     */
    where?: project_staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_staffs to fetch.
     */
    orderBy?: project_staffOrderByWithRelationInput | project_staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_staffs.
     */
    cursor?: project_staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_staffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_staffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_staffs.
     */
    distinct?: Project_staffScalarFieldEnum | Project_staffScalarFieldEnum[]
  }

  /**
   * project_staff findFirstOrThrow
   */
  export type project_staffFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * Filter, which project_staff to fetch.
     */
    where?: project_staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_staffs to fetch.
     */
    orderBy?: project_staffOrderByWithRelationInput | project_staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_staffs.
     */
    cursor?: project_staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_staffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_staffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_staffs.
     */
    distinct?: Project_staffScalarFieldEnum | Project_staffScalarFieldEnum[]
  }

  /**
   * project_staff findMany
   */
  export type project_staffFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * Filter, which project_staffs to fetch.
     */
    where?: project_staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_staffs to fetch.
     */
    orderBy?: project_staffOrderByWithRelationInput | project_staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing project_staffs.
     */
    cursor?: project_staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_staffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_staffs.
     */
    skip?: number
    distinct?: Project_staffScalarFieldEnum | Project_staffScalarFieldEnum[]
  }

  /**
   * project_staff create
   */
  export type project_staffCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * The data needed to create a project_staff.
     */
    data: XOR<project_staffCreateInput, project_staffUncheckedCreateInput>
  }

  /**
   * project_staff createMany
   */
  export type project_staffCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many project_staffs.
     */
    data: project_staffCreateManyInput | project_staffCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * project_staff createManyAndReturn
   */
  export type project_staffCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * The data used to create many project_staffs.
     */
    data: project_staffCreateManyInput | project_staffCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_staff update
   */
  export type project_staffUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * The data needed to update a project_staff.
     */
    data: XOR<project_staffUpdateInput, project_staffUncheckedUpdateInput>
    /**
     * Choose, which project_staff to update.
     */
    where: project_staffWhereUniqueInput
  }

  /**
   * project_staff updateMany
   */
  export type project_staffUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update project_staffs.
     */
    data: XOR<project_staffUpdateManyMutationInput, project_staffUncheckedUpdateManyInput>
    /**
     * Filter which project_staffs to update
     */
    where?: project_staffWhereInput
    /**
     * Limit how many project_staffs to update.
     */
    limit?: number
  }

  /**
   * project_staff updateManyAndReturn
   */
  export type project_staffUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * The data used to update project_staffs.
     */
    data: XOR<project_staffUpdateManyMutationInput, project_staffUncheckedUpdateManyInput>
    /**
     * Filter which project_staffs to update
     */
    where?: project_staffWhereInput
    /**
     * Limit how many project_staffs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_staff upsert
   */
  export type project_staffUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * The filter to search for the project_staff to update in case it exists.
     */
    where: project_staffWhereUniqueInput
    /**
     * In case the project_staff found by the `where` argument doesn't exist, create a new project_staff with this data.
     */
    create: XOR<project_staffCreateInput, project_staffUncheckedCreateInput>
    /**
     * In case the project_staff was found with the provided `where` argument, update it with this data.
     */
    update: XOR<project_staffUpdateInput, project_staffUncheckedUpdateInput>
  }

  /**
   * project_staff delete
   */
  export type project_staffDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    /**
     * Filter which project_staff to delete.
     */
    where: project_staffWhereUniqueInput
  }

  /**
   * project_staff deleteMany
   */
  export type project_staffDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_staffs to delete
     */
    where?: project_staffWhereInput
    /**
     * Limit how many project_staffs to delete.
     */
    limit?: number
  }

  /**
   * project_staff.project_stages
   */
  export type project_staff$project_stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    where?: project_stagesWhereInput
  }

  /**
   * project_staff without action
   */
  export type project_staffDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
  }


  /**
   * Model project_stages
   */

  export type AggregateProject_stages = {
    _count: Project_stagesCountAggregateOutputType | null
    _avg: Project_stagesAvgAggregateOutputType | null
    _sum: Project_stagesSumAggregateOutputType | null
    _min: Project_stagesMinAggregateOutputType | null
    _max: Project_stagesMaxAggregateOutputType | null
  }

  export type Project_stagesAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    order_index: number | null
    estimated_duration: number | null
    actual_duration: number | null
    completion_percentage: number | null
  }

  export type Project_stagesSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    order_index: number | null
    estimated_duration: number | null
    actual_duration: number | null
    completion_percentage: number | null
  }

  export type Project_stagesMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    name: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    status: string | null
    order_index: number | null
    estimated_duration: number | null
    actual_duration: number | null
    completion_percentage: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Project_stagesMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    name: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    status: string | null
    order_index: number | null
    estimated_duration: number | null
    actual_duration: number | null
    completion_percentage: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Project_stagesCountAggregateOutputType = {
    id: number
    project_id: number
    name: number
    description: number
    start_date: number
    end_date: number
    status: number
    order_index: number
    estimated_duration: number
    actual_duration: number
    completion_percentage: number
    notes: number
    created_at: number
    updated_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Project_stagesAvgAggregateInputType = {
    id?: true
    project_id?: true
    order_index?: true
    estimated_duration?: true
    actual_duration?: true
    completion_percentage?: true
  }

  export type Project_stagesSumAggregateInputType = {
    id?: true
    project_id?: true
    order_index?: true
    estimated_duration?: true
    actual_duration?: true
    completion_percentage?: true
  }

  export type Project_stagesMinAggregateInputType = {
    id?: true
    project_id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    status?: true
    order_index?: true
    estimated_duration?: true
    actual_duration?: true
    completion_percentage?: true
    notes?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Project_stagesMaxAggregateInputType = {
    id?: true
    project_id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    status?: true
    order_index?: true
    estimated_duration?: true
    actual_duration?: true
    completion_percentage?: true
    notes?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Project_stagesCountAggregateInputType = {
    id?: true
    project_id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    status?: true
    order_index?: true
    estimated_duration?: true
    actual_duration?: true
    completion_percentage?: true
    notes?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Project_stagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_stages to aggregate.
     */
    where?: project_stagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_stages to fetch.
     */
    orderBy?: project_stagesOrderByWithRelationInput | project_stagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: project_stagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_stages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned project_stages
    **/
    _count?: true | Project_stagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Project_stagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Project_stagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_stagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_stagesMaxAggregateInputType
  }

  export type GetProject_stagesAggregateType<T extends Project_stagesAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_stages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_stages[P]>
      : GetScalarType<T[P], AggregateProject_stages[P]>
  }




  export type project_stagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_stagesWhereInput
    orderBy?: project_stagesOrderByWithAggregationInput | project_stagesOrderByWithAggregationInput[]
    by: Project_stagesScalarFieldEnum[] | Project_stagesScalarFieldEnum
    having?: project_stagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_stagesCountAggregateInputType | true
    _avg?: Project_stagesAvgAggregateInputType
    _sum?: Project_stagesSumAggregateInputType
    _min?: Project_stagesMinAggregateInputType
    _max?: Project_stagesMaxAggregateInputType
  }

  export type Project_stagesGroupByOutputType = {
    id: number
    project_id: number
    name: string
    description: string | null
    start_date: Date | null
    end_date: Date | null
    status: string | null
    order_index: number
    estimated_duration: number | null
    actual_duration: number | null
    completion_percentage: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Project_stagesCountAggregateOutputType | null
    _avg: Project_stagesAvgAggregateOutputType | null
    _sum: Project_stagesSumAggregateOutputType | null
    _min: Project_stagesMinAggregateOutputType | null
    _max: Project_stagesMaxAggregateOutputType | null
  }

  type GetProject_stagesGroupByPayload<T extends project_stagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Project_stagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_stagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_stagesGroupByOutputType[P]>
            : GetScalarType<T[P], Project_stagesGroupByOutputType[P]>
        }
      >
    >


  export type project_stagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    order_index?: boolean
    estimated_duration?: boolean
    actual_duration?: boolean
    completion_percentage?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    project_materials?: boolean | project_stages$project_materialsArgs<ExtArgs>
    project_media?: boolean | project_stages$project_mediaArgs<ExtArgs>
    project_staff?: boolean | project_stages$project_staffArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    site_reports?: boolean | project_stages$site_reportsArgs<ExtArgs>
    stage_checklists?: boolean | project_stages$stage_checklistsArgs<ExtArgs>
    stage_tags?: boolean | project_stages$stage_tagsArgs<ExtArgs>
    tasks?: boolean | project_stages$tasksArgs<ExtArgs>
    time_logs?: boolean | project_stages$time_logsArgs<ExtArgs>
    _count?: boolean | Project_stagesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project_stages"]>

  export type project_stagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    order_index?: boolean
    estimated_duration?: boolean
    actual_duration?: boolean
    completion_percentage?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project_stages"]>

  export type project_stagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    order_index?: boolean
    estimated_duration?: boolean
    actual_duration?: boolean
    completion_percentage?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project_stages"]>

  export type project_stagesSelectScalar = {
    id?: boolean
    project_id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    order_index?: boolean
    estimated_duration?: boolean
    actual_duration?: boolean
    completion_percentage?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type project_stagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "name" | "description" | "start_date" | "end_date" | "status" | "order_index" | "estimated_duration" | "actual_duration" | "completion_percentage" | "notes" | "created_at" | "updated_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["project_stages"]>
  export type project_stagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project_materials?: boolean | project_stages$project_materialsArgs<ExtArgs>
    project_media?: boolean | project_stages$project_mediaArgs<ExtArgs>
    project_staff?: boolean | project_stages$project_staffArgs<ExtArgs>
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    site_reports?: boolean | project_stages$site_reportsArgs<ExtArgs>
    stage_checklists?: boolean | project_stages$stage_checklistsArgs<ExtArgs>
    stage_tags?: boolean | project_stages$stage_tagsArgs<ExtArgs>
    tasks?: boolean | project_stages$tasksArgs<ExtArgs>
    time_logs?: boolean | project_stages$time_logsArgs<ExtArgs>
    _count?: boolean | Project_stagesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type project_stagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }
  export type project_stagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
  }

  export type $project_stagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "project_stages"
    objects: {
      project_materials: Prisma.$project_materialsPayload<ExtArgs>[]
      project_media: Prisma.$project_mediaPayload<ExtArgs>[]
      project_staff: Prisma.$project_staffPayload<ExtArgs>[]
      projects: Prisma.$projectsPayload<ExtArgs>
      site_reports: Prisma.$site_reportsPayload<ExtArgs>[]
      stage_checklists: Prisma.$stage_checklistsPayload<ExtArgs>[]
      stage_tags: Prisma.$stage_tagsPayload<ExtArgs>[]
      tasks: Prisma.$tasksPayload<ExtArgs>[]
      time_logs: Prisma.$time_logsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number
      name: string
      description: string | null
      start_date: Date | null
      end_date: Date | null
      status: string | null
      order_index: number
      estimated_duration: number | null
      actual_duration: number | null
      completion_percentage: number | null
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["project_stages"]>
    composites: {}
  }

  type project_stagesGetPayload<S extends boolean | null | undefined | project_stagesDefaultArgs> = $Result.GetResult<Prisma.$project_stagesPayload, S>

  type project_stagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<project_stagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Project_stagesCountAggregateInputType | true
    }

  export interface project_stagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['project_stages'], meta: { name: 'project_stages' } }
    /**
     * Find zero or one Project_stages that matches the filter.
     * @param {project_stagesFindUniqueArgs} args - Arguments to find a Project_stages
     * @example
     * // Get one Project_stages
     * const project_stages = await prisma.project_stages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends project_stagesFindUniqueArgs>(args: SelectSubset<T, project_stagesFindUniqueArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project_stages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {project_stagesFindUniqueOrThrowArgs} args - Arguments to find a Project_stages
     * @example
     * // Get one Project_stages
     * const project_stages = await prisma.project_stages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends project_stagesFindUniqueOrThrowArgs>(args: SelectSubset<T, project_stagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_stages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_stagesFindFirstArgs} args - Arguments to find a Project_stages
     * @example
     * // Get one Project_stages
     * const project_stages = await prisma.project_stages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends project_stagesFindFirstArgs>(args?: SelectSubset<T, project_stagesFindFirstArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_stages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_stagesFindFirstOrThrowArgs} args - Arguments to find a Project_stages
     * @example
     * // Get one Project_stages
     * const project_stages = await prisma.project_stages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends project_stagesFindFirstOrThrowArgs>(args?: SelectSubset<T, project_stagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Project_stages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_stagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_stages
     * const project_stages = await prisma.project_stages.findMany()
     * 
     * // Get first 10 Project_stages
     * const project_stages = await prisma.project_stages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const project_stagesWithIdOnly = await prisma.project_stages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends project_stagesFindManyArgs>(args?: SelectSubset<T, project_stagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project_stages.
     * @param {project_stagesCreateArgs} args - Arguments to create a Project_stages.
     * @example
     * // Create one Project_stages
     * const Project_stages = await prisma.project_stages.create({
     *   data: {
     *     // ... data to create a Project_stages
     *   }
     * })
     * 
     */
    create<T extends project_stagesCreateArgs>(args: SelectSubset<T, project_stagesCreateArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Project_stages.
     * @param {project_stagesCreateManyArgs} args - Arguments to create many Project_stages.
     * @example
     * // Create many Project_stages
     * const project_stages = await prisma.project_stages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends project_stagesCreateManyArgs>(args?: SelectSubset<T, project_stagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Project_stages and returns the data saved in the database.
     * @param {project_stagesCreateManyAndReturnArgs} args - Arguments to create many Project_stages.
     * @example
     * // Create many Project_stages
     * const project_stages = await prisma.project_stages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Project_stages and only return the `id`
     * const project_stagesWithIdOnly = await prisma.project_stages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends project_stagesCreateManyAndReturnArgs>(args?: SelectSubset<T, project_stagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project_stages.
     * @param {project_stagesDeleteArgs} args - Arguments to delete one Project_stages.
     * @example
     * // Delete one Project_stages
     * const Project_stages = await prisma.project_stages.delete({
     *   where: {
     *     // ... filter to delete one Project_stages
     *   }
     * })
     * 
     */
    delete<T extends project_stagesDeleteArgs>(args: SelectSubset<T, project_stagesDeleteArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project_stages.
     * @param {project_stagesUpdateArgs} args - Arguments to update one Project_stages.
     * @example
     * // Update one Project_stages
     * const project_stages = await prisma.project_stages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends project_stagesUpdateArgs>(args: SelectSubset<T, project_stagesUpdateArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Project_stages.
     * @param {project_stagesDeleteManyArgs} args - Arguments to filter Project_stages to delete.
     * @example
     * // Delete a few Project_stages
     * const { count } = await prisma.project_stages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends project_stagesDeleteManyArgs>(args?: SelectSubset<T, project_stagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_stages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_stagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_stages
     * const project_stages = await prisma.project_stages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends project_stagesUpdateManyArgs>(args: SelectSubset<T, project_stagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_stages and returns the data updated in the database.
     * @param {project_stagesUpdateManyAndReturnArgs} args - Arguments to update many Project_stages.
     * @example
     * // Update many Project_stages
     * const project_stages = await prisma.project_stages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Project_stages and only return the `id`
     * const project_stagesWithIdOnly = await prisma.project_stages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends project_stagesUpdateManyAndReturnArgs>(args: SelectSubset<T, project_stagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project_stages.
     * @param {project_stagesUpsertArgs} args - Arguments to update or create a Project_stages.
     * @example
     * // Update or create a Project_stages
     * const project_stages = await prisma.project_stages.upsert({
     *   create: {
     *     // ... data to create a Project_stages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_stages we want to update
     *   }
     * })
     */
    upsert<T extends project_stagesUpsertArgs>(args: SelectSubset<T, project_stagesUpsertArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Project_stages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_stagesCountArgs} args - Arguments to filter Project_stages to count.
     * @example
     * // Count the number of Project_stages
     * const count = await prisma.project_stages.count({
     *   where: {
     *     // ... the filter for the Project_stages we want to count
     *   }
     * })
    **/
    count<T extends project_stagesCountArgs>(
      args?: Subset<T, project_stagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_stagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_stages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_stagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_stagesAggregateArgs>(args: Subset<T, Project_stagesAggregateArgs>): Prisma.PrismaPromise<GetProject_stagesAggregateType<T>>

    /**
     * Group by Project_stages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_stagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends project_stagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: project_stagesGroupByArgs['orderBy'] }
        : { orderBy?: project_stagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, project_stagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_stagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the project_stages model
   */
  readonly fields: project_stagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for project_stages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__project_stagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project_materials<T extends project_stages$project_materialsArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$project_materialsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_media<T extends project_stages$project_mediaArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$project_mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_staff<T extends project_stages$project_staffArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$project_staffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    projects<T extends projectsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectsDefaultArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    site_reports<T extends project_stages$site_reportsArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$site_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stage_checklists<T extends project_stages$stage_checklistsArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$stage_checklistsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stage_tags<T extends project_stages$stage_tagsArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$stage_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends project_stages$tasksArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    time_logs<T extends project_stages$time_logsArgs<ExtArgs> = {}>(args?: Subset<T, project_stages$time_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the project_stages model
   */
  interface project_stagesFieldRefs {
    readonly id: FieldRef<"project_stages", 'Int'>
    readonly project_id: FieldRef<"project_stages", 'Int'>
    readonly name: FieldRef<"project_stages", 'String'>
    readonly description: FieldRef<"project_stages", 'String'>
    readonly start_date: FieldRef<"project_stages", 'DateTime'>
    readonly end_date: FieldRef<"project_stages", 'DateTime'>
    readonly status: FieldRef<"project_stages", 'String'>
    readonly order_index: FieldRef<"project_stages", 'Int'>
    readonly estimated_duration: FieldRef<"project_stages", 'Int'>
    readonly actual_duration: FieldRef<"project_stages", 'Int'>
    readonly completion_percentage: FieldRef<"project_stages", 'Int'>
    readonly notes: FieldRef<"project_stages", 'String'>
    readonly created_at: FieldRef<"project_stages", 'DateTime'>
    readonly updated_at: FieldRef<"project_stages", 'DateTime'>
    readonly synced_at: FieldRef<"project_stages", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"project_stages", 'String'>
  }
    

  // Custom InputTypes
  /**
   * project_stages findUnique
   */
  export type project_stagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * Filter, which project_stages to fetch.
     */
    where: project_stagesWhereUniqueInput
  }

  /**
   * project_stages findUniqueOrThrow
   */
  export type project_stagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * Filter, which project_stages to fetch.
     */
    where: project_stagesWhereUniqueInput
  }

  /**
   * project_stages findFirst
   */
  export type project_stagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * Filter, which project_stages to fetch.
     */
    where?: project_stagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_stages to fetch.
     */
    orderBy?: project_stagesOrderByWithRelationInput | project_stagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_stages.
     */
    cursor?: project_stagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_stages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_stages.
     */
    distinct?: Project_stagesScalarFieldEnum | Project_stagesScalarFieldEnum[]
  }

  /**
   * project_stages findFirstOrThrow
   */
  export type project_stagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * Filter, which project_stages to fetch.
     */
    where?: project_stagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_stages to fetch.
     */
    orderBy?: project_stagesOrderByWithRelationInput | project_stagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_stages.
     */
    cursor?: project_stagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_stages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_stages.
     */
    distinct?: Project_stagesScalarFieldEnum | Project_stagesScalarFieldEnum[]
  }

  /**
   * project_stages findMany
   */
  export type project_stagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * Filter, which project_stages to fetch.
     */
    where?: project_stagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_stages to fetch.
     */
    orderBy?: project_stagesOrderByWithRelationInput | project_stagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing project_stages.
     */
    cursor?: project_stagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_stages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_stages.
     */
    skip?: number
    distinct?: Project_stagesScalarFieldEnum | Project_stagesScalarFieldEnum[]
  }

  /**
   * project_stages create
   */
  export type project_stagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * The data needed to create a project_stages.
     */
    data: XOR<project_stagesCreateInput, project_stagesUncheckedCreateInput>
  }

  /**
   * project_stages createMany
   */
  export type project_stagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many project_stages.
     */
    data: project_stagesCreateManyInput | project_stagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * project_stages createManyAndReturn
   */
  export type project_stagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * The data used to create many project_stages.
     */
    data: project_stagesCreateManyInput | project_stagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_stages update
   */
  export type project_stagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * The data needed to update a project_stages.
     */
    data: XOR<project_stagesUpdateInput, project_stagesUncheckedUpdateInput>
    /**
     * Choose, which project_stages to update.
     */
    where: project_stagesWhereUniqueInput
  }

  /**
   * project_stages updateMany
   */
  export type project_stagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update project_stages.
     */
    data: XOR<project_stagesUpdateManyMutationInput, project_stagesUncheckedUpdateManyInput>
    /**
     * Filter which project_stages to update
     */
    where?: project_stagesWhereInput
    /**
     * Limit how many project_stages to update.
     */
    limit?: number
  }

  /**
   * project_stages updateManyAndReturn
   */
  export type project_stagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * The data used to update project_stages.
     */
    data: XOR<project_stagesUpdateManyMutationInput, project_stagesUncheckedUpdateManyInput>
    /**
     * Filter which project_stages to update
     */
    where?: project_stagesWhereInput
    /**
     * Limit how many project_stages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_stages upsert
   */
  export type project_stagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * The filter to search for the project_stages to update in case it exists.
     */
    where: project_stagesWhereUniqueInput
    /**
     * In case the project_stages found by the `where` argument doesn't exist, create a new project_stages with this data.
     */
    create: XOR<project_stagesCreateInput, project_stagesUncheckedCreateInput>
    /**
     * In case the project_stages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<project_stagesUpdateInput, project_stagesUncheckedUpdateInput>
  }

  /**
   * project_stages delete
   */
  export type project_stagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    /**
     * Filter which project_stages to delete.
     */
    where: project_stagesWhereUniqueInput
  }

  /**
   * project_stages deleteMany
   */
  export type project_stagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_stages to delete
     */
    where?: project_stagesWhereInput
    /**
     * Limit how many project_stages to delete.
     */
    limit?: number
  }

  /**
   * project_stages.project_materials
   */
  export type project_stages$project_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    where?: project_materialsWhereInput
    orderBy?: project_materialsOrderByWithRelationInput | project_materialsOrderByWithRelationInput[]
    cursor?: project_materialsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_materialsScalarFieldEnum | Project_materialsScalarFieldEnum[]
  }

  /**
   * project_stages.project_media
   */
  export type project_stages$project_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    where?: project_mediaWhereInput
    orderBy?: project_mediaOrderByWithRelationInput | project_mediaOrderByWithRelationInput[]
    cursor?: project_mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_mediaScalarFieldEnum | Project_mediaScalarFieldEnum[]
  }

  /**
   * project_stages.project_staff
   */
  export type project_stages$project_staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    where?: project_staffWhereInput
    orderBy?: project_staffOrderByWithRelationInput | project_staffOrderByWithRelationInput[]
    cursor?: project_staffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_staffScalarFieldEnum | Project_staffScalarFieldEnum[]
  }

  /**
   * project_stages.site_reports
   */
  export type project_stages$site_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    where?: site_reportsWhereInput
    orderBy?: site_reportsOrderByWithRelationInput | site_reportsOrderByWithRelationInput[]
    cursor?: site_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Site_reportsScalarFieldEnum | Site_reportsScalarFieldEnum[]
  }

  /**
   * project_stages.stage_checklists
   */
  export type project_stages$stage_checklistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    where?: stage_checklistsWhereInput
    orderBy?: stage_checklistsOrderByWithRelationInput | stage_checklistsOrderByWithRelationInput[]
    cursor?: stage_checklistsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stage_checklistsScalarFieldEnum | Stage_checklistsScalarFieldEnum[]
  }

  /**
   * project_stages.stage_tags
   */
  export type project_stages$stage_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    where?: stage_tagsWhereInput
    orderBy?: stage_tagsOrderByWithRelationInput | stage_tagsOrderByWithRelationInput[]
    cursor?: stage_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stage_tagsScalarFieldEnum | Stage_tagsScalarFieldEnum[]
  }

  /**
   * project_stages.tasks
   */
  export type project_stages$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    cursor?: tasksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * project_stages.time_logs
   */
  export type project_stages$time_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    where?: time_logsWhereInput
    orderBy?: time_logsOrderByWithRelationInput | time_logsOrderByWithRelationInput[]
    cursor?: time_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Time_logsScalarFieldEnum | Time_logsScalarFieldEnum[]
  }

  /**
   * project_stages without action
   */
  export type project_stagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
  }


  /**
   * Model project_tags
   */

  export type AggregateProject_tags = {
    _count: Project_tagsCountAggregateOutputType | null
    _avg: Project_tagsAvgAggregateOutputType | null
    _sum: Project_tagsSumAggregateOutputType | null
    _min: Project_tagsMinAggregateOutputType | null
    _max: Project_tagsMaxAggregateOutputType | null
  }

  export type Project_tagsAvgAggregateOutputType = {
    project_id: number | null
    tag_id: number | null
  }

  export type Project_tagsSumAggregateOutputType = {
    project_id: number | null
    tag_id: number | null
  }

  export type Project_tagsMinAggregateOutputType = {
    project_id: number | null
    tag_id: number | null
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Project_tagsMaxAggregateOutputType = {
    project_id: number | null
    tag_id: number | null
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Project_tagsCountAggregateOutputType = {
    project_id: number
    tag_id: number
    created_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Project_tagsAvgAggregateInputType = {
    project_id?: true
    tag_id?: true
  }

  export type Project_tagsSumAggregateInputType = {
    project_id?: true
    tag_id?: true
  }

  export type Project_tagsMinAggregateInputType = {
    project_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Project_tagsMaxAggregateInputType = {
    project_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Project_tagsCountAggregateInputType = {
    project_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Project_tagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_tags to aggregate.
     */
    where?: project_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_tags to fetch.
     */
    orderBy?: project_tagsOrderByWithRelationInput | project_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: project_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned project_tags
    **/
    _count?: true | Project_tagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Project_tagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Project_tagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_tagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_tagsMaxAggregateInputType
  }

  export type GetProject_tagsAggregateType<T extends Project_tagsAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_tags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_tags[P]>
      : GetScalarType<T[P], AggregateProject_tags[P]>
  }




  export type project_tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: project_tagsWhereInput
    orderBy?: project_tagsOrderByWithAggregationInput | project_tagsOrderByWithAggregationInput[]
    by: Project_tagsScalarFieldEnum[] | Project_tagsScalarFieldEnum
    having?: project_tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_tagsCountAggregateInputType | true
    _avg?: Project_tagsAvgAggregateInputType
    _sum?: Project_tagsSumAggregateInputType
    _min?: Project_tagsMinAggregateInputType
    _max?: Project_tagsMaxAggregateInputType
  }

  export type Project_tagsGroupByOutputType = {
    project_id: number
    tag_id: number
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Project_tagsCountAggregateOutputType | null
    _avg: Project_tagsAvgAggregateOutputType | null
    _sum: Project_tagsSumAggregateOutputType | null
    _min: Project_tagsMinAggregateOutputType | null
    _max: Project_tagsMaxAggregateOutputType | null
  }

  type GetProject_tagsGroupByPayload<T extends project_tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Project_tagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_tagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_tagsGroupByOutputType[P]>
            : GetScalarType<T[P], Project_tagsGroupByOutputType[P]>
        }
      >
    >


  export type project_tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    project_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project_tags"]>

  export type project_tagsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    project_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project_tags"]>

  export type project_tagsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    project_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project_tags"]>

  export type project_tagsSelectScalar = {
    project_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type project_tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"project_id" | "tag_id" | "created_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["project_tags"]>
  export type project_tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type project_tagsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type project_tagsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }

  export type $project_tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "project_tags"
    objects: {
      projects: Prisma.$projectsPayload<ExtArgs>
      tags: Prisma.$tagsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      project_id: number
      tag_id: number
      created_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["project_tags"]>
    composites: {}
  }

  type project_tagsGetPayload<S extends boolean | null | undefined | project_tagsDefaultArgs> = $Result.GetResult<Prisma.$project_tagsPayload, S>

  type project_tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<project_tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Project_tagsCountAggregateInputType | true
    }

  export interface project_tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['project_tags'], meta: { name: 'project_tags' } }
    /**
     * Find zero or one Project_tags that matches the filter.
     * @param {project_tagsFindUniqueArgs} args - Arguments to find a Project_tags
     * @example
     * // Get one Project_tags
     * const project_tags = await prisma.project_tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends project_tagsFindUniqueArgs>(args: SelectSubset<T, project_tagsFindUniqueArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project_tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {project_tagsFindUniqueOrThrowArgs} args - Arguments to find a Project_tags
     * @example
     * // Get one Project_tags
     * const project_tags = await prisma.project_tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends project_tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, project_tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_tagsFindFirstArgs} args - Arguments to find a Project_tags
     * @example
     * // Get one Project_tags
     * const project_tags = await prisma.project_tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends project_tagsFindFirstArgs>(args?: SelectSubset<T, project_tagsFindFirstArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project_tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_tagsFindFirstOrThrowArgs} args - Arguments to find a Project_tags
     * @example
     * // Get one Project_tags
     * const project_tags = await prisma.project_tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends project_tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, project_tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Project_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_tags
     * const project_tags = await prisma.project_tags.findMany()
     * 
     * // Get first 10 Project_tags
     * const project_tags = await prisma.project_tags.findMany({ take: 10 })
     * 
     * // Only select the `project_id`
     * const project_tagsWithProject_idOnly = await prisma.project_tags.findMany({ select: { project_id: true } })
     * 
     */
    findMany<T extends project_tagsFindManyArgs>(args?: SelectSubset<T, project_tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project_tags.
     * @param {project_tagsCreateArgs} args - Arguments to create a Project_tags.
     * @example
     * // Create one Project_tags
     * const Project_tags = await prisma.project_tags.create({
     *   data: {
     *     // ... data to create a Project_tags
     *   }
     * })
     * 
     */
    create<T extends project_tagsCreateArgs>(args: SelectSubset<T, project_tagsCreateArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Project_tags.
     * @param {project_tagsCreateManyArgs} args - Arguments to create many Project_tags.
     * @example
     * // Create many Project_tags
     * const project_tags = await prisma.project_tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends project_tagsCreateManyArgs>(args?: SelectSubset<T, project_tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Project_tags and returns the data saved in the database.
     * @param {project_tagsCreateManyAndReturnArgs} args - Arguments to create many Project_tags.
     * @example
     * // Create many Project_tags
     * const project_tags = await prisma.project_tags.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Project_tags and only return the `project_id`
     * const project_tagsWithProject_idOnly = await prisma.project_tags.createManyAndReturn({
     *   select: { project_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends project_tagsCreateManyAndReturnArgs>(args?: SelectSubset<T, project_tagsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project_tags.
     * @param {project_tagsDeleteArgs} args - Arguments to delete one Project_tags.
     * @example
     * // Delete one Project_tags
     * const Project_tags = await prisma.project_tags.delete({
     *   where: {
     *     // ... filter to delete one Project_tags
     *   }
     * })
     * 
     */
    delete<T extends project_tagsDeleteArgs>(args: SelectSubset<T, project_tagsDeleteArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project_tags.
     * @param {project_tagsUpdateArgs} args - Arguments to update one Project_tags.
     * @example
     * // Update one Project_tags
     * const project_tags = await prisma.project_tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends project_tagsUpdateArgs>(args: SelectSubset<T, project_tagsUpdateArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Project_tags.
     * @param {project_tagsDeleteManyArgs} args - Arguments to filter Project_tags to delete.
     * @example
     * // Delete a few Project_tags
     * const { count } = await prisma.project_tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends project_tagsDeleteManyArgs>(args?: SelectSubset<T, project_tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_tags
     * const project_tags = await prisma.project_tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends project_tagsUpdateManyArgs>(args: SelectSubset<T, project_tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_tags and returns the data updated in the database.
     * @param {project_tagsUpdateManyAndReturnArgs} args - Arguments to update many Project_tags.
     * @example
     * // Update many Project_tags
     * const project_tags = await prisma.project_tags.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Project_tags and only return the `project_id`
     * const project_tagsWithProject_idOnly = await prisma.project_tags.updateManyAndReturn({
     *   select: { project_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends project_tagsUpdateManyAndReturnArgs>(args: SelectSubset<T, project_tagsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project_tags.
     * @param {project_tagsUpsertArgs} args - Arguments to update or create a Project_tags.
     * @example
     * // Update or create a Project_tags
     * const project_tags = await prisma.project_tags.upsert({
     *   create: {
     *     // ... data to create a Project_tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_tags we want to update
     *   }
     * })
     */
    upsert<T extends project_tagsUpsertArgs>(args: SelectSubset<T, project_tagsUpsertArgs<ExtArgs>>): Prisma__project_tagsClient<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Project_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_tagsCountArgs} args - Arguments to filter Project_tags to count.
     * @example
     * // Count the number of Project_tags
     * const count = await prisma.project_tags.count({
     *   where: {
     *     // ... the filter for the Project_tags we want to count
     *   }
     * })
    **/
    count<T extends project_tagsCountArgs>(
      args?: Subset<T, project_tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_tagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_tagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_tagsAggregateArgs>(args: Subset<T, Project_tagsAggregateArgs>): Prisma.PrismaPromise<GetProject_tagsAggregateType<T>>

    /**
     * Group by Project_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {project_tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends project_tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: project_tagsGroupByArgs['orderBy'] }
        : { orderBy?: project_tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, project_tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_tagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the project_tags model
   */
  readonly fields: project_tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for project_tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__project_tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    projects<T extends projectsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectsDefaultArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tags<T extends tagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tagsDefaultArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the project_tags model
   */
  interface project_tagsFieldRefs {
    readonly project_id: FieldRef<"project_tags", 'Int'>
    readonly tag_id: FieldRef<"project_tags", 'Int'>
    readonly created_at: FieldRef<"project_tags", 'DateTime'>
    readonly synced_at: FieldRef<"project_tags", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"project_tags", 'String'>
  }
    

  // Custom InputTypes
  /**
   * project_tags findUnique
   */
  export type project_tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * Filter, which project_tags to fetch.
     */
    where: project_tagsWhereUniqueInput
  }

  /**
   * project_tags findUniqueOrThrow
   */
  export type project_tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * Filter, which project_tags to fetch.
     */
    where: project_tagsWhereUniqueInput
  }

  /**
   * project_tags findFirst
   */
  export type project_tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * Filter, which project_tags to fetch.
     */
    where?: project_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_tags to fetch.
     */
    orderBy?: project_tagsOrderByWithRelationInput | project_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_tags.
     */
    cursor?: project_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_tags.
     */
    distinct?: Project_tagsScalarFieldEnum | Project_tagsScalarFieldEnum[]
  }

  /**
   * project_tags findFirstOrThrow
   */
  export type project_tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * Filter, which project_tags to fetch.
     */
    where?: project_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_tags to fetch.
     */
    orderBy?: project_tagsOrderByWithRelationInput | project_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for project_tags.
     */
    cursor?: project_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of project_tags.
     */
    distinct?: Project_tagsScalarFieldEnum | Project_tagsScalarFieldEnum[]
  }

  /**
   * project_tags findMany
   */
  export type project_tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * Filter, which project_tags to fetch.
     */
    where?: project_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of project_tags to fetch.
     */
    orderBy?: project_tagsOrderByWithRelationInput | project_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing project_tags.
     */
    cursor?: project_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` project_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` project_tags.
     */
    skip?: number
    distinct?: Project_tagsScalarFieldEnum | Project_tagsScalarFieldEnum[]
  }

  /**
   * project_tags create
   */
  export type project_tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a project_tags.
     */
    data: XOR<project_tagsCreateInput, project_tagsUncheckedCreateInput>
  }

  /**
   * project_tags createMany
   */
  export type project_tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many project_tags.
     */
    data: project_tagsCreateManyInput | project_tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * project_tags createManyAndReturn
   */
  export type project_tagsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * The data used to create many project_tags.
     */
    data: project_tagsCreateManyInput | project_tagsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_tags update
   */
  export type project_tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a project_tags.
     */
    data: XOR<project_tagsUpdateInput, project_tagsUncheckedUpdateInput>
    /**
     * Choose, which project_tags to update.
     */
    where: project_tagsWhereUniqueInput
  }

  /**
   * project_tags updateMany
   */
  export type project_tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update project_tags.
     */
    data: XOR<project_tagsUpdateManyMutationInput, project_tagsUncheckedUpdateManyInput>
    /**
     * Filter which project_tags to update
     */
    where?: project_tagsWhereInput
    /**
     * Limit how many project_tags to update.
     */
    limit?: number
  }

  /**
   * project_tags updateManyAndReturn
   */
  export type project_tagsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * The data used to update project_tags.
     */
    data: XOR<project_tagsUpdateManyMutationInput, project_tagsUncheckedUpdateManyInput>
    /**
     * Filter which project_tags to update
     */
    where?: project_tagsWhereInput
    /**
     * Limit how many project_tags to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * project_tags upsert
   */
  export type project_tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the project_tags to update in case it exists.
     */
    where: project_tagsWhereUniqueInput
    /**
     * In case the project_tags found by the `where` argument doesn't exist, create a new project_tags with this data.
     */
    create: XOR<project_tagsCreateInput, project_tagsUncheckedCreateInput>
    /**
     * In case the project_tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<project_tagsUpdateInput, project_tagsUncheckedUpdateInput>
  }

  /**
   * project_tags delete
   */
  export type project_tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    /**
     * Filter which project_tags to delete.
     */
    where: project_tagsWhereUniqueInput
  }

  /**
   * project_tags deleteMany
   */
  export type project_tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project_tags to delete
     */
    where?: project_tagsWhereInput
    /**
     * Limit how many project_tags to delete.
     */
    limit?: number
  }

  /**
   * project_tags without action
   */
  export type project_tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
  }


  /**
   * Model projects
   */

  export type AggregateProjects = {
    _count: ProjectsCountAggregateOutputType | null
    _avg: ProjectsAvgAggregateOutputType | null
    _sum: ProjectsSumAggregateOutputType | null
    _min: ProjectsMinAggregateOutputType | null
    _max: ProjectsMaxAggregateOutputType | null
  }

  export type ProjectsAvgAggregateOutputType = {
    id: number | null
    client_id: number | null
    address_id: number | null
    estimated_duration: number | null
    budget: Decimal | null
    actual_cost: Decimal | null
    margin: Decimal | null
    priority: number | null
  }

  export type ProjectsSumAggregateOutputType = {
    id: number | null
    client_id: number | null
    address_id: number | null
    estimated_duration: number | null
    budget: Decimal | null
    actual_cost: Decimal | null
    margin: Decimal | null
    priority: number | null
  }

  export type ProjectsMinAggregateOutputType = {
    id: number | null
    reference: string | null
    name: string | null
    description: string | null
    client_id: number | null
    address_id: number | null
    status: $Enums.project_status | null
    start_date: Date | null
    end_date: Date | null
    estimated_duration: number | null
    budget: Decimal | null
    actual_cost: Decimal | null
    margin: Decimal | null
    priority: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProjectsMaxAggregateOutputType = {
    id: number | null
    reference: string | null
    name: string | null
    description: string | null
    client_id: number | null
    address_id: number | null
    status: $Enums.project_status | null
    start_date: Date | null
    end_date: Date | null
    estimated_duration: number | null
    budget: Decimal | null
    actual_cost: Decimal | null
    margin: Decimal | null
    priority: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProjectsCountAggregateOutputType = {
    id: number
    reference: number
    name: number
    description: number
    client_id: number
    address_id: number
    status: number
    start_date: number
    end_date: number
    estimated_duration: number
    budget: number
    actual_cost: number
    margin: number
    priority: number
    notes: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ProjectsAvgAggregateInputType = {
    id?: true
    client_id?: true
    address_id?: true
    estimated_duration?: true
    budget?: true
    actual_cost?: true
    margin?: true
    priority?: true
  }

  export type ProjectsSumAggregateInputType = {
    id?: true
    client_id?: true
    address_id?: true
    estimated_duration?: true
    budget?: true
    actual_cost?: true
    margin?: true
    priority?: true
  }

  export type ProjectsMinAggregateInputType = {
    id?: true
    reference?: true
    name?: true
    description?: true
    client_id?: true
    address_id?: true
    status?: true
    start_date?: true
    end_date?: true
    estimated_duration?: true
    budget?: true
    actual_cost?: true
    margin?: true
    priority?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type ProjectsMaxAggregateInputType = {
    id?: true
    reference?: true
    name?: true
    description?: true
    client_id?: true
    address_id?: true
    status?: true
    start_date?: true
    end_date?: true
    estimated_duration?: true
    budget?: true
    actual_cost?: true
    margin?: true
    priority?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type ProjectsCountAggregateInputType = {
    id?: true
    reference?: true
    name?: true
    description?: true
    client_id?: true
    address_id?: true
    status?: true
    start_date?: true
    end_date?: true
    estimated_duration?: true
    budget?: true
    actual_cost?: true
    margin?: true
    priority?: true
    notes?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ProjectsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which projects to aggregate.
     */
    where?: projectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectsOrderByWithRelationInput | projectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: projectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned projects
    **/
    _count?: true | ProjectsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectsMaxAggregateInputType
  }

  export type GetProjectsAggregateType<T extends ProjectsAggregateArgs> = {
        [P in keyof T & keyof AggregateProjects]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjects[P]>
      : GetScalarType<T[P], AggregateProjects[P]>
  }




  export type projectsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectsWhereInput
    orderBy?: projectsOrderByWithAggregationInput | projectsOrderByWithAggregationInput[]
    by: ProjectsScalarFieldEnum[] | ProjectsScalarFieldEnum
    having?: projectsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectsCountAggregateInputType | true
    _avg?: ProjectsAvgAggregateInputType
    _sum?: ProjectsSumAggregateInputType
    _min?: ProjectsMinAggregateInputType
    _max?: ProjectsMaxAggregateInputType
  }

  export type ProjectsGroupByOutputType = {
    id: number
    reference: string
    name: string
    description: string | null
    client_id: number
    address_id: number | null
    status: $Enums.project_status | null
    start_date: Date | null
    end_date: Date | null
    estimated_duration: number | null
    budget: Decimal | null
    actual_cost: Decimal | null
    margin: Decimal | null
    priority: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: ProjectsCountAggregateOutputType | null
    _avg: ProjectsAvgAggregateOutputType | null
    _sum: ProjectsSumAggregateOutputType | null
    _min: ProjectsMinAggregateOutputType | null
    _max: ProjectsMaxAggregateOutputType | null
  }

  type GetProjectsGroupByPayload<T extends projectsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectsGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectsGroupByOutputType[P]>
        }
      >
    >


  export type projectsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reference?: boolean
    name?: boolean
    description?: boolean
    client_id?: boolean
    address_id?: boolean
    status?: boolean
    start_date?: boolean
    end_date?: boolean
    estimated_duration?: boolean
    budget?: boolean
    actual_cost?: boolean
    margin?: boolean
    priority?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    documents?: boolean | projects$documentsArgs<ExtArgs>
    events?: boolean | projects$eventsArgs<ExtArgs>
    project_materials?: boolean | projects$project_materialsArgs<ExtArgs>
    project_media?: boolean | projects$project_mediaArgs<ExtArgs>
    project_staff?: boolean | projects$project_staffArgs<ExtArgs>
    project_stages?: boolean | projects$project_stagesArgs<ExtArgs>
    project_tags?: boolean | projects$project_tagsArgs<ExtArgs>
    addresses?: boolean | projects$addressesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    site_reports?: boolean | projects$site_reportsArgs<ExtArgs>
    time_logs?: boolean | projects$time_logsArgs<ExtArgs>
    _count?: boolean | ProjectsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projects"]>

  export type projectsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reference?: boolean
    name?: boolean
    description?: boolean
    client_id?: boolean
    address_id?: boolean
    status?: boolean
    start_date?: boolean
    end_date?: boolean
    estimated_duration?: boolean
    budget?: boolean
    actual_cost?: boolean
    margin?: boolean
    priority?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    addresses?: boolean | projects$addressesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projects"]>

  export type projectsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reference?: boolean
    name?: boolean
    description?: boolean
    client_id?: boolean
    address_id?: boolean
    status?: boolean
    start_date?: boolean
    end_date?: boolean
    estimated_duration?: boolean
    budget?: boolean
    actual_cost?: boolean
    margin?: boolean
    priority?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    addresses?: boolean | projects$addressesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projects"]>

  export type projectsSelectScalar = {
    id?: boolean
    reference?: boolean
    name?: boolean
    description?: boolean
    client_id?: boolean
    address_id?: boolean
    status?: boolean
    start_date?: boolean
    end_date?: boolean
    estimated_duration?: boolean
    budget?: boolean
    actual_cost?: boolean
    margin?: boolean
    priority?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type projectsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reference" | "name" | "description" | "client_id" | "address_id" | "status" | "start_date" | "end_date" | "estimated_duration" | "budget" | "actual_cost" | "margin" | "priority" | "notes" | "created_at" | "updated_at", ExtArgs["result"]["projects"]>
  export type projectsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | projects$documentsArgs<ExtArgs>
    events?: boolean | projects$eventsArgs<ExtArgs>
    project_materials?: boolean | projects$project_materialsArgs<ExtArgs>
    project_media?: boolean | projects$project_mediaArgs<ExtArgs>
    project_staff?: boolean | projects$project_staffArgs<ExtArgs>
    project_stages?: boolean | projects$project_stagesArgs<ExtArgs>
    project_tags?: boolean | projects$project_tagsArgs<ExtArgs>
    addresses?: boolean | projects$addressesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    site_reports?: boolean | projects$site_reportsArgs<ExtArgs>
    time_logs?: boolean | projects$time_logsArgs<ExtArgs>
    _count?: boolean | ProjectsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type projectsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | projects$addressesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }
  export type projectsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | projects$addressesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }

  export type $projectsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "projects"
    objects: {
      documents: Prisma.$documentsPayload<ExtArgs>[]
      events: Prisma.$eventsPayload<ExtArgs>[]
      project_materials: Prisma.$project_materialsPayload<ExtArgs>[]
      project_media: Prisma.$project_mediaPayload<ExtArgs>[]
      project_staff: Prisma.$project_staffPayload<ExtArgs>[]
      project_stages: Prisma.$project_stagesPayload<ExtArgs>[]
      project_tags: Prisma.$project_tagsPayload<ExtArgs>[]
      addresses: Prisma.$addressesPayload<ExtArgs> | null
      clients: Prisma.$clientsPayload<ExtArgs>
      site_reports: Prisma.$site_reportsPayload<ExtArgs>[]
      time_logs: Prisma.$time_logsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      reference: string
      name: string
      description: string | null
      client_id: number
      address_id: number | null
      status: $Enums.project_status | null
      start_date: Date | null
      end_date: Date | null
      estimated_duration: number | null
      budget: Prisma.Decimal | null
      actual_cost: Prisma.Decimal | null
      margin: Prisma.Decimal | null
      priority: number | null
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["projects"]>
    composites: {}
  }

  type projectsGetPayload<S extends boolean | null | undefined | projectsDefaultArgs> = $Result.GetResult<Prisma.$projectsPayload, S>

  type projectsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<projectsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectsCountAggregateInputType | true
    }

  export interface projectsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['projects'], meta: { name: 'projects' } }
    /**
     * Find zero or one Projects that matches the filter.
     * @param {projectsFindUniqueArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends projectsFindUniqueArgs>(args: SelectSubset<T, projectsFindUniqueArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Projects that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {projectsFindUniqueOrThrowArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends projectsFindUniqueOrThrowArgs>(args: SelectSubset<T, projectsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectsFindFirstArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends projectsFindFirstArgs>(args?: SelectSubset<T, projectsFindFirstArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Projects that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectsFindFirstOrThrowArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends projectsFindFirstOrThrowArgs>(args?: SelectSubset<T, projectsFindFirstOrThrowArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.projects.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.projects.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectsWithIdOnly = await prisma.projects.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends projectsFindManyArgs>(args?: SelectSubset<T, projectsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Projects.
     * @param {projectsCreateArgs} args - Arguments to create a Projects.
     * @example
     * // Create one Projects
     * const Projects = await prisma.projects.create({
     *   data: {
     *     // ... data to create a Projects
     *   }
     * })
     * 
     */
    create<T extends projectsCreateArgs>(args: SelectSubset<T, projectsCreateArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Projects.
     * @param {projectsCreateManyArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const projects = await prisma.projects.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends projectsCreateManyArgs>(args?: SelectSubset<T, projectsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Projects and returns the data saved in the database.
     * @param {projectsCreateManyAndReturnArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const projects = await prisma.projects.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Projects and only return the `id`
     * const projectsWithIdOnly = await prisma.projects.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends projectsCreateManyAndReturnArgs>(args?: SelectSubset<T, projectsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Projects.
     * @param {projectsDeleteArgs} args - Arguments to delete one Projects.
     * @example
     * // Delete one Projects
     * const Projects = await prisma.projects.delete({
     *   where: {
     *     // ... filter to delete one Projects
     *   }
     * })
     * 
     */
    delete<T extends projectsDeleteArgs>(args: SelectSubset<T, projectsDeleteArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Projects.
     * @param {projectsUpdateArgs} args - Arguments to update one Projects.
     * @example
     * // Update one Projects
     * const projects = await prisma.projects.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends projectsUpdateArgs>(args: SelectSubset<T, projectsUpdateArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Projects.
     * @param {projectsDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.projects.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends projectsDeleteManyArgs>(args?: SelectSubset<T, projectsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const projects = await prisma.projects.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends projectsUpdateManyArgs>(args: SelectSubset<T, projectsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects and returns the data updated in the database.
     * @param {projectsUpdateManyAndReturnArgs} args - Arguments to update many Projects.
     * @example
     * // Update many Projects
     * const projects = await prisma.projects.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Projects and only return the `id`
     * const projectsWithIdOnly = await prisma.projects.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends projectsUpdateManyAndReturnArgs>(args: SelectSubset<T, projectsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Projects.
     * @param {projectsUpsertArgs} args - Arguments to update or create a Projects.
     * @example
     * // Update or create a Projects
     * const projects = await prisma.projects.upsert({
     *   create: {
     *     // ... data to create a Projects
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Projects we want to update
     *   }
     * })
     */
    upsert<T extends projectsUpsertArgs>(args: SelectSubset<T, projectsUpsertArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectsCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.projects.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends projectsCountArgs>(
      args?: Subset<T, projectsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectsAggregateArgs>(args: Subset<T, ProjectsAggregateArgs>): Prisma.PrismaPromise<GetProjectsAggregateType<T>>

    /**
     * Group by Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends projectsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: projectsGroupByArgs['orderBy'] }
        : { orderBy?: projectsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, projectsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the projects model
   */
  readonly fields: projectsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for projects.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__projectsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    documents<T extends projects$documentsArgs<ExtArgs> = {}>(args?: Subset<T, projects$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends projects$eventsArgs<ExtArgs> = {}>(args?: Subset<T, projects$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_materials<T extends projects$project_materialsArgs<ExtArgs> = {}>(args?: Subset<T, projects$project_materialsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_media<T extends projects$project_mediaArgs<ExtArgs> = {}>(args?: Subset<T, projects$project_mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_staff<T extends projects$project_staffArgs<ExtArgs> = {}>(args?: Subset<T, projects$project_staffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_stages<T extends projects$project_stagesArgs<ExtArgs> = {}>(args?: Subset<T, projects$project_stagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_tags<T extends projects$project_tagsArgs<ExtArgs> = {}>(args?: Subset<T, projects$project_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    addresses<T extends projects$addressesArgs<ExtArgs> = {}>(args?: Subset<T, projects$addressesArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    clients<T extends clientsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clientsDefaultArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    site_reports<T extends projects$site_reportsArgs<ExtArgs> = {}>(args?: Subset<T, projects$site_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    time_logs<T extends projects$time_logsArgs<ExtArgs> = {}>(args?: Subset<T, projects$time_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the projects model
   */
  interface projectsFieldRefs {
    readonly id: FieldRef<"projects", 'Int'>
    readonly reference: FieldRef<"projects", 'String'>
    readonly name: FieldRef<"projects", 'String'>
    readonly description: FieldRef<"projects", 'String'>
    readonly client_id: FieldRef<"projects", 'Int'>
    readonly address_id: FieldRef<"projects", 'Int'>
    readonly status: FieldRef<"projects", 'project_status'>
    readonly start_date: FieldRef<"projects", 'DateTime'>
    readonly end_date: FieldRef<"projects", 'DateTime'>
    readonly estimated_duration: FieldRef<"projects", 'Int'>
    readonly budget: FieldRef<"projects", 'Decimal'>
    readonly actual_cost: FieldRef<"projects", 'Decimal'>
    readonly margin: FieldRef<"projects", 'Decimal'>
    readonly priority: FieldRef<"projects", 'Int'>
    readonly notes: FieldRef<"projects", 'String'>
    readonly created_at: FieldRef<"projects", 'DateTime'>
    readonly updated_at: FieldRef<"projects", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * projects findUnique
   */
  export type projectsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * Filter, which projects to fetch.
     */
    where: projectsWhereUniqueInput
  }

  /**
   * projects findUniqueOrThrow
   */
  export type projectsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * Filter, which projects to fetch.
     */
    where: projectsWhereUniqueInput
  }

  /**
   * projects findFirst
   */
  export type projectsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * Filter, which projects to fetch.
     */
    where?: projectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectsOrderByWithRelationInput | projectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for projects.
     */
    cursor?: projectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of projects.
     */
    distinct?: ProjectsScalarFieldEnum | ProjectsScalarFieldEnum[]
  }

  /**
   * projects findFirstOrThrow
   */
  export type projectsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * Filter, which projects to fetch.
     */
    where?: projectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectsOrderByWithRelationInput | projectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for projects.
     */
    cursor?: projectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of projects.
     */
    distinct?: ProjectsScalarFieldEnum | ProjectsScalarFieldEnum[]
  }

  /**
   * projects findMany
   */
  export type projectsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * Filter, which projects to fetch.
     */
    where?: projectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectsOrderByWithRelationInput | projectsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing projects.
     */
    cursor?: projectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    distinct?: ProjectsScalarFieldEnum | ProjectsScalarFieldEnum[]
  }

  /**
   * projects create
   */
  export type projectsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * The data needed to create a projects.
     */
    data: XOR<projectsCreateInput, projectsUncheckedCreateInput>
  }

  /**
   * projects createMany
   */
  export type projectsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many projects.
     */
    data: projectsCreateManyInput | projectsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * projects createManyAndReturn
   */
  export type projectsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * The data used to create many projects.
     */
    data: projectsCreateManyInput | projectsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * projects update
   */
  export type projectsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * The data needed to update a projects.
     */
    data: XOR<projectsUpdateInput, projectsUncheckedUpdateInput>
    /**
     * Choose, which projects to update.
     */
    where: projectsWhereUniqueInput
  }

  /**
   * projects updateMany
   */
  export type projectsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update projects.
     */
    data: XOR<projectsUpdateManyMutationInput, projectsUncheckedUpdateManyInput>
    /**
     * Filter which projects to update
     */
    where?: projectsWhereInput
    /**
     * Limit how many projects to update.
     */
    limit?: number
  }

  /**
   * projects updateManyAndReturn
   */
  export type projectsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * The data used to update projects.
     */
    data: XOR<projectsUpdateManyMutationInput, projectsUncheckedUpdateManyInput>
    /**
     * Filter which projects to update
     */
    where?: projectsWhereInput
    /**
     * Limit how many projects to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * projects upsert
   */
  export type projectsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * The filter to search for the projects to update in case it exists.
     */
    where: projectsWhereUniqueInput
    /**
     * In case the projects found by the `where` argument doesn't exist, create a new projects with this data.
     */
    create: XOR<projectsCreateInput, projectsUncheckedCreateInput>
    /**
     * In case the projects was found with the provided `where` argument, update it with this data.
     */
    update: XOR<projectsUpdateInput, projectsUncheckedUpdateInput>
  }

  /**
   * projects delete
   */
  export type projectsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
    /**
     * Filter which projects to delete.
     */
    where: projectsWhereUniqueInput
  }

  /**
   * projects deleteMany
   */
  export type projectsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which projects to delete
     */
    where?: projectsWhereInput
    /**
     * Limit how many projects to delete.
     */
    limit?: number
  }

  /**
   * projects.documents
   */
  export type projects$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documents
     */
    select?: documentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the documents
     */
    omit?: documentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: documentsInclude<ExtArgs> | null
    where?: documentsWhereInput
    orderBy?: documentsOrderByWithRelationInput | documentsOrderByWithRelationInput[]
    cursor?: documentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentsScalarFieldEnum | DocumentsScalarFieldEnum[]
  }

  /**
   * projects.events
   */
  export type projects$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    where?: eventsWhereInput
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    cursor?: eventsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * projects.project_materials
   */
  export type projects$project_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_materials
     */
    select?: project_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_materials
     */
    omit?: project_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_materialsInclude<ExtArgs> | null
    where?: project_materialsWhereInput
    orderBy?: project_materialsOrderByWithRelationInput | project_materialsOrderByWithRelationInput[]
    cursor?: project_materialsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_materialsScalarFieldEnum | Project_materialsScalarFieldEnum[]
  }

  /**
   * projects.project_media
   */
  export type projects$project_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    where?: project_mediaWhereInput
    orderBy?: project_mediaOrderByWithRelationInput | project_mediaOrderByWithRelationInput[]
    cursor?: project_mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_mediaScalarFieldEnum | Project_mediaScalarFieldEnum[]
  }

  /**
   * projects.project_staff
   */
  export type projects$project_staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    where?: project_staffWhereInput
    orderBy?: project_staffOrderByWithRelationInput | project_staffOrderByWithRelationInput[]
    cursor?: project_staffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_staffScalarFieldEnum | Project_staffScalarFieldEnum[]
  }

  /**
   * projects.project_stages
   */
  export type projects$project_stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    where?: project_stagesWhereInput
    orderBy?: project_stagesOrderByWithRelationInput | project_stagesOrderByWithRelationInput[]
    cursor?: project_stagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_stagesScalarFieldEnum | Project_stagesScalarFieldEnum[]
  }

  /**
   * projects.project_tags
   */
  export type projects$project_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    where?: project_tagsWhereInput
    orderBy?: project_tagsOrderByWithRelationInput | project_tagsOrderByWithRelationInput[]
    cursor?: project_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_tagsScalarFieldEnum | Project_tagsScalarFieldEnum[]
  }

  /**
   * projects.addresses
   */
  export type projects$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    where?: addressesWhereInput
  }

  /**
   * projects.site_reports
   */
  export type projects$site_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    where?: site_reportsWhereInput
    orderBy?: site_reportsOrderByWithRelationInput | site_reportsOrderByWithRelationInput[]
    cursor?: site_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Site_reportsScalarFieldEnum | Site_reportsScalarFieldEnum[]
  }

  /**
   * projects.time_logs
   */
  export type projects$time_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    where?: time_logsWhereInput
    orderBy?: time_logsOrderByWithRelationInput | time_logsOrderByWithRelationInput[]
    cursor?: time_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Time_logsScalarFieldEnum | Time_logsScalarFieldEnum[]
  }

  /**
   * projects without action
   */
  export type projectsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the projects
     */
    select?: projectsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the projects
     */
    omit?: projectsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectsInclude<ExtArgs> | null
  }


  /**
   * Model roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    id: number | null
  }

  export type RolesSumAggregateOutputType = {
    id: number | null
  }

  export type RolesMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    id?: true
  }

  export type RolesSumAggregateInputType = {
    id?: true
  }

  export type RolesMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to aggregate.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolesWhereInput
    orderBy?: rolesOrderByWithAggregationInput | rolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    id: number
    name: string
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    staff?: boolean | roles$staffArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "created_at" | "updated_at", ExtArgs["result"]["roles"]>
  export type rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | roles$staffArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type rolesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type rolesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles"
    objects: {
      staff: Prisma.$staffPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }

  type rolesGetPayload<S extends boolean | null | undefined | rolesDefaultArgs> = $Result.GetResult<Prisma.$rolesPayload, S>

  type rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles'], meta: { name: 'roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {rolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolesFindUniqueArgs>(args: SelectSubset<T, rolesFindUniqueArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolesFindFirstArgs>(args?: SelectSubset<T, rolesFindFirstArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolesWithIdOnly = await prisma.roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rolesFindManyArgs>(args?: SelectSubset<T, rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles.
     * @param {rolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
     */
    create<T extends rolesCreateArgs>(args: SelectSubset<T, rolesCreateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {rolesCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolesCreateManyArgs>(args?: SelectSubset<T, rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {rolesCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const rolesWithIdOnly = await prisma.roles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends rolesCreateManyAndReturnArgs>(args?: SelectSubset<T, rolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Roles.
     * @param {rolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
     */
    delete<T extends rolesDeleteArgs>(args: SelectSubset<T, rolesDeleteArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles.
     * @param {rolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolesUpdateArgs>(args: SelectSubset<T, rolesUpdateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {rolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolesDeleteManyArgs>(args?: SelectSubset<T, rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolesUpdateManyArgs>(args: SelectSubset<T, rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {rolesUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const rolesWithIdOnly = await prisma.roles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends rolesUpdateManyAndReturnArgs>(args: SelectSubset<T, rolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Roles.
     * @param {rolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
     */
    upsert<T extends rolesUpsertArgs>(args: SelectSubset<T, rolesUpsertArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends rolesCountArgs>(
      args?: Subset<T, rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolesGroupByArgs['orderBy'] }
        : { orderBy?: rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles model
   */
  readonly fields: rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    staff<T extends roles$staffArgs<ExtArgs> = {}>(args?: Subset<T, roles$staffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles model
   */
  interface rolesFieldRefs {
    readonly id: FieldRef<"roles", 'Int'>
    readonly name: FieldRef<"roles", 'String'>
    readonly description: FieldRef<"roles", 'String'>
    readonly created_at: FieldRef<"roles", 'DateTime'>
    readonly updated_at: FieldRef<"roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * roles findUnique
   */
  export type rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findUniqueOrThrow
   */
  export type rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findFirst
   */
  export type rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findFirstOrThrow
   */
  export type rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findMany
   */
  export type rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles create
   */
  export type rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a roles.
     */
    data: XOR<rolesCreateInput, rolesUncheckedCreateInput>
  }

  /**
   * roles createMany
   */
  export type rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles createManyAndReturn
   */
  export type rolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles update
   */
  export type rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a roles.
     */
    data: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    /**
     * Choose, which roles to update.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles updateMany
   */
  export type rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles updateManyAndReturn
   */
  export type rolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles upsert
   */
  export type rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the roles to update in case it exists.
     */
    where: rolesWhereUniqueInput
    /**
     * In case the roles found by the `where` argument doesn't exist, create a new roles with this data.
     */
    create: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    /**
     * In case the roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
  }

  /**
   * roles delete
   */
  export type rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter which roles to delete.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles deleteMany
   */
  export type rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * roles.staff
   */
  export type roles$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    where?: staffWhereInput
    orderBy?: staffOrderByWithRelationInput | staffOrderByWithRelationInput[]
    cursor?: staffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * roles without action
   */
  export type rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
  }


  /**
   * Model site_reports
   */

  export type AggregateSite_reports = {
    _count: Site_reportsCountAggregateOutputType | null
    _avg: Site_reportsAvgAggregateOutputType | null
    _sum: Site_reportsSumAggregateOutputType | null
    _min: Site_reportsMinAggregateOutputType | null
    _max: Site_reportsMaxAggregateOutputType | null
  }

  export type Site_reportsAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
  }

  export type Site_reportsSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
  }

  export type Site_reportsMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
    report_type: string | null
    description: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Site_reportsMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    staff_id: number | null
    stage_id: number | null
    report_type: string | null
    description: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Site_reportsCountAggregateOutputType = {
    id: number
    project_id: number
    staff_id: number
    stage_id: number
    report_type: number
    description: number
    status: number
    created_at: number
    updated_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Site_reportsAvgAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
  }

  export type Site_reportsSumAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
  }

  export type Site_reportsMinAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    report_type?: true
    description?: true
    status?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Site_reportsMaxAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    report_type?: true
    description?: true
    status?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Site_reportsCountAggregateInputType = {
    id?: true
    project_id?: true
    staff_id?: true
    stage_id?: true
    report_type?: true
    description?: true
    status?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Site_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which site_reports to aggregate.
     */
    where?: site_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_reports to fetch.
     */
    orderBy?: site_reportsOrderByWithRelationInput | site_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: site_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned site_reports
    **/
    _count?: true | Site_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Site_reportsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Site_reportsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Site_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Site_reportsMaxAggregateInputType
  }

  export type GetSite_reportsAggregateType<T extends Site_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateSite_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSite_reports[P]>
      : GetScalarType<T[P], AggregateSite_reports[P]>
  }




  export type site_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: site_reportsWhereInput
    orderBy?: site_reportsOrderByWithAggregationInput | site_reportsOrderByWithAggregationInput[]
    by: Site_reportsScalarFieldEnum[] | Site_reportsScalarFieldEnum
    having?: site_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Site_reportsCountAggregateInputType | true
    _avg?: Site_reportsAvgAggregateInputType
    _sum?: Site_reportsSumAggregateInputType
    _min?: Site_reportsMinAggregateInputType
    _max?: Site_reportsMaxAggregateInputType
  }

  export type Site_reportsGroupByOutputType = {
    id: number
    project_id: number
    staff_id: number | null
    stage_id: number | null
    report_type: string | null
    description: string
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Site_reportsCountAggregateOutputType | null
    _avg: Site_reportsAvgAggregateOutputType | null
    _sum: Site_reportsSumAggregateOutputType | null
    _min: Site_reportsMinAggregateOutputType | null
    _max: Site_reportsMaxAggregateOutputType | null
  }

  type GetSite_reportsGroupByPayload<T extends site_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Site_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Site_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Site_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Site_reportsGroupByOutputType[P]>
        }
      >
    >


  export type site_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    report_type?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | site_reports$staffArgs<ExtArgs>
    project_stages?: boolean | site_reports$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["site_reports"]>

  export type site_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    report_type?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | site_reports$staffArgs<ExtArgs>
    project_stages?: boolean | site_reports$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["site_reports"]>

  export type site_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    report_type?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | site_reports$staffArgs<ExtArgs>
    project_stages?: boolean | site_reports$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["site_reports"]>

  export type site_reportsSelectScalar = {
    id?: boolean
    project_id?: boolean
    staff_id?: boolean
    stage_id?: boolean
    report_type?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type site_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "staff_id" | "stage_id" | "report_type" | "description" | "status" | "created_at" | "updated_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["site_reports"]>
  export type site_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | site_reports$staffArgs<ExtArgs>
    project_stages?: boolean | site_reports$project_stagesArgs<ExtArgs>
  }
  export type site_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | site_reports$staffArgs<ExtArgs>
    project_stages?: boolean | site_reports$project_stagesArgs<ExtArgs>
  }
  export type site_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | site_reports$staffArgs<ExtArgs>
    project_stages?: boolean | site_reports$project_stagesArgs<ExtArgs>
  }

  export type $site_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "site_reports"
    objects: {
      projects: Prisma.$projectsPayload<ExtArgs>
      staff: Prisma.$staffPayload<ExtArgs> | null
      project_stages: Prisma.$project_stagesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number
      staff_id: number | null
      stage_id: number | null
      report_type: string | null
      description: string
      status: string | null
      created_at: Date | null
      updated_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["site_reports"]>
    composites: {}
  }

  type site_reportsGetPayload<S extends boolean | null | undefined | site_reportsDefaultArgs> = $Result.GetResult<Prisma.$site_reportsPayload, S>

  type site_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<site_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Site_reportsCountAggregateInputType | true
    }

  export interface site_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['site_reports'], meta: { name: 'site_reports' } }
    /**
     * Find zero or one Site_reports that matches the filter.
     * @param {site_reportsFindUniqueArgs} args - Arguments to find a Site_reports
     * @example
     * // Get one Site_reports
     * const site_reports = await prisma.site_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends site_reportsFindUniqueArgs>(args: SelectSubset<T, site_reportsFindUniqueArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Site_reports that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {site_reportsFindUniqueOrThrowArgs} args - Arguments to find a Site_reports
     * @example
     * // Get one Site_reports
     * const site_reports = await prisma.site_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends site_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, site_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Site_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_reportsFindFirstArgs} args - Arguments to find a Site_reports
     * @example
     * // Get one Site_reports
     * const site_reports = await prisma.site_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends site_reportsFindFirstArgs>(args?: SelectSubset<T, site_reportsFindFirstArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Site_reports that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_reportsFindFirstOrThrowArgs} args - Arguments to find a Site_reports
     * @example
     * // Get one Site_reports
     * const site_reports = await prisma.site_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends site_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, site_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Site_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_reportsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Site_reports
     * const site_reports = await prisma.site_reports.findMany()
     * 
     * // Get first 10 Site_reports
     * const site_reports = await prisma.site_reports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const site_reportsWithIdOnly = await prisma.site_reports.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends site_reportsFindManyArgs>(args?: SelectSubset<T, site_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Site_reports.
     * @param {site_reportsCreateArgs} args - Arguments to create a Site_reports.
     * @example
     * // Create one Site_reports
     * const Site_reports = await prisma.site_reports.create({
     *   data: {
     *     // ... data to create a Site_reports
     *   }
     * })
     * 
     */
    create<T extends site_reportsCreateArgs>(args: SelectSubset<T, site_reportsCreateArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Site_reports.
     * @param {site_reportsCreateManyArgs} args - Arguments to create many Site_reports.
     * @example
     * // Create many Site_reports
     * const site_reports = await prisma.site_reports.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends site_reportsCreateManyArgs>(args?: SelectSubset<T, site_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Site_reports and returns the data saved in the database.
     * @param {site_reportsCreateManyAndReturnArgs} args - Arguments to create many Site_reports.
     * @example
     * // Create many Site_reports
     * const site_reports = await prisma.site_reports.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Site_reports and only return the `id`
     * const site_reportsWithIdOnly = await prisma.site_reports.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends site_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, site_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Site_reports.
     * @param {site_reportsDeleteArgs} args - Arguments to delete one Site_reports.
     * @example
     * // Delete one Site_reports
     * const Site_reports = await prisma.site_reports.delete({
     *   where: {
     *     // ... filter to delete one Site_reports
     *   }
     * })
     * 
     */
    delete<T extends site_reportsDeleteArgs>(args: SelectSubset<T, site_reportsDeleteArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Site_reports.
     * @param {site_reportsUpdateArgs} args - Arguments to update one Site_reports.
     * @example
     * // Update one Site_reports
     * const site_reports = await prisma.site_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends site_reportsUpdateArgs>(args: SelectSubset<T, site_reportsUpdateArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Site_reports.
     * @param {site_reportsDeleteManyArgs} args - Arguments to filter Site_reports to delete.
     * @example
     * // Delete a few Site_reports
     * const { count } = await prisma.site_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends site_reportsDeleteManyArgs>(args?: SelectSubset<T, site_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Site_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Site_reports
     * const site_reports = await prisma.site_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends site_reportsUpdateManyArgs>(args: SelectSubset<T, site_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Site_reports and returns the data updated in the database.
     * @param {site_reportsUpdateManyAndReturnArgs} args - Arguments to update many Site_reports.
     * @example
     * // Update many Site_reports
     * const site_reports = await prisma.site_reports.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Site_reports and only return the `id`
     * const site_reportsWithIdOnly = await prisma.site_reports.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends site_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, site_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Site_reports.
     * @param {site_reportsUpsertArgs} args - Arguments to update or create a Site_reports.
     * @example
     * // Update or create a Site_reports
     * const site_reports = await prisma.site_reports.upsert({
     *   create: {
     *     // ... data to create a Site_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Site_reports we want to update
     *   }
     * })
     */
    upsert<T extends site_reportsUpsertArgs>(args: SelectSubset<T, site_reportsUpsertArgs<ExtArgs>>): Prisma__site_reportsClient<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Site_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_reportsCountArgs} args - Arguments to filter Site_reports to count.
     * @example
     * // Count the number of Site_reports
     * const count = await prisma.site_reports.count({
     *   where: {
     *     // ... the filter for the Site_reports we want to count
     *   }
     * })
    **/
    count<T extends site_reportsCountArgs>(
      args?: Subset<T, site_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Site_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Site_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Site_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Site_reportsAggregateArgs>(args: Subset<T, Site_reportsAggregateArgs>): Prisma.PrismaPromise<GetSite_reportsAggregateType<T>>

    /**
     * Group by Site_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {site_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends site_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: site_reportsGroupByArgs['orderBy'] }
        : { orderBy?: site_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, site_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSite_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the site_reports model
   */
  readonly fields: site_reportsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for site_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__site_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    projects<T extends projectsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectsDefaultArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    staff<T extends site_reports$staffArgs<ExtArgs> = {}>(args?: Subset<T, site_reports$staffArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project_stages<T extends site_reports$project_stagesArgs<ExtArgs> = {}>(args?: Subset<T, site_reports$project_stagesArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the site_reports model
   */
  interface site_reportsFieldRefs {
    readonly id: FieldRef<"site_reports", 'Int'>
    readonly project_id: FieldRef<"site_reports", 'Int'>
    readonly staff_id: FieldRef<"site_reports", 'Int'>
    readonly stage_id: FieldRef<"site_reports", 'Int'>
    readonly report_type: FieldRef<"site_reports", 'String'>
    readonly description: FieldRef<"site_reports", 'String'>
    readonly status: FieldRef<"site_reports", 'String'>
    readonly created_at: FieldRef<"site_reports", 'DateTime'>
    readonly updated_at: FieldRef<"site_reports", 'DateTime'>
    readonly synced_at: FieldRef<"site_reports", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"site_reports", 'String'>
  }
    

  // Custom InputTypes
  /**
   * site_reports findUnique
   */
  export type site_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * Filter, which site_reports to fetch.
     */
    where: site_reportsWhereUniqueInput
  }

  /**
   * site_reports findUniqueOrThrow
   */
  export type site_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * Filter, which site_reports to fetch.
     */
    where: site_reportsWhereUniqueInput
  }

  /**
   * site_reports findFirst
   */
  export type site_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * Filter, which site_reports to fetch.
     */
    where?: site_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_reports to fetch.
     */
    orderBy?: site_reportsOrderByWithRelationInput | site_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for site_reports.
     */
    cursor?: site_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of site_reports.
     */
    distinct?: Site_reportsScalarFieldEnum | Site_reportsScalarFieldEnum[]
  }

  /**
   * site_reports findFirstOrThrow
   */
  export type site_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * Filter, which site_reports to fetch.
     */
    where?: site_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_reports to fetch.
     */
    orderBy?: site_reportsOrderByWithRelationInput | site_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for site_reports.
     */
    cursor?: site_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of site_reports.
     */
    distinct?: Site_reportsScalarFieldEnum | Site_reportsScalarFieldEnum[]
  }

  /**
   * site_reports findMany
   */
  export type site_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * Filter, which site_reports to fetch.
     */
    where?: site_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of site_reports to fetch.
     */
    orderBy?: site_reportsOrderByWithRelationInput | site_reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing site_reports.
     */
    cursor?: site_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` site_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` site_reports.
     */
    skip?: number
    distinct?: Site_reportsScalarFieldEnum | Site_reportsScalarFieldEnum[]
  }

  /**
   * site_reports create
   */
  export type site_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * The data needed to create a site_reports.
     */
    data: XOR<site_reportsCreateInput, site_reportsUncheckedCreateInput>
  }

  /**
   * site_reports createMany
   */
  export type site_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many site_reports.
     */
    data: site_reportsCreateManyInput | site_reportsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * site_reports createManyAndReturn
   */
  export type site_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * The data used to create many site_reports.
     */
    data: site_reportsCreateManyInput | site_reportsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * site_reports update
   */
  export type site_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * The data needed to update a site_reports.
     */
    data: XOR<site_reportsUpdateInput, site_reportsUncheckedUpdateInput>
    /**
     * Choose, which site_reports to update.
     */
    where: site_reportsWhereUniqueInput
  }

  /**
   * site_reports updateMany
   */
  export type site_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update site_reports.
     */
    data: XOR<site_reportsUpdateManyMutationInput, site_reportsUncheckedUpdateManyInput>
    /**
     * Filter which site_reports to update
     */
    where?: site_reportsWhereInput
    /**
     * Limit how many site_reports to update.
     */
    limit?: number
  }

  /**
   * site_reports updateManyAndReturn
   */
  export type site_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * The data used to update site_reports.
     */
    data: XOR<site_reportsUpdateManyMutationInput, site_reportsUncheckedUpdateManyInput>
    /**
     * Filter which site_reports to update
     */
    where?: site_reportsWhereInput
    /**
     * Limit how many site_reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * site_reports upsert
   */
  export type site_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * The filter to search for the site_reports to update in case it exists.
     */
    where: site_reportsWhereUniqueInput
    /**
     * In case the site_reports found by the `where` argument doesn't exist, create a new site_reports with this data.
     */
    create: XOR<site_reportsCreateInput, site_reportsUncheckedCreateInput>
    /**
     * In case the site_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<site_reportsUpdateInput, site_reportsUncheckedUpdateInput>
  }

  /**
   * site_reports delete
   */
  export type site_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    /**
     * Filter which site_reports to delete.
     */
    where: site_reportsWhereUniqueInput
  }

  /**
   * site_reports deleteMany
   */
  export type site_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which site_reports to delete
     */
    where?: site_reportsWhereInput
    /**
     * Limit how many site_reports to delete.
     */
    limit?: number
  }

  /**
   * site_reports.staff
   */
  export type site_reports$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    where?: staffWhereInput
  }

  /**
   * site_reports.project_stages
   */
  export type site_reports$project_stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    where?: project_stagesWhereInput
  }

  /**
   * site_reports without action
   */
  export type site_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
  }


  /**
   * Model staff
   */

  export type AggregateStaff = {
    _count: StaffCountAggregateOutputType | null
    _avg: StaffAvgAggregateOutputType | null
    _sum: StaffSumAggregateOutputType | null
    _min: StaffMinAggregateOutputType | null
    _max: StaffMaxAggregateOutputType | null
  }

  export type StaffAvgAggregateOutputType = {
    id: number | null
    role_id: number | null
    address_id: number | null
  }

  export type StaffSumAggregateOutputType = {
    id: number | null
    role_id: number | null
    address_id: number | null
  }

  export type StaffMinAggregateOutputType = {
    id: number | null
    firstname: string | null
    lastname: string | null
    email: string | null
    role_id: number | null
    phone: string | null
    mobile: string | null
    address_id: number | null
    hire_date: Date | null
    is_available: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type StaffMaxAggregateOutputType = {
    id: number | null
    firstname: string | null
    lastname: string | null
    email: string | null
    role_id: number | null
    phone: string | null
    mobile: string | null
    address_id: number | null
    hire_date: Date | null
    is_available: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type StaffCountAggregateOutputType = {
    id: number
    firstname: number
    lastname: number
    email: number
    role_id: number
    phone: number
    mobile: number
    address_id: number
    hire_date: number
    is_available: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type StaffAvgAggregateInputType = {
    id?: true
    role_id?: true
    address_id?: true
  }

  export type StaffSumAggregateInputType = {
    id?: true
    role_id?: true
    address_id?: true
  }

  export type StaffMinAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    email?: true
    role_id?: true
    phone?: true
    mobile?: true
    address_id?: true
    hire_date?: true
    is_available?: true
    created_at?: true
    updated_at?: true
  }

  export type StaffMaxAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    email?: true
    role_id?: true
    phone?: true
    mobile?: true
    address_id?: true
    hire_date?: true
    is_available?: true
    created_at?: true
    updated_at?: true
  }

  export type StaffCountAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    email?: true
    role_id?: true
    phone?: true
    mobile?: true
    address_id?: true
    hire_date?: true
    is_available?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type StaffAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff to aggregate.
     */
    where?: staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff to fetch.
     */
    orderBy?: staffOrderByWithRelationInput | staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned staff
    **/
    _count?: true | StaffCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StaffAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StaffSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StaffMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StaffMaxAggregateInputType
  }

  export type GetStaffAggregateType<T extends StaffAggregateArgs> = {
        [P in keyof T & keyof AggregateStaff]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStaff[P]>
      : GetScalarType<T[P], AggregateStaff[P]>
  }




  export type staffGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: staffWhereInput
    orderBy?: staffOrderByWithAggregationInput | staffOrderByWithAggregationInput[]
    by: StaffScalarFieldEnum[] | StaffScalarFieldEnum
    having?: staffScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StaffCountAggregateInputType | true
    _avg?: StaffAvgAggregateInputType
    _sum?: StaffSumAggregateInputType
    _min?: StaffMinAggregateInputType
    _max?: StaffMaxAggregateInputType
  }

  export type StaffGroupByOutputType = {
    id: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone: string | null
    mobile: string | null
    address_id: number | null
    hire_date: Date
    is_available: boolean | null
    created_at: Date | null
    updated_at: Date | null
    _count: StaffCountAggregateOutputType | null
    _avg: StaffAvgAggregateOutputType | null
    _sum: StaffSumAggregateOutputType | null
    _min: StaffMinAggregateOutputType | null
    _max: StaffMaxAggregateOutputType | null
  }

  type GetStaffGroupByPayload<T extends staffGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StaffGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StaffGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StaffGroupByOutputType[P]>
            : GetScalarType<T[P], StaffGroupByOutputType[P]>
        }
      >
    >


  export type staffSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    role_id?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    hire_date?: boolean
    is_available?: boolean
    created_at?: boolean
    updated_at?: boolean
    events?: boolean | staff$eventsArgs<ExtArgs>
    project_media?: boolean | staff$project_mediaArgs<ExtArgs>
    project_staff?: boolean | staff$project_staffArgs<ExtArgs>
    site_reports?: boolean | staff$site_reportsArgs<ExtArgs>
    addresses?: boolean | staff$addressesArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
    stage_checklists?: boolean | staff$stage_checklistsArgs<ExtArgs>
    tasks?: boolean | staff$tasksArgs<ExtArgs>
    time_logs?: boolean | staff$time_logsArgs<ExtArgs>
    _count?: boolean | StaffCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staff"]>

  export type staffSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    role_id?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    hire_date?: boolean
    is_available?: boolean
    created_at?: boolean
    updated_at?: boolean
    addresses?: boolean | staff$addressesArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staff"]>

  export type staffSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    role_id?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    hire_date?: boolean
    is_available?: boolean
    created_at?: boolean
    updated_at?: boolean
    addresses?: boolean | staff$addressesArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staff"]>

  export type staffSelectScalar = {
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    role_id?: boolean
    phone?: boolean
    mobile?: boolean
    address_id?: boolean
    hire_date?: boolean
    is_available?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type staffOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstname" | "lastname" | "email" | "role_id" | "phone" | "mobile" | "address_id" | "hire_date" | "is_available" | "created_at" | "updated_at", ExtArgs["result"]["staff"]>
  export type staffInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | staff$eventsArgs<ExtArgs>
    project_media?: boolean | staff$project_mediaArgs<ExtArgs>
    project_staff?: boolean | staff$project_staffArgs<ExtArgs>
    site_reports?: boolean | staff$site_reportsArgs<ExtArgs>
    addresses?: boolean | staff$addressesArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
    stage_checklists?: boolean | staff$stage_checklistsArgs<ExtArgs>
    tasks?: boolean | staff$tasksArgs<ExtArgs>
    time_logs?: boolean | staff$time_logsArgs<ExtArgs>
    _count?: boolean | StaffCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type staffIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | staff$addressesArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }
  export type staffIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | staff$addressesArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }

  export type $staffPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "staff"
    objects: {
      events: Prisma.$eventsPayload<ExtArgs>[]
      project_media: Prisma.$project_mediaPayload<ExtArgs>[]
      project_staff: Prisma.$project_staffPayload<ExtArgs>[]
      site_reports: Prisma.$site_reportsPayload<ExtArgs>[]
      addresses: Prisma.$addressesPayload<ExtArgs> | null
      roles: Prisma.$rolesPayload<ExtArgs>
      stage_checklists: Prisma.$stage_checklistsPayload<ExtArgs>[]
      tasks: Prisma.$tasksPayload<ExtArgs>[]
      time_logs: Prisma.$time_logsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      firstname: string
      lastname: string
      email: string
      role_id: number
      phone: string | null
      mobile: string | null
      address_id: number | null
      hire_date: Date
      is_available: boolean | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["staff"]>
    composites: {}
  }

  type staffGetPayload<S extends boolean | null | undefined | staffDefaultArgs> = $Result.GetResult<Prisma.$staffPayload, S>

  type staffCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<staffFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StaffCountAggregateInputType | true
    }

  export interface staffDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['staff'], meta: { name: 'staff' } }
    /**
     * Find zero or one Staff that matches the filter.
     * @param {staffFindUniqueArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends staffFindUniqueArgs>(args: SelectSubset<T, staffFindUniqueArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Staff that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {staffFindUniqueOrThrowArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends staffFindUniqueOrThrowArgs>(args: SelectSubset<T, staffFindUniqueOrThrowArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staffFindFirstArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends staffFindFirstArgs>(args?: SelectSubset<T, staffFindFirstArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staffFindFirstOrThrowArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends staffFindFirstOrThrowArgs>(args?: SelectSubset<T, staffFindFirstOrThrowArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Staff that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staffFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Staff
     * const staff = await prisma.staff.findMany()
     * 
     * // Get first 10 Staff
     * const staff = await prisma.staff.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const staffWithIdOnly = await prisma.staff.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends staffFindManyArgs>(args?: SelectSubset<T, staffFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Staff.
     * @param {staffCreateArgs} args - Arguments to create a Staff.
     * @example
     * // Create one Staff
     * const Staff = await prisma.staff.create({
     *   data: {
     *     // ... data to create a Staff
     *   }
     * })
     * 
     */
    create<T extends staffCreateArgs>(args: SelectSubset<T, staffCreateArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Staff.
     * @param {staffCreateManyArgs} args - Arguments to create many Staff.
     * @example
     * // Create many Staff
     * const staff = await prisma.staff.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends staffCreateManyArgs>(args?: SelectSubset<T, staffCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Staff and returns the data saved in the database.
     * @param {staffCreateManyAndReturnArgs} args - Arguments to create many Staff.
     * @example
     * // Create many Staff
     * const staff = await prisma.staff.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Staff and only return the `id`
     * const staffWithIdOnly = await prisma.staff.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends staffCreateManyAndReturnArgs>(args?: SelectSubset<T, staffCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Staff.
     * @param {staffDeleteArgs} args - Arguments to delete one Staff.
     * @example
     * // Delete one Staff
     * const Staff = await prisma.staff.delete({
     *   where: {
     *     // ... filter to delete one Staff
     *   }
     * })
     * 
     */
    delete<T extends staffDeleteArgs>(args: SelectSubset<T, staffDeleteArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Staff.
     * @param {staffUpdateArgs} args - Arguments to update one Staff.
     * @example
     * // Update one Staff
     * const staff = await prisma.staff.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends staffUpdateArgs>(args: SelectSubset<T, staffUpdateArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Staff.
     * @param {staffDeleteManyArgs} args - Arguments to filter Staff to delete.
     * @example
     * // Delete a few Staff
     * const { count } = await prisma.staff.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends staffDeleteManyArgs>(args?: SelectSubset<T, staffDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staffUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Staff
     * const staff = await prisma.staff.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends staffUpdateManyArgs>(args: SelectSubset<T, staffUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff and returns the data updated in the database.
     * @param {staffUpdateManyAndReturnArgs} args - Arguments to update many Staff.
     * @example
     * // Update many Staff
     * const staff = await prisma.staff.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Staff and only return the `id`
     * const staffWithIdOnly = await prisma.staff.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends staffUpdateManyAndReturnArgs>(args: SelectSubset<T, staffUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Staff.
     * @param {staffUpsertArgs} args - Arguments to update or create a Staff.
     * @example
     * // Update or create a Staff
     * const staff = await prisma.staff.upsert({
     *   create: {
     *     // ... data to create a Staff
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Staff we want to update
     *   }
     * })
     */
    upsert<T extends staffUpsertArgs>(args: SelectSubset<T, staffUpsertArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staffCountArgs} args - Arguments to filter Staff to count.
     * @example
     * // Count the number of Staff
     * const count = await prisma.staff.count({
     *   where: {
     *     // ... the filter for the Staff we want to count
     *   }
     * })
    **/
    count<T extends staffCountArgs>(
      args?: Subset<T, staffCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StaffCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StaffAggregateArgs>(args: Subset<T, StaffAggregateArgs>): Prisma.PrismaPromise<GetStaffAggregateType<T>>

    /**
     * Group by Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staffGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends staffGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: staffGroupByArgs['orderBy'] }
        : { orderBy?: staffGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, staffGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaffGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the staff model
   */
  readonly fields: staffFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for staff.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__staffClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    events<T extends staff$eventsArgs<ExtArgs> = {}>(args?: Subset<T, staff$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_media<T extends staff$project_mediaArgs<ExtArgs> = {}>(args?: Subset<T, staff$project_mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_mediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_staff<T extends staff$project_staffArgs<ExtArgs> = {}>(args?: Subset<T, staff$project_staffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_staffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    site_reports<T extends staff$site_reportsArgs<ExtArgs> = {}>(args?: Subset<T, staff$site_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$site_reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    addresses<T extends staff$addressesArgs<ExtArgs> = {}>(args?: Subset<T, staff$addressesArgs<ExtArgs>>): Prisma__addressesClient<$Result.GetResult<Prisma.$addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    roles<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    stage_checklists<T extends staff$stage_checklistsArgs<ExtArgs> = {}>(args?: Subset<T, staff$stage_checklistsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends staff$tasksArgs<ExtArgs> = {}>(args?: Subset<T, staff$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    time_logs<T extends staff$time_logsArgs<ExtArgs> = {}>(args?: Subset<T, staff$time_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the staff model
   */
  interface staffFieldRefs {
    readonly id: FieldRef<"staff", 'Int'>
    readonly firstname: FieldRef<"staff", 'String'>
    readonly lastname: FieldRef<"staff", 'String'>
    readonly email: FieldRef<"staff", 'String'>
    readonly role_id: FieldRef<"staff", 'Int'>
    readonly phone: FieldRef<"staff", 'String'>
    readonly mobile: FieldRef<"staff", 'String'>
    readonly address_id: FieldRef<"staff", 'Int'>
    readonly hire_date: FieldRef<"staff", 'DateTime'>
    readonly is_available: FieldRef<"staff", 'Boolean'>
    readonly created_at: FieldRef<"staff", 'DateTime'>
    readonly updated_at: FieldRef<"staff", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * staff findUnique
   */
  export type staffFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * Filter, which staff to fetch.
     */
    where: staffWhereUniqueInput
  }

  /**
   * staff findUniqueOrThrow
   */
  export type staffFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * Filter, which staff to fetch.
     */
    where: staffWhereUniqueInput
  }

  /**
   * staff findFirst
   */
  export type staffFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * Filter, which staff to fetch.
     */
    where?: staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff to fetch.
     */
    orderBy?: staffOrderByWithRelationInput | staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff.
     */
    cursor?: staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff.
     */
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * staff findFirstOrThrow
   */
  export type staffFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * Filter, which staff to fetch.
     */
    where?: staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff to fetch.
     */
    orderBy?: staffOrderByWithRelationInput | staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff.
     */
    cursor?: staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff.
     */
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * staff findMany
   */
  export type staffFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * Filter, which staff to fetch.
     */
    where?: staffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff to fetch.
     */
    orderBy?: staffOrderByWithRelationInput | staffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing staff.
     */
    cursor?: staffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff.
     */
    skip?: number
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * staff create
   */
  export type staffCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * The data needed to create a staff.
     */
    data: XOR<staffCreateInput, staffUncheckedCreateInput>
  }

  /**
   * staff createMany
   */
  export type staffCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many staff.
     */
    data: staffCreateManyInput | staffCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * staff createManyAndReturn
   */
  export type staffCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * The data used to create many staff.
     */
    data: staffCreateManyInput | staffCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * staff update
   */
  export type staffUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * The data needed to update a staff.
     */
    data: XOR<staffUpdateInput, staffUncheckedUpdateInput>
    /**
     * Choose, which staff to update.
     */
    where: staffWhereUniqueInput
  }

  /**
   * staff updateMany
   */
  export type staffUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update staff.
     */
    data: XOR<staffUpdateManyMutationInput, staffUncheckedUpdateManyInput>
    /**
     * Filter which staff to update
     */
    where?: staffWhereInput
    /**
     * Limit how many staff to update.
     */
    limit?: number
  }

  /**
   * staff updateManyAndReturn
   */
  export type staffUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * The data used to update staff.
     */
    data: XOR<staffUpdateManyMutationInput, staffUncheckedUpdateManyInput>
    /**
     * Filter which staff to update
     */
    where?: staffWhereInput
    /**
     * Limit how many staff to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * staff upsert
   */
  export type staffUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * The filter to search for the staff to update in case it exists.
     */
    where: staffWhereUniqueInput
    /**
     * In case the staff found by the `where` argument doesn't exist, create a new staff with this data.
     */
    create: XOR<staffCreateInput, staffUncheckedCreateInput>
    /**
     * In case the staff was found with the provided `where` argument, update it with this data.
     */
    update: XOR<staffUpdateInput, staffUncheckedUpdateInput>
  }

  /**
   * staff delete
   */
  export type staffDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    /**
     * Filter which staff to delete.
     */
    where: staffWhereUniqueInput
  }

  /**
   * staff deleteMany
   */
  export type staffDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff to delete
     */
    where?: staffWhereInput
    /**
     * Limit how many staff to delete.
     */
    limit?: number
  }

  /**
   * staff.events
   */
  export type staff$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the events
     */
    select?: eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the events
     */
    omit?: eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: eventsInclude<ExtArgs> | null
    where?: eventsWhereInput
    orderBy?: eventsOrderByWithRelationInput | eventsOrderByWithRelationInput[]
    cursor?: eventsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventsScalarFieldEnum | EventsScalarFieldEnum[]
  }

  /**
   * staff.project_media
   */
  export type staff$project_mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_media
     */
    select?: project_mediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_media
     */
    omit?: project_mediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_mediaInclude<ExtArgs> | null
    where?: project_mediaWhereInput
    orderBy?: project_mediaOrderByWithRelationInput | project_mediaOrderByWithRelationInput[]
    cursor?: project_mediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_mediaScalarFieldEnum | Project_mediaScalarFieldEnum[]
  }

  /**
   * staff.project_staff
   */
  export type staff$project_staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_staff
     */
    select?: project_staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_staff
     */
    omit?: project_staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_staffInclude<ExtArgs> | null
    where?: project_staffWhereInput
    orderBy?: project_staffOrderByWithRelationInput | project_staffOrderByWithRelationInput[]
    cursor?: project_staffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_staffScalarFieldEnum | Project_staffScalarFieldEnum[]
  }

  /**
   * staff.site_reports
   */
  export type staff$site_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the site_reports
     */
    select?: site_reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the site_reports
     */
    omit?: site_reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: site_reportsInclude<ExtArgs> | null
    where?: site_reportsWhereInput
    orderBy?: site_reportsOrderByWithRelationInput | site_reportsOrderByWithRelationInput[]
    cursor?: site_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Site_reportsScalarFieldEnum | Site_reportsScalarFieldEnum[]
  }

  /**
   * staff.addresses
   */
  export type staff$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the addresses
     */
    select?: addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the addresses
     */
    omit?: addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: addressesInclude<ExtArgs> | null
    where?: addressesWhereInput
  }

  /**
   * staff.stage_checklists
   */
  export type staff$stage_checklistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    where?: stage_checklistsWhereInput
    orderBy?: stage_checklistsOrderByWithRelationInput | stage_checklistsOrderByWithRelationInput[]
    cursor?: stage_checklistsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stage_checklistsScalarFieldEnum | Stage_checklistsScalarFieldEnum[]
  }

  /**
   * staff.tasks
   */
  export type staff$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    cursor?: tasksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * staff.time_logs
   */
  export type staff$time_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    where?: time_logsWhereInput
    orderBy?: time_logsOrderByWithRelationInput | time_logsOrderByWithRelationInput[]
    cursor?: time_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Time_logsScalarFieldEnum | Time_logsScalarFieldEnum[]
  }

  /**
   * staff without action
   */
  export type staffDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
  }


  /**
   * Model stage_checklists
   */

  export type AggregateStage_checklists = {
    _count: Stage_checklistsCountAggregateOutputType | null
    _avg: Stage_checklistsAvgAggregateOutputType | null
    _sum: Stage_checklistsSumAggregateOutputType | null
    _min: Stage_checklistsMinAggregateOutputType | null
    _max: Stage_checklistsMaxAggregateOutputType | null
  }

  export type Stage_checklistsAvgAggregateOutputType = {
    id: number | null
    stage_id: number | null
    staff_id: number | null
  }

  export type Stage_checklistsSumAggregateOutputType = {
    id: number | null
    stage_id: number | null
    staff_id: number | null
  }

  export type Stage_checklistsMinAggregateOutputType = {
    id: number | null
    stage_id: number | null
    label: string | null
    is_done: boolean | null
    staff_id: number | null
    comment: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Stage_checklistsMaxAggregateOutputType = {
    id: number | null
    stage_id: number | null
    label: string | null
    is_done: boolean | null
    staff_id: number | null
    comment: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Stage_checklistsCountAggregateOutputType = {
    id: number
    stage_id: number
    label: number
    is_done: number
    staff_id: number
    comment: number
    created_at: number
    updated_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Stage_checklistsAvgAggregateInputType = {
    id?: true
    stage_id?: true
    staff_id?: true
  }

  export type Stage_checklistsSumAggregateInputType = {
    id?: true
    stage_id?: true
    staff_id?: true
  }

  export type Stage_checklistsMinAggregateInputType = {
    id?: true
    stage_id?: true
    label?: true
    is_done?: true
    staff_id?: true
    comment?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Stage_checklistsMaxAggregateInputType = {
    id?: true
    stage_id?: true
    label?: true
    is_done?: true
    staff_id?: true
    comment?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Stage_checklistsCountAggregateInputType = {
    id?: true
    stage_id?: true
    label?: true
    is_done?: true
    staff_id?: true
    comment?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Stage_checklistsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stage_checklists to aggregate.
     */
    where?: stage_checklistsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_checklists to fetch.
     */
    orderBy?: stage_checklistsOrderByWithRelationInput | stage_checklistsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stage_checklistsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_checklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stage_checklists
    **/
    _count?: true | Stage_checklistsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stage_checklistsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stage_checklistsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stage_checklistsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stage_checklistsMaxAggregateInputType
  }

  export type GetStage_checklistsAggregateType<T extends Stage_checklistsAggregateArgs> = {
        [P in keyof T & keyof AggregateStage_checklists]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStage_checklists[P]>
      : GetScalarType<T[P], AggregateStage_checklists[P]>
  }




  export type stage_checklistsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stage_checklistsWhereInput
    orderBy?: stage_checklistsOrderByWithAggregationInput | stage_checklistsOrderByWithAggregationInput[]
    by: Stage_checklistsScalarFieldEnum[] | Stage_checklistsScalarFieldEnum
    having?: stage_checklistsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stage_checklistsCountAggregateInputType | true
    _avg?: Stage_checklistsAvgAggregateInputType
    _sum?: Stage_checklistsSumAggregateInputType
    _min?: Stage_checklistsMinAggregateInputType
    _max?: Stage_checklistsMaxAggregateInputType
  }

  export type Stage_checklistsGroupByOutputType = {
    id: number
    stage_id: number
    label: string
    is_done: boolean | null
    staff_id: number | null
    comment: string | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Stage_checklistsCountAggregateOutputType | null
    _avg: Stage_checklistsAvgAggregateOutputType | null
    _sum: Stage_checklistsSumAggregateOutputType | null
    _min: Stage_checklistsMinAggregateOutputType | null
    _max: Stage_checklistsMaxAggregateOutputType | null
  }

  type GetStage_checklistsGroupByPayload<T extends stage_checklistsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stage_checklistsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stage_checklistsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stage_checklistsGroupByOutputType[P]>
            : GetScalarType<T[P], Stage_checklistsGroupByOutputType[P]>
        }
      >
    >


  export type stage_checklistsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stage_id?: boolean
    label?: boolean
    is_done?: boolean
    staff_id?: boolean
    comment?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    staff?: boolean | stage_checklists$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stage_checklists"]>

  export type stage_checklistsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stage_id?: boolean
    label?: boolean
    is_done?: boolean
    staff_id?: boolean
    comment?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    staff?: boolean | stage_checklists$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stage_checklists"]>

  export type stage_checklistsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stage_id?: boolean
    label?: boolean
    is_done?: boolean
    staff_id?: boolean
    comment?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    staff?: boolean | stage_checklists$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stage_checklists"]>

  export type stage_checklistsSelectScalar = {
    id?: boolean
    stage_id?: boolean
    label?: boolean
    is_done?: boolean
    staff_id?: boolean
    comment?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type stage_checklistsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "stage_id" | "label" | "is_done" | "staff_id" | "comment" | "created_at" | "updated_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["stage_checklists"]>
  export type stage_checklistsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | stage_checklists$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }
  export type stage_checklistsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | stage_checklists$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }
  export type stage_checklistsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | stage_checklists$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }

  export type $stage_checklistsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stage_checklists"
    objects: {
      staff: Prisma.$staffPayload<ExtArgs> | null
      project_stages: Prisma.$project_stagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      stage_id: number
      label: string
      is_done: boolean | null
      staff_id: number | null
      comment: string | null
      created_at: Date | null
      updated_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["stage_checklists"]>
    composites: {}
  }

  type stage_checklistsGetPayload<S extends boolean | null | undefined | stage_checklistsDefaultArgs> = $Result.GetResult<Prisma.$stage_checklistsPayload, S>

  type stage_checklistsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stage_checklistsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stage_checklistsCountAggregateInputType | true
    }

  export interface stage_checklistsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stage_checklists'], meta: { name: 'stage_checklists' } }
    /**
     * Find zero or one Stage_checklists that matches the filter.
     * @param {stage_checklistsFindUniqueArgs} args - Arguments to find a Stage_checklists
     * @example
     * // Get one Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stage_checklistsFindUniqueArgs>(args: SelectSubset<T, stage_checklistsFindUniqueArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stage_checklists that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stage_checklistsFindUniqueOrThrowArgs} args - Arguments to find a Stage_checklists
     * @example
     * // Get one Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stage_checklistsFindUniqueOrThrowArgs>(args: SelectSubset<T, stage_checklistsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stage_checklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_checklistsFindFirstArgs} args - Arguments to find a Stage_checklists
     * @example
     * // Get one Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stage_checklistsFindFirstArgs>(args?: SelectSubset<T, stage_checklistsFindFirstArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stage_checklists that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_checklistsFindFirstOrThrowArgs} args - Arguments to find a Stage_checklists
     * @example
     * // Get one Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stage_checklistsFindFirstOrThrowArgs>(args?: SelectSubset<T, stage_checklistsFindFirstOrThrowArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stage_checklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_checklistsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.findMany()
     * 
     * // Get first 10 Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stage_checklistsWithIdOnly = await prisma.stage_checklists.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends stage_checklistsFindManyArgs>(args?: SelectSubset<T, stage_checklistsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stage_checklists.
     * @param {stage_checklistsCreateArgs} args - Arguments to create a Stage_checklists.
     * @example
     * // Create one Stage_checklists
     * const Stage_checklists = await prisma.stage_checklists.create({
     *   data: {
     *     // ... data to create a Stage_checklists
     *   }
     * })
     * 
     */
    create<T extends stage_checklistsCreateArgs>(args: SelectSubset<T, stage_checklistsCreateArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stage_checklists.
     * @param {stage_checklistsCreateManyArgs} args - Arguments to create many Stage_checklists.
     * @example
     * // Create many Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stage_checklistsCreateManyArgs>(args?: SelectSubset<T, stage_checklistsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stage_checklists and returns the data saved in the database.
     * @param {stage_checklistsCreateManyAndReturnArgs} args - Arguments to create many Stage_checklists.
     * @example
     * // Create many Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stage_checklists and only return the `id`
     * const stage_checklistsWithIdOnly = await prisma.stage_checklists.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stage_checklistsCreateManyAndReturnArgs>(args?: SelectSubset<T, stage_checklistsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stage_checklists.
     * @param {stage_checklistsDeleteArgs} args - Arguments to delete one Stage_checklists.
     * @example
     * // Delete one Stage_checklists
     * const Stage_checklists = await prisma.stage_checklists.delete({
     *   where: {
     *     // ... filter to delete one Stage_checklists
     *   }
     * })
     * 
     */
    delete<T extends stage_checklistsDeleteArgs>(args: SelectSubset<T, stage_checklistsDeleteArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stage_checklists.
     * @param {stage_checklistsUpdateArgs} args - Arguments to update one Stage_checklists.
     * @example
     * // Update one Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stage_checklistsUpdateArgs>(args: SelectSubset<T, stage_checklistsUpdateArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stage_checklists.
     * @param {stage_checklistsDeleteManyArgs} args - Arguments to filter Stage_checklists to delete.
     * @example
     * // Delete a few Stage_checklists
     * const { count } = await prisma.stage_checklists.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stage_checklistsDeleteManyArgs>(args?: SelectSubset<T, stage_checklistsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stage_checklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_checklistsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stage_checklistsUpdateManyArgs>(args: SelectSubset<T, stage_checklistsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stage_checklists and returns the data updated in the database.
     * @param {stage_checklistsUpdateManyAndReturnArgs} args - Arguments to update many Stage_checklists.
     * @example
     * // Update many Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stage_checklists and only return the `id`
     * const stage_checklistsWithIdOnly = await prisma.stage_checklists.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stage_checklistsUpdateManyAndReturnArgs>(args: SelectSubset<T, stage_checklistsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stage_checklists.
     * @param {stage_checklistsUpsertArgs} args - Arguments to update or create a Stage_checklists.
     * @example
     * // Update or create a Stage_checklists
     * const stage_checklists = await prisma.stage_checklists.upsert({
     *   create: {
     *     // ... data to create a Stage_checklists
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stage_checklists we want to update
     *   }
     * })
     */
    upsert<T extends stage_checklistsUpsertArgs>(args: SelectSubset<T, stage_checklistsUpsertArgs<ExtArgs>>): Prisma__stage_checklistsClient<$Result.GetResult<Prisma.$stage_checklistsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stage_checklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_checklistsCountArgs} args - Arguments to filter Stage_checklists to count.
     * @example
     * // Count the number of Stage_checklists
     * const count = await prisma.stage_checklists.count({
     *   where: {
     *     // ... the filter for the Stage_checklists we want to count
     *   }
     * })
    **/
    count<T extends stage_checklistsCountArgs>(
      args?: Subset<T, stage_checklistsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stage_checklistsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stage_checklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stage_checklistsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stage_checklistsAggregateArgs>(args: Subset<T, Stage_checklistsAggregateArgs>): Prisma.PrismaPromise<GetStage_checklistsAggregateType<T>>

    /**
     * Group by Stage_checklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_checklistsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stage_checklistsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stage_checklistsGroupByArgs['orderBy'] }
        : { orderBy?: stage_checklistsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stage_checklistsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStage_checklistsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stage_checklists model
   */
  readonly fields: stage_checklistsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stage_checklists.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stage_checklistsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    staff<T extends stage_checklists$staffArgs<ExtArgs> = {}>(args?: Subset<T, stage_checklists$staffArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project_stages<T extends project_stagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, project_stagesDefaultArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stage_checklists model
   */
  interface stage_checklistsFieldRefs {
    readonly id: FieldRef<"stage_checklists", 'Int'>
    readonly stage_id: FieldRef<"stage_checklists", 'Int'>
    readonly label: FieldRef<"stage_checklists", 'String'>
    readonly is_done: FieldRef<"stage_checklists", 'Boolean'>
    readonly staff_id: FieldRef<"stage_checklists", 'Int'>
    readonly comment: FieldRef<"stage_checklists", 'String'>
    readonly created_at: FieldRef<"stage_checklists", 'DateTime'>
    readonly updated_at: FieldRef<"stage_checklists", 'DateTime'>
    readonly synced_at: FieldRef<"stage_checklists", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"stage_checklists", 'String'>
  }
    

  // Custom InputTypes
  /**
   * stage_checklists findUnique
   */
  export type stage_checklistsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * Filter, which stage_checklists to fetch.
     */
    where: stage_checklistsWhereUniqueInput
  }

  /**
   * stage_checklists findUniqueOrThrow
   */
  export type stage_checklistsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * Filter, which stage_checklists to fetch.
     */
    where: stage_checklistsWhereUniqueInput
  }

  /**
   * stage_checklists findFirst
   */
  export type stage_checklistsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * Filter, which stage_checklists to fetch.
     */
    where?: stage_checklistsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_checklists to fetch.
     */
    orderBy?: stage_checklistsOrderByWithRelationInput | stage_checklistsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stage_checklists.
     */
    cursor?: stage_checklistsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_checklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stage_checklists.
     */
    distinct?: Stage_checklistsScalarFieldEnum | Stage_checklistsScalarFieldEnum[]
  }

  /**
   * stage_checklists findFirstOrThrow
   */
  export type stage_checklistsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * Filter, which stage_checklists to fetch.
     */
    where?: stage_checklistsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_checklists to fetch.
     */
    orderBy?: stage_checklistsOrderByWithRelationInput | stage_checklistsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stage_checklists.
     */
    cursor?: stage_checklistsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_checklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stage_checklists.
     */
    distinct?: Stage_checklistsScalarFieldEnum | Stage_checklistsScalarFieldEnum[]
  }

  /**
   * stage_checklists findMany
   */
  export type stage_checklistsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * Filter, which stage_checklists to fetch.
     */
    where?: stage_checklistsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_checklists to fetch.
     */
    orderBy?: stage_checklistsOrderByWithRelationInput | stage_checklistsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stage_checklists.
     */
    cursor?: stage_checklistsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_checklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_checklists.
     */
    skip?: number
    distinct?: Stage_checklistsScalarFieldEnum | Stage_checklistsScalarFieldEnum[]
  }

  /**
   * stage_checklists create
   */
  export type stage_checklistsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * The data needed to create a stage_checklists.
     */
    data: XOR<stage_checklistsCreateInput, stage_checklistsUncheckedCreateInput>
  }

  /**
   * stage_checklists createMany
   */
  export type stage_checklistsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stage_checklists.
     */
    data: stage_checklistsCreateManyInput | stage_checklistsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stage_checklists createManyAndReturn
   */
  export type stage_checklistsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * The data used to create many stage_checklists.
     */
    data: stage_checklistsCreateManyInput | stage_checklistsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stage_checklists update
   */
  export type stage_checklistsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * The data needed to update a stage_checklists.
     */
    data: XOR<stage_checklistsUpdateInput, stage_checklistsUncheckedUpdateInput>
    /**
     * Choose, which stage_checklists to update.
     */
    where: stage_checklistsWhereUniqueInput
  }

  /**
   * stage_checklists updateMany
   */
  export type stage_checklistsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stage_checklists.
     */
    data: XOR<stage_checklistsUpdateManyMutationInput, stage_checklistsUncheckedUpdateManyInput>
    /**
     * Filter which stage_checklists to update
     */
    where?: stage_checklistsWhereInput
    /**
     * Limit how many stage_checklists to update.
     */
    limit?: number
  }

  /**
   * stage_checklists updateManyAndReturn
   */
  export type stage_checklistsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * The data used to update stage_checklists.
     */
    data: XOR<stage_checklistsUpdateManyMutationInput, stage_checklistsUncheckedUpdateManyInput>
    /**
     * Filter which stage_checklists to update
     */
    where?: stage_checklistsWhereInput
    /**
     * Limit how many stage_checklists to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stage_checklists upsert
   */
  export type stage_checklistsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * The filter to search for the stage_checklists to update in case it exists.
     */
    where: stage_checklistsWhereUniqueInput
    /**
     * In case the stage_checklists found by the `where` argument doesn't exist, create a new stage_checklists with this data.
     */
    create: XOR<stage_checklistsCreateInput, stage_checklistsUncheckedCreateInput>
    /**
     * In case the stage_checklists was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stage_checklistsUpdateInput, stage_checklistsUncheckedUpdateInput>
  }

  /**
   * stage_checklists delete
   */
  export type stage_checklistsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
    /**
     * Filter which stage_checklists to delete.
     */
    where: stage_checklistsWhereUniqueInput
  }

  /**
   * stage_checklists deleteMany
   */
  export type stage_checklistsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stage_checklists to delete
     */
    where?: stage_checklistsWhereInput
    /**
     * Limit how many stage_checklists to delete.
     */
    limit?: number
  }

  /**
   * stage_checklists.staff
   */
  export type stage_checklists$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    where?: staffWhereInput
  }

  /**
   * stage_checklists without action
   */
  export type stage_checklistsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_checklists
     */
    select?: stage_checklistsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_checklists
     */
    omit?: stage_checklistsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_checklistsInclude<ExtArgs> | null
  }


  /**
   * Model stage_tags
   */

  export type AggregateStage_tags = {
    _count: Stage_tagsCountAggregateOutputType | null
    _avg: Stage_tagsAvgAggregateOutputType | null
    _sum: Stage_tagsSumAggregateOutputType | null
    _min: Stage_tagsMinAggregateOutputType | null
    _max: Stage_tagsMaxAggregateOutputType | null
  }

  export type Stage_tagsAvgAggregateOutputType = {
    stage_id: number | null
    tag_id: number | null
  }

  export type Stage_tagsSumAggregateOutputType = {
    stage_id: number | null
    tag_id: number | null
  }

  export type Stage_tagsMinAggregateOutputType = {
    stage_id: number | null
    tag_id: number | null
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Stage_tagsMaxAggregateOutputType = {
    stage_id: number | null
    tag_id: number | null
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Stage_tagsCountAggregateOutputType = {
    stage_id: number
    tag_id: number
    created_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Stage_tagsAvgAggregateInputType = {
    stage_id?: true
    tag_id?: true
  }

  export type Stage_tagsSumAggregateInputType = {
    stage_id?: true
    tag_id?: true
  }

  export type Stage_tagsMinAggregateInputType = {
    stage_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Stage_tagsMaxAggregateInputType = {
    stage_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Stage_tagsCountAggregateInputType = {
    stage_id?: true
    tag_id?: true
    created_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Stage_tagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stage_tags to aggregate.
     */
    where?: stage_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_tags to fetch.
     */
    orderBy?: stage_tagsOrderByWithRelationInput | stage_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stage_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stage_tags
    **/
    _count?: true | Stage_tagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stage_tagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stage_tagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stage_tagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stage_tagsMaxAggregateInputType
  }

  export type GetStage_tagsAggregateType<T extends Stage_tagsAggregateArgs> = {
        [P in keyof T & keyof AggregateStage_tags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStage_tags[P]>
      : GetScalarType<T[P], AggregateStage_tags[P]>
  }




  export type stage_tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stage_tagsWhereInput
    orderBy?: stage_tagsOrderByWithAggregationInput | stage_tagsOrderByWithAggregationInput[]
    by: Stage_tagsScalarFieldEnum[] | Stage_tagsScalarFieldEnum
    having?: stage_tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stage_tagsCountAggregateInputType | true
    _avg?: Stage_tagsAvgAggregateInputType
    _sum?: Stage_tagsSumAggregateInputType
    _min?: Stage_tagsMinAggregateInputType
    _max?: Stage_tagsMaxAggregateInputType
  }

  export type Stage_tagsGroupByOutputType = {
    stage_id: number
    tag_id: number
    created_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Stage_tagsCountAggregateOutputType | null
    _avg: Stage_tagsAvgAggregateOutputType | null
    _sum: Stage_tagsSumAggregateOutputType | null
    _min: Stage_tagsMinAggregateOutputType | null
    _max: Stage_tagsMaxAggregateOutputType | null
  }

  type GetStage_tagsGroupByPayload<T extends stage_tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stage_tagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stage_tagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stage_tagsGroupByOutputType[P]>
            : GetScalarType<T[P], Stage_tagsGroupByOutputType[P]>
        }
      >
    >


  export type stage_tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stage_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stage_tags"]>

  export type stage_tagsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stage_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stage_tags"]>

  export type stage_tagsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stage_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stage_tags"]>

  export type stage_tagsSelectScalar = {
    stage_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type stage_tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"stage_id" | "tag_id" | "created_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["stage_tags"]>
  export type stage_tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type stage_tagsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type stage_tagsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }

  export type $stage_tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stage_tags"
    objects: {
      project_stages: Prisma.$project_stagesPayload<ExtArgs>
      tags: Prisma.$tagsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      stage_id: number
      tag_id: number
      created_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["stage_tags"]>
    composites: {}
  }

  type stage_tagsGetPayload<S extends boolean | null | undefined | stage_tagsDefaultArgs> = $Result.GetResult<Prisma.$stage_tagsPayload, S>

  type stage_tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stage_tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stage_tagsCountAggregateInputType | true
    }

  export interface stage_tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stage_tags'], meta: { name: 'stage_tags' } }
    /**
     * Find zero or one Stage_tags that matches the filter.
     * @param {stage_tagsFindUniqueArgs} args - Arguments to find a Stage_tags
     * @example
     * // Get one Stage_tags
     * const stage_tags = await prisma.stage_tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stage_tagsFindUniqueArgs>(args: SelectSubset<T, stage_tagsFindUniqueArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stage_tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stage_tagsFindUniqueOrThrowArgs} args - Arguments to find a Stage_tags
     * @example
     * // Get one Stage_tags
     * const stage_tags = await prisma.stage_tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stage_tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, stage_tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stage_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_tagsFindFirstArgs} args - Arguments to find a Stage_tags
     * @example
     * // Get one Stage_tags
     * const stage_tags = await prisma.stage_tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stage_tagsFindFirstArgs>(args?: SelectSubset<T, stage_tagsFindFirstArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stage_tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_tagsFindFirstOrThrowArgs} args - Arguments to find a Stage_tags
     * @example
     * // Get one Stage_tags
     * const stage_tags = await prisma.stage_tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stage_tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, stage_tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stage_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stage_tags
     * const stage_tags = await prisma.stage_tags.findMany()
     * 
     * // Get first 10 Stage_tags
     * const stage_tags = await prisma.stage_tags.findMany({ take: 10 })
     * 
     * // Only select the `stage_id`
     * const stage_tagsWithStage_idOnly = await prisma.stage_tags.findMany({ select: { stage_id: true } })
     * 
     */
    findMany<T extends stage_tagsFindManyArgs>(args?: SelectSubset<T, stage_tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stage_tags.
     * @param {stage_tagsCreateArgs} args - Arguments to create a Stage_tags.
     * @example
     * // Create one Stage_tags
     * const Stage_tags = await prisma.stage_tags.create({
     *   data: {
     *     // ... data to create a Stage_tags
     *   }
     * })
     * 
     */
    create<T extends stage_tagsCreateArgs>(args: SelectSubset<T, stage_tagsCreateArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stage_tags.
     * @param {stage_tagsCreateManyArgs} args - Arguments to create many Stage_tags.
     * @example
     * // Create many Stage_tags
     * const stage_tags = await prisma.stage_tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stage_tagsCreateManyArgs>(args?: SelectSubset<T, stage_tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stage_tags and returns the data saved in the database.
     * @param {stage_tagsCreateManyAndReturnArgs} args - Arguments to create many Stage_tags.
     * @example
     * // Create many Stage_tags
     * const stage_tags = await prisma.stage_tags.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stage_tags and only return the `stage_id`
     * const stage_tagsWithStage_idOnly = await prisma.stage_tags.createManyAndReturn({
     *   select: { stage_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stage_tagsCreateManyAndReturnArgs>(args?: SelectSubset<T, stage_tagsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stage_tags.
     * @param {stage_tagsDeleteArgs} args - Arguments to delete one Stage_tags.
     * @example
     * // Delete one Stage_tags
     * const Stage_tags = await prisma.stage_tags.delete({
     *   where: {
     *     // ... filter to delete one Stage_tags
     *   }
     * })
     * 
     */
    delete<T extends stage_tagsDeleteArgs>(args: SelectSubset<T, stage_tagsDeleteArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stage_tags.
     * @param {stage_tagsUpdateArgs} args - Arguments to update one Stage_tags.
     * @example
     * // Update one Stage_tags
     * const stage_tags = await prisma.stage_tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stage_tagsUpdateArgs>(args: SelectSubset<T, stage_tagsUpdateArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stage_tags.
     * @param {stage_tagsDeleteManyArgs} args - Arguments to filter Stage_tags to delete.
     * @example
     * // Delete a few Stage_tags
     * const { count } = await prisma.stage_tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stage_tagsDeleteManyArgs>(args?: SelectSubset<T, stage_tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stage_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stage_tags
     * const stage_tags = await prisma.stage_tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stage_tagsUpdateManyArgs>(args: SelectSubset<T, stage_tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stage_tags and returns the data updated in the database.
     * @param {stage_tagsUpdateManyAndReturnArgs} args - Arguments to update many Stage_tags.
     * @example
     * // Update many Stage_tags
     * const stage_tags = await prisma.stage_tags.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stage_tags and only return the `stage_id`
     * const stage_tagsWithStage_idOnly = await prisma.stage_tags.updateManyAndReturn({
     *   select: { stage_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stage_tagsUpdateManyAndReturnArgs>(args: SelectSubset<T, stage_tagsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stage_tags.
     * @param {stage_tagsUpsertArgs} args - Arguments to update or create a Stage_tags.
     * @example
     * // Update or create a Stage_tags
     * const stage_tags = await prisma.stage_tags.upsert({
     *   create: {
     *     // ... data to create a Stage_tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stage_tags we want to update
     *   }
     * })
     */
    upsert<T extends stage_tagsUpsertArgs>(args: SelectSubset<T, stage_tagsUpsertArgs<ExtArgs>>): Prisma__stage_tagsClient<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stage_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_tagsCountArgs} args - Arguments to filter Stage_tags to count.
     * @example
     * // Count the number of Stage_tags
     * const count = await prisma.stage_tags.count({
     *   where: {
     *     // ... the filter for the Stage_tags we want to count
     *   }
     * })
    **/
    count<T extends stage_tagsCountArgs>(
      args?: Subset<T, stage_tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stage_tagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stage_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stage_tagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stage_tagsAggregateArgs>(args: Subset<T, Stage_tagsAggregateArgs>): Prisma.PrismaPromise<GetStage_tagsAggregateType<T>>

    /**
     * Group by Stage_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stage_tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stage_tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stage_tagsGroupByArgs['orderBy'] }
        : { orderBy?: stage_tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stage_tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStage_tagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stage_tags model
   */
  readonly fields: stage_tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stage_tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stage_tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project_stages<T extends project_stagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, project_stagesDefaultArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tags<T extends tagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tagsDefaultArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stage_tags model
   */
  interface stage_tagsFieldRefs {
    readonly stage_id: FieldRef<"stage_tags", 'Int'>
    readonly tag_id: FieldRef<"stage_tags", 'Int'>
    readonly created_at: FieldRef<"stage_tags", 'DateTime'>
    readonly synced_at: FieldRef<"stage_tags", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"stage_tags", 'String'>
  }
    

  // Custom InputTypes
  /**
   * stage_tags findUnique
   */
  export type stage_tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * Filter, which stage_tags to fetch.
     */
    where: stage_tagsWhereUniqueInput
  }

  /**
   * stage_tags findUniqueOrThrow
   */
  export type stage_tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * Filter, which stage_tags to fetch.
     */
    where: stage_tagsWhereUniqueInput
  }

  /**
   * stage_tags findFirst
   */
  export type stage_tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * Filter, which stage_tags to fetch.
     */
    where?: stage_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_tags to fetch.
     */
    orderBy?: stage_tagsOrderByWithRelationInput | stage_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stage_tags.
     */
    cursor?: stage_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stage_tags.
     */
    distinct?: Stage_tagsScalarFieldEnum | Stage_tagsScalarFieldEnum[]
  }

  /**
   * stage_tags findFirstOrThrow
   */
  export type stage_tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * Filter, which stage_tags to fetch.
     */
    where?: stage_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_tags to fetch.
     */
    orderBy?: stage_tagsOrderByWithRelationInput | stage_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stage_tags.
     */
    cursor?: stage_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stage_tags.
     */
    distinct?: Stage_tagsScalarFieldEnum | Stage_tagsScalarFieldEnum[]
  }

  /**
   * stage_tags findMany
   */
  export type stage_tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * Filter, which stage_tags to fetch.
     */
    where?: stage_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stage_tags to fetch.
     */
    orderBy?: stage_tagsOrderByWithRelationInput | stage_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stage_tags.
     */
    cursor?: stage_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stage_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stage_tags.
     */
    skip?: number
    distinct?: Stage_tagsScalarFieldEnum | Stage_tagsScalarFieldEnum[]
  }

  /**
   * stage_tags create
   */
  export type stage_tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a stage_tags.
     */
    data: XOR<stage_tagsCreateInput, stage_tagsUncheckedCreateInput>
  }

  /**
   * stage_tags createMany
   */
  export type stage_tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stage_tags.
     */
    data: stage_tagsCreateManyInput | stage_tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stage_tags createManyAndReturn
   */
  export type stage_tagsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * The data used to create many stage_tags.
     */
    data: stage_tagsCreateManyInput | stage_tagsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stage_tags update
   */
  export type stage_tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a stage_tags.
     */
    data: XOR<stage_tagsUpdateInput, stage_tagsUncheckedUpdateInput>
    /**
     * Choose, which stage_tags to update.
     */
    where: stage_tagsWhereUniqueInput
  }

  /**
   * stage_tags updateMany
   */
  export type stage_tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stage_tags.
     */
    data: XOR<stage_tagsUpdateManyMutationInput, stage_tagsUncheckedUpdateManyInput>
    /**
     * Filter which stage_tags to update
     */
    where?: stage_tagsWhereInput
    /**
     * Limit how many stage_tags to update.
     */
    limit?: number
  }

  /**
   * stage_tags updateManyAndReturn
   */
  export type stage_tagsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * The data used to update stage_tags.
     */
    data: XOR<stage_tagsUpdateManyMutationInput, stage_tagsUncheckedUpdateManyInput>
    /**
     * Filter which stage_tags to update
     */
    where?: stage_tagsWhereInput
    /**
     * Limit how many stage_tags to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stage_tags upsert
   */
  export type stage_tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the stage_tags to update in case it exists.
     */
    where: stage_tagsWhereUniqueInput
    /**
     * In case the stage_tags found by the `where` argument doesn't exist, create a new stage_tags with this data.
     */
    create: XOR<stage_tagsCreateInput, stage_tagsUncheckedCreateInput>
    /**
     * In case the stage_tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stage_tagsUpdateInput, stage_tagsUncheckedUpdateInput>
  }

  /**
   * stage_tags delete
   */
  export type stage_tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    /**
     * Filter which stage_tags to delete.
     */
    where: stage_tagsWhereUniqueInput
  }

  /**
   * stage_tags deleteMany
   */
  export type stage_tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stage_tags to delete
     */
    where?: stage_tagsWhereInput
    /**
     * Limit how many stage_tags to delete.
     */
    limit?: number
  }

  /**
   * stage_tags without action
   */
  export type stage_tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
  }


  /**
   * Model tags
   */

  export type AggregateTags = {
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  export type TagsAvgAggregateOutputType = {
    id: number | null
  }

  export type TagsSumAggregateOutputType = {
    id: number | null
  }

  export type TagsMinAggregateOutputType = {
    id: number | null
    label: string | null
    color: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TagsMaxAggregateOutputType = {
    id: number | null
    label: string | null
    color: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TagsCountAggregateOutputType = {
    id: number
    label: number
    color: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TagsAvgAggregateInputType = {
    id?: true
  }

  export type TagsSumAggregateInputType = {
    id?: true
  }

  export type TagsMinAggregateInputType = {
    id?: true
    label?: true
    color?: true
    created_at?: true
    updated_at?: true
  }

  export type TagsMaxAggregateInputType = {
    id?: true
    label?: true
    color?: true
    created_at?: true
    updated_at?: true
  }

  export type TagsCountAggregateInputType = {
    id?: true
    label?: true
    color?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tags to aggregate.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tags
    **/
    _count?: true | TagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagsMaxAggregateInputType
  }

  export type GetTagsAggregateType<T extends TagsAggregateArgs> = {
        [P in keyof T & keyof AggregateTags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTags[P]>
      : GetScalarType<T[P], AggregateTags[P]>
  }




  export type tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tagsWhereInput
    orderBy?: tagsOrderByWithAggregationInput | tagsOrderByWithAggregationInput[]
    by: TagsScalarFieldEnum[] | TagsScalarFieldEnum
    having?: tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagsCountAggregateInputType | true
    _avg?: TagsAvgAggregateInputType
    _sum?: TagsSumAggregateInputType
    _min?: TagsMinAggregateInputType
    _max?: TagsMaxAggregateInputType
  }

  export type TagsGroupByOutputType = {
    id: number
    label: string
    color: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  type GetTagsGroupByPayload<T extends tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagsGroupByOutputType[P]>
            : GetScalarType<T[P], TagsGroupByOutputType[P]>
        }
      >
    >


  export type tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    label?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
    document_tags?: boolean | tags$document_tagsArgs<ExtArgs>
    project_tags?: boolean | tags$project_tagsArgs<ExtArgs>
    stage_tags?: boolean | tags$stage_tagsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tags"]>

  export type tagsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    label?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["tags"]>

  export type tagsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    label?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["tags"]>

  export type tagsSelectScalar = {
    id?: boolean
    label?: boolean
    color?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "label" | "color" | "created_at" | "updated_at", ExtArgs["result"]["tags"]>
  export type tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    document_tags?: boolean | tags$document_tagsArgs<ExtArgs>
    project_tags?: boolean | tags$project_tagsArgs<ExtArgs>
    stage_tags?: boolean | tags$stage_tagsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tagsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tagsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tags"
    objects: {
      document_tags: Prisma.$document_tagsPayload<ExtArgs>[]
      project_tags: Prisma.$project_tagsPayload<ExtArgs>[]
      stage_tags: Prisma.$stage_tagsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      label: string
      color: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["tags"]>
    composites: {}
  }

  type tagsGetPayload<S extends boolean | null | undefined | tagsDefaultArgs> = $Result.GetResult<Prisma.$tagsPayload, S>

  type tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TagsCountAggregateInputType | true
    }

  export interface tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tags'], meta: { name: 'tags' } }
    /**
     * Find zero or one Tags that matches the filter.
     * @param {tagsFindUniqueArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tagsFindUniqueArgs>(args: SelectSubset<T, tagsFindUniqueArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tagsFindUniqueOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindFirstArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tagsFindFirstArgs>(args?: SelectSubset<T, tagsFindFirstArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindFirstOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tags.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tags.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagsWithIdOnly = await prisma.tags.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tagsFindManyArgs>(args?: SelectSubset<T, tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tags.
     * @param {tagsCreateArgs} args - Arguments to create a Tags.
     * @example
     * // Create one Tags
     * const Tags = await prisma.tags.create({
     *   data: {
     *     // ... data to create a Tags
     *   }
     * })
     * 
     */
    create<T extends tagsCreateArgs>(args: SelectSubset<T, tagsCreateArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tags.
     * @param {tagsCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tags = await prisma.tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tagsCreateManyArgs>(args?: SelectSubset<T, tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tags and returns the data saved in the database.
     * @param {tagsCreateManyAndReturnArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tags = await prisma.tags.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tags and only return the `id`
     * const tagsWithIdOnly = await prisma.tags.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tagsCreateManyAndReturnArgs>(args?: SelectSubset<T, tagsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tags.
     * @param {tagsDeleteArgs} args - Arguments to delete one Tags.
     * @example
     * // Delete one Tags
     * const Tags = await prisma.tags.delete({
     *   where: {
     *     // ... filter to delete one Tags
     *   }
     * })
     * 
     */
    delete<T extends tagsDeleteArgs>(args: SelectSubset<T, tagsDeleteArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tags.
     * @param {tagsUpdateArgs} args - Arguments to update one Tags.
     * @example
     * // Update one Tags
     * const tags = await prisma.tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tagsUpdateArgs>(args: SelectSubset<T, tagsUpdateArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tags.
     * @param {tagsDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tagsDeleteManyArgs>(args?: SelectSubset<T, tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tags = await prisma.tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tagsUpdateManyArgs>(args: SelectSubset<T, tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags and returns the data updated in the database.
     * @param {tagsUpdateManyAndReturnArgs} args - Arguments to update many Tags.
     * @example
     * // Update many Tags
     * const tags = await prisma.tags.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tags and only return the `id`
     * const tagsWithIdOnly = await prisma.tags.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tagsUpdateManyAndReturnArgs>(args: SelectSubset<T, tagsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tags.
     * @param {tagsUpsertArgs} args - Arguments to update or create a Tags.
     * @example
     * // Update or create a Tags
     * const tags = await prisma.tags.upsert({
     *   create: {
     *     // ... data to create a Tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tags we want to update
     *   }
     * })
     */
    upsert<T extends tagsUpsertArgs>(args: SelectSubset<T, tagsUpsertArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tags.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends tagsCountArgs>(
      args?: Subset<T, tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagsAggregateArgs>(args: Subset<T, TagsAggregateArgs>): Prisma.PrismaPromise<GetTagsAggregateType<T>>

    /**
     * Group by Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tagsGroupByArgs['orderBy'] }
        : { orderBy?: tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tags model
   */
  readonly fields: tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    document_tags<T extends tags$document_tagsArgs<ExtArgs> = {}>(args?: Subset<T, tags$document_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project_tags<T extends tags$project_tagsArgs<ExtArgs> = {}>(args?: Subset<T, tags$project_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$project_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stage_tags<T extends tags$stage_tagsArgs<ExtArgs> = {}>(args?: Subset<T, tags$stage_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stage_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tags model
   */
  interface tagsFieldRefs {
    readonly id: FieldRef<"tags", 'Int'>
    readonly label: FieldRef<"tags", 'String'>
    readonly color: FieldRef<"tags", 'String'>
    readonly created_at: FieldRef<"tags", 'DateTime'>
    readonly updated_at: FieldRef<"tags", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tags findUnique
   */
  export type tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags findUniqueOrThrow
   */
  export type tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags findFirst
   */
  export type tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags findFirstOrThrow
   */
  export type tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags findMany
   */
  export type tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags create
   */
  export type tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a tags.
     */
    data: XOR<tagsCreateInput, tagsUncheckedCreateInput>
  }

  /**
   * tags createMany
   */
  export type tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tags.
     */
    data: tagsCreateManyInput | tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tags createManyAndReturn
   */
  export type tagsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * The data used to create many tags.
     */
    data: tagsCreateManyInput | tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tags update
   */
  export type tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a tags.
     */
    data: XOR<tagsUpdateInput, tagsUncheckedUpdateInput>
    /**
     * Choose, which tags to update.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags updateMany
   */
  export type tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tags.
     */
    data: XOR<tagsUpdateManyMutationInput, tagsUncheckedUpdateManyInput>
    /**
     * Filter which tags to update
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to update.
     */
    limit?: number
  }

  /**
   * tags updateManyAndReturn
   */
  export type tagsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * The data used to update tags.
     */
    data: XOR<tagsUpdateManyMutationInput, tagsUncheckedUpdateManyInput>
    /**
     * Filter which tags to update
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to update.
     */
    limit?: number
  }

  /**
   * tags upsert
   */
  export type tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the tags to update in case it exists.
     */
    where: tagsWhereUniqueInput
    /**
     * In case the tags found by the `where` argument doesn't exist, create a new tags with this data.
     */
    create: XOR<tagsCreateInput, tagsUncheckedCreateInput>
    /**
     * In case the tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tagsUpdateInput, tagsUncheckedUpdateInput>
  }

  /**
   * tags delete
   */
  export type tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter which tags to delete.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags deleteMany
   */
  export type tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tags to delete
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to delete.
     */
    limit?: number
  }

  /**
   * tags.document_tags
   */
  export type tags$document_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_tags
     */
    select?: document_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_tags
     */
    omit?: document_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_tagsInclude<ExtArgs> | null
    where?: document_tagsWhereInput
    orderBy?: document_tagsOrderByWithRelationInput | document_tagsOrderByWithRelationInput[]
    cursor?: document_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Document_tagsScalarFieldEnum | Document_tagsScalarFieldEnum[]
  }

  /**
   * tags.project_tags
   */
  export type tags$project_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_tags
     */
    select?: project_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_tags
     */
    omit?: project_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_tagsInclude<ExtArgs> | null
    where?: project_tagsWhereInput
    orderBy?: project_tagsOrderByWithRelationInput | project_tagsOrderByWithRelationInput[]
    cursor?: project_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Project_tagsScalarFieldEnum | Project_tagsScalarFieldEnum[]
  }

  /**
   * tags.stage_tags
   */
  export type tags$stage_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stage_tags
     */
    select?: stage_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stage_tags
     */
    omit?: stage_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stage_tagsInclude<ExtArgs> | null
    where?: stage_tagsWhereInput
    orderBy?: stage_tagsOrderByWithRelationInput | stage_tagsOrderByWithRelationInput[]
    cursor?: stage_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stage_tagsScalarFieldEnum | Stage_tagsScalarFieldEnum[]
  }

  /**
   * tags without action
   */
  export type tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
  }


  /**
   * Model tasks
   */

  export type AggregateTasks = {
    _count: TasksCountAggregateOutputType | null
    _avg: TasksAvgAggregateOutputType | null
    _sum: TasksSumAggregateOutputType | null
    _min: TasksMinAggregateOutputType | null
    _max: TasksMaxAggregateOutputType | null
  }

  export type TasksAvgAggregateOutputType = {
    id: number | null
    stage_id: number | null
    assigned_to: number | null
    priority: number | null
  }

  export type TasksSumAggregateOutputType = {
    id: number | null
    stage_id: number | null
    assigned_to: number | null
    priority: number | null
  }

  export type TasksMinAggregateOutputType = {
    id: number | null
    stage_id: number | null
    label: string | null
    description: string | null
    assigned_to: number | null
    due_date: Date | null
    status: string | null
    priority: number | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type TasksMaxAggregateOutputType = {
    id: number | null
    stage_id: number | null
    label: string | null
    description: string | null
    assigned_to: number | null
    due_date: Date | null
    status: string | null
    priority: number | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type TasksCountAggregateOutputType = {
    id: number
    stage_id: number
    label: number
    description: number
    assigned_to: number
    due_date: number
    status: number
    priority: number
    created_at: number
    updated_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type TasksAvgAggregateInputType = {
    id?: true
    stage_id?: true
    assigned_to?: true
    priority?: true
  }

  export type TasksSumAggregateInputType = {
    id?: true
    stage_id?: true
    assigned_to?: true
    priority?: true
  }

  export type TasksMinAggregateInputType = {
    id?: true
    stage_id?: true
    label?: true
    description?: true
    assigned_to?: true
    due_date?: true
    status?: true
    priority?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type TasksMaxAggregateInputType = {
    id?: true
    stage_id?: true
    label?: true
    description?: true
    assigned_to?: true
    due_date?: true
    status?: true
    priority?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type TasksCountAggregateInputType = {
    id?: true
    stage_id?: true
    label?: true
    description?: true
    assigned_to?: true
    due_date?: true
    status?: true
    priority?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type TasksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tasks to aggregate.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tasks
    **/
    _count?: true | TasksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TasksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TasksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TasksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TasksMaxAggregateInputType
  }

  export type GetTasksAggregateType<T extends TasksAggregateArgs> = {
        [P in keyof T & keyof AggregateTasks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTasks[P]>
      : GetScalarType<T[P], AggregateTasks[P]>
  }




  export type tasksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithAggregationInput | tasksOrderByWithAggregationInput[]
    by: TasksScalarFieldEnum[] | TasksScalarFieldEnum
    having?: tasksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TasksCountAggregateInputType | true
    _avg?: TasksAvgAggregateInputType
    _sum?: TasksSumAggregateInputType
    _min?: TasksMinAggregateInputType
    _max?: TasksMaxAggregateInputType
  }

  export type TasksGroupByOutputType = {
    id: number
    stage_id: number
    label: string
    description: string | null
    assigned_to: number | null
    due_date: Date | null
    status: string | null
    priority: number | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: TasksCountAggregateOutputType | null
    _avg: TasksAvgAggregateOutputType | null
    _sum: TasksSumAggregateOutputType | null
    _min: TasksMinAggregateOutputType | null
    _max: TasksMaxAggregateOutputType | null
  }

  type GetTasksGroupByPayload<T extends tasksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TasksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TasksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TasksGroupByOutputType[P]>
            : GetScalarType<T[P], TasksGroupByOutputType[P]>
        }
      >
    >


  export type tasksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stage_id?: boolean
    label?: boolean
    description?: boolean
    assigned_to?: boolean
    due_date?: boolean
    status?: boolean
    priority?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    staff?: boolean | tasks$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tasks"]>

  export type tasksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stage_id?: boolean
    label?: boolean
    description?: boolean
    assigned_to?: boolean
    due_date?: boolean
    status?: boolean
    priority?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    staff?: boolean | tasks$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tasks"]>

  export type tasksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    stage_id?: boolean
    label?: boolean
    description?: boolean
    assigned_to?: boolean
    due_date?: boolean
    status?: boolean
    priority?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    staff?: boolean | tasks$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tasks"]>

  export type tasksSelectScalar = {
    id?: boolean
    stage_id?: boolean
    label?: boolean
    description?: boolean
    assigned_to?: boolean
    due_date?: boolean
    status?: boolean
    priority?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type tasksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "stage_id" | "label" | "description" | "assigned_to" | "due_date" | "status" | "priority" | "created_at" | "updated_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["tasks"]>
  export type tasksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | tasks$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }
  export type tasksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | tasks$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }
  export type tasksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | tasks$staffArgs<ExtArgs>
    project_stages?: boolean | project_stagesDefaultArgs<ExtArgs>
  }

  export type $tasksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tasks"
    objects: {
      staff: Prisma.$staffPayload<ExtArgs> | null
      project_stages: Prisma.$project_stagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      stage_id: number
      label: string
      description: string | null
      assigned_to: number | null
      due_date: Date | null
      status: string | null
      priority: number | null
      created_at: Date | null
      updated_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["tasks"]>
    composites: {}
  }

  type tasksGetPayload<S extends boolean | null | undefined | tasksDefaultArgs> = $Result.GetResult<Prisma.$tasksPayload, S>

  type tasksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tasksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TasksCountAggregateInputType | true
    }

  export interface tasksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tasks'], meta: { name: 'tasks' } }
    /**
     * Find zero or one Tasks that matches the filter.
     * @param {tasksFindUniqueArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tasksFindUniqueArgs>(args: SelectSubset<T, tasksFindUniqueArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tasks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tasksFindUniqueOrThrowArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tasksFindUniqueOrThrowArgs>(args: SelectSubset<T, tasksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksFindFirstArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tasksFindFirstArgs>(args?: SelectSubset<T, tasksFindFirstArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tasks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksFindFirstOrThrowArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tasksFindFirstOrThrowArgs>(args?: SelectSubset<T, tasksFindFirstOrThrowArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tasks
     * const tasks = await prisma.tasks.findMany()
     * 
     * // Get first 10 Tasks
     * const tasks = await prisma.tasks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tasksWithIdOnly = await prisma.tasks.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tasksFindManyArgs>(args?: SelectSubset<T, tasksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tasks.
     * @param {tasksCreateArgs} args - Arguments to create a Tasks.
     * @example
     * // Create one Tasks
     * const Tasks = await prisma.tasks.create({
     *   data: {
     *     // ... data to create a Tasks
     *   }
     * })
     * 
     */
    create<T extends tasksCreateArgs>(args: SelectSubset<T, tasksCreateArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tasks.
     * @param {tasksCreateManyArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const tasks = await prisma.tasks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tasksCreateManyArgs>(args?: SelectSubset<T, tasksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tasks and returns the data saved in the database.
     * @param {tasksCreateManyAndReturnArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const tasks = await prisma.tasks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tasks and only return the `id`
     * const tasksWithIdOnly = await prisma.tasks.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tasksCreateManyAndReturnArgs>(args?: SelectSubset<T, tasksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tasks.
     * @param {tasksDeleteArgs} args - Arguments to delete one Tasks.
     * @example
     * // Delete one Tasks
     * const Tasks = await prisma.tasks.delete({
     *   where: {
     *     // ... filter to delete one Tasks
     *   }
     * })
     * 
     */
    delete<T extends tasksDeleteArgs>(args: SelectSubset<T, tasksDeleteArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tasks.
     * @param {tasksUpdateArgs} args - Arguments to update one Tasks.
     * @example
     * // Update one Tasks
     * const tasks = await prisma.tasks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tasksUpdateArgs>(args: SelectSubset<T, tasksUpdateArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tasks.
     * @param {tasksDeleteManyArgs} args - Arguments to filter Tasks to delete.
     * @example
     * // Delete a few Tasks
     * const { count } = await prisma.tasks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tasksDeleteManyArgs>(args?: SelectSubset<T, tasksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tasks
     * const tasks = await prisma.tasks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tasksUpdateManyArgs>(args: SelectSubset<T, tasksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks and returns the data updated in the database.
     * @param {tasksUpdateManyAndReturnArgs} args - Arguments to update many Tasks.
     * @example
     * // Update many Tasks
     * const tasks = await prisma.tasks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tasks and only return the `id`
     * const tasksWithIdOnly = await prisma.tasks.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tasksUpdateManyAndReturnArgs>(args: SelectSubset<T, tasksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tasks.
     * @param {tasksUpsertArgs} args - Arguments to update or create a Tasks.
     * @example
     * // Update or create a Tasks
     * const tasks = await prisma.tasks.upsert({
     *   create: {
     *     // ... data to create a Tasks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tasks we want to update
     *   }
     * })
     */
    upsert<T extends tasksUpsertArgs>(args: SelectSubset<T, tasksUpsertArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksCountArgs} args - Arguments to filter Tasks to count.
     * @example
     * // Count the number of Tasks
     * const count = await prisma.tasks.count({
     *   where: {
     *     // ... the filter for the Tasks we want to count
     *   }
     * })
    **/
    count<T extends tasksCountArgs>(
      args?: Subset<T, tasksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TasksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TasksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TasksAggregateArgs>(args: Subset<T, TasksAggregateArgs>): Prisma.PrismaPromise<GetTasksAggregateType<T>>

    /**
     * Group by Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tasksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tasksGroupByArgs['orderBy'] }
        : { orderBy?: tasksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tasksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTasksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tasks model
   */
  readonly fields: tasksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tasks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tasksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    staff<T extends tasks$staffArgs<ExtArgs> = {}>(args?: Subset<T, tasks$staffArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    project_stages<T extends project_stagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, project_stagesDefaultArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tasks model
   */
  interface tasksFieldRefs {
    readonly id: FieldRef<"tasks", 'Int'>
    readonly stage_id: FieldRef<"tasks", 'Int'>
    readonly label: FieldRef<"tasks", 'String'>
    readonly description: FieldRef<"tasks", 'String'>
    readonly assigned_to: FieldRef<"tasks", 'Int'>
    readonly due_date: FieldRef<"tasks", 'DateTime'>
    readonly status: FieldRef<"tasks", 'String'>
    readonly priority: FieldRef<"tasks", 'Int'>
    readonly created_at: FieldRef<"tasks", 'DateTime'>
    readonly updated_at: FieldRef<"tasks", 'DateTime'>
    readonly synced_at: FieldRef<"tasks", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"tasks", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tasks findUnique
   */
  export type tasksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks findUniqueOrThrow
   */
  export type tasksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks findFirst
   */
  export type tasksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tasks.
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tasks.
     */
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * tasks findFirstOrThrow
   */
  export type tasksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tasks.
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tasks.
     */
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * tasks findMany
   */
  export type tasksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tasks.
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * tasks create
   */
  export type tasksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * The data needed to create a tasks.
     */
    data: XOR<tasksCreateInput, tasksUncheckedCreateInput>
  }

  /**
   * tasks createMany
   */
  export type tasksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tasks.
     */
    data: tasksCreateManyInput | tasksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tasks createManyAndReturn
   */
  export type tasksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * The data used to create many tasks.
     */
    data: tasksCreateManyInput | tasksCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tasks update
   */
  export type tasksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * The data needed to update a tasks.
     */
    data: XOR<tasksUpdateInput, tasksUncheckedUpdateInput>
    /**
     * Choose, which tasks to update.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks updateMany
   */
  export type tasksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tasks.
     */
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyInput>
    /**
     * Filter which tasks to update
     */
    where?: tasksWhereInput
    /**
     * Limit how many tasks to update.
     */
    limit?: number
  }

  /**
   * tasks updateManyAndReturn
   */
  export type tasksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * The data used to update tasks.
     */
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyInput>
    /**
     * Filter which tasks to update
     */
    where?: tasksWhereInput
    /**
     * Limit how many tasks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * tasks upsert
   */
  export type tasksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * The filter to search for the tasks to update in case it exists.
     */
    where: tasksWhereUniqueInput
    /**
     * In case the tasks found by the `where` argument doesn't exist, create a new tasks with this data.
     */
    create: XOR<tasksCreateInput, tasksUncheckedCreateInput>
    /**
     * In case the tasks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tasksUpdateInput, tasksUncheckedUpdateInput>
  }

  /**
   * tasks delete
   */
  export type tasksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter which tasks to delete.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks deleteMany
   */
  export type tasksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tasks to delete
     */
    where?: tasksWhereInput
    /**
     * Limit how many tasks to delete.
     */
    limit?: number
  }

  /**
   * tasks.staff
   */
  export type tasks$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff
     */
    select?: staffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff
     */
    omit?: staffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staffInclude<ExtArgs> | null
    where?: staffWhereInput
  }

  /**
   * tasks without action
   */
  export type tasksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
  }


  /**
   * Model time_logs
   */

  export type AggregateTime_logs = {
    _count: Time_logsCountAggregateOutputType | null
    _avg: Time_logsAvgAggregateOutputType | null
    _sum: Time_logsSumAggregateOutputType | null
    _min: Time_logsMinAggregateOutputType | null
    _max: Time_logsMaxAggregateOutputType | null
  }

  export type Time_logsAvgAggregateOutputType = {
    id: number | null
    staff_id: number | null
    project_id: number | null
    stage_id: number | null
    gps_lat: Decimal | null
    gps_long: Decimal | null
  }

  export type Time_logsSumAggregateOutputType = {
    id: number | null
    staff_id: number | null
    project_id: number | null
    stage_id: number | null
    gps_lat: Decimal | null
    gps_long: Decimal | null
  }

  export type Time_logsMinAggregateOutputType = {
    id: number | null
    staff_id: number | null
    project_id: number | null
    stage_id: number | null
    check_in: Date | null
    check_out: Date | null
    comment: string | null
    gps_lat: Decimal | null
    gps_long: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Time_logsMaxAggregateOutputType = {
    id: number | null
    staff_id: number | null
    project_id: number | null
    stage_id: number | null
    check_in: Date | null
    check_out: Date | null
    comment: string | null
    gps_lat: Decimal | null
    gps_long: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
  }

  export type Time_logsCountAggregateOutputType = {
    id: number
    staff_id: number
    project_id: number
    stage_id: number
    check_in: number
    check_out: number
    comment: number
    gps_lat: number
    gps_long: number
    created_at: number
    updated_at: number
    synced_at: number
    synced_by_device_id: number
    _all: number
  }


  export type Time_logsAvgAggregateInputType = {
    id?: true
    staff_id?: true
    project_id?: true
    stage_id?: true
    gps_lat?: true
    gps_long?: true
  }

  export type Time_logsSumAggregateInputType = {
    id?: true
    staff_id?: true
    project_id?: true
    stage_id?: true
    gps_lat?: true
    gps_long?: true
  }

  export type Time_logsMinAggregateInputType = {
    id?: true
    staff_id?: true
    project_id?: true
    stage_id?: true
    check_in?: true
    check_out?: true
    comment?: true
    gps_lat?: true
    gps_long?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Time_logsMaxAggregateInputType = {
    id?: true
    staff_id?: true
    project_id?: true
    stage_id?: true
    check_in?: true
    check_out?: true
    comment?: true
    gps_lat?: true
    gps_long?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
  }

  export type Time_logsCountAggregateInputType = {
    id?: true
    staff_id?: true
    project_id?: true
    stage_id?: true
    check_in?: true
    check_out?: true
    comment?: true
    gps_lat?: true
    gps_long?: true
    created_at?: true
    updated_at?: true
    synced_at?: true
    synced_by_device_id?: true
    _all?: true
  }

  export type Time_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which time_logs to aggregate.
     */
    where?: time_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of time_logs to fetch.
     */
    orderBy?: time_logsOrderByWithRelationInput | time_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: time_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` time_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` time_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned time_logs
    **/
    _count?: true | Time_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Time_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Time_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Time_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Time_logsMaxAggregateInputType
  }

  export type GetTime_logsAggregateType<T extends Time_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateTime_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTime_logs[P]>
      : GetScalarType<T[P], AggregateTime_logs[P]>
  }




  export type time_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: time_logsWhereInput
    orderBy?: time_logsOrderByWithAggregationInput | time_logsOrderByWithAggregationInput[]
    by: Time_logsScalarFieldEnum[] | Time_logsScalarFieldEnum
    having?: time_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Time_logsCountAggregateInputType | true
    _avg?: Time_logsAvgAggregateInputType
    _sum?: Time_logsSumAggregateInputType
    _min?: Time_logsMinAggregateInputType
    _max?: Time_logsMaxAggregateInputType
  }

  export type Time_logsGroupByOutputType = {
    id: number
    staff_id: number
    project_id: number
    stage_id: number | null
    check_in: Date
    check_out: Date | null
    comment: string | null
    gps_lat: Decimal | null
    gps_long: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    synced_at: Date | null
    synced_by_device_id: string | null
    _count: Time_logsCountAggregateOutputType | null
    _avg: Time_logsAvgAggregateOutputType | null
    _sum: Time_logsSumAggregateOutputType | null
    _min: Time_logsMinAggregateOutputType | null
    _max: Time_logsMaxAggregateOutputType | null
  }

  type GetTime_logsGroupByPayload<T extends time_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Time_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Time_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Time_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Time_logsGroupByOutputType[P]>
        }
      >
    >


  export type time_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staff_id?: boolean
    project_id?: boolean
    stage_id?: boolean
    check_in?: boolean
    check_out?: boolean
    comment?: boolean
    gps_lat?: boolean
    gps_long?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | time_logs$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["time_logs"]>

  export type time_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staff_id?: boolean
    project_id?: boolean
    stage_id?: boolean
    check_in?: boolean
    check_out?: boolean
    comment?: boolean
    gps_lat?: boolean
    gps_long?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | time_logs$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["time_logs"]>

  export type time_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staff_id?: boolean
    project_id?: boolean
    stage_id?: boolean
    check_in?: boolean
    check_out?: boolean
    comment?: boolean
    gps_lat?: boolean
    gps_long?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | time_logs$project_stagesArgs<ExtArgs>
  }, ExtArgs["result"]["time_logs"]>

  export type time_logsSelectScalar = {
    id?: boolean
    staff_id?: boolean
    project_id?: boolean
    stage_id?: boolean
    check_in?: boolean
    check_out?: boolean
    comment?: boolean
    gps_lat?: boolean
    gps_long?: boolean
    created_at?: boolean
    updated_at?: boolean
    synced_at?: boolean
    synced_by_device_id?: boolean
  }

  export type time_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "staff_id" | "project_id" | "stage_id" | "check_in" | "check_out" | "comment" | "gps_lat" | "gps_long" | "created_at" | "updated_at" | "synced_at" | "synced_by_device_id", ExtArgs["result"]["time_logs"]>
  export type time_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | time_logs$project_stagesArgs<ExtArgs>
  }
  export type time_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | time_logs$project_stagesArgs<ExtArgs>
  }
  export type time_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | projectsDefaultArgs<ExtArgs>
    staff?: boolean | staffDefaultArgs<ExtArgs>
    project_stages?: boolean | time_logs$project_stagesArgs<ExtArgs>
  }

  export type $time_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "time_logs"
    objects: {
      projects: Prisma.$projectsPayload<ExtArgs>
      staff: Prisma.$staffPayload<ExtArgs>
      project_stages: Prisma.$project_stagesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      staff_id: number
      project_id: number
      stage_id: number | null
      check_in: Date
      check_out: Date | null
      comment: string | null
      gps_lat: Prisma.Decimal | null
      gps_long: Prisma.Decimal | null
      created_at: Date | null
      updated_at: Date | null
      synced_at: Date | null
      synced_by_device_id: string | null
    }, ExtArgs["result"]["time_logs"]>
    composites: {}
  }

  type time_logsGetPayload<S extends boolean | null | undefined | time_logsDefaultArgs> = $Result.GetResult<Prisma.$time_logsPayload, S>

  type time_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<time_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Time_logsCountAggregateInputType | true
    }

  export interface time_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['time_logs'], meta: { name: 'time_logs' } }
    /**
     * Find zero or one Time_logs that matches the filter.
     * @param {time_logsFindUniqueArgs} args - Arguments to find a Time_logs
     * @example
     * // Get one Time_logs
     * const time_logs = await prisma.time_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends time_logsFindUniqueArgs>(args: SelectSubset<T, time_logsFindUniqueArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Time_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {time_logsFindUniqueOrThrowArgs} args - Arguments to find a Time_logs
     * @example
     * // Get one Time_logs
     * const time_logs = await prisma.time_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends time_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, time_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Time_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {time_logsFindFirstArgs} args - Arguments to find a Time_logs
     * @example
     * // Get one Time_logs
     * const time_logs = await prisma.time_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends time_logsFindFirstArgs>(args?: SelectSubset<T, time_logsFindFirstArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Time_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {time_logsFindFirstOrThrowArgs} args - Arguments to find a Time_logs
     * @example
     * // Get one Time_logs
     * const time_logs = await prisma.time_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends time_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, time_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Time_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {time_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Time_logs
     * const time_logs = await prisma.time_logs.findMany()
     * 
     * // Get first 10 Time_logs
     * const time_logs = await prisma.time_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const time_logsWithIdOnly = await prisma.time_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends time_logsFindManyArgs>(args?: SelectSubset<T, time_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Time_logs.
     * @param {time_logsCreateArgs} args - Arguments to create a Time_logs.
     * @example
     * // Create one Time_logs
     * const Time_logs = await prisma.time_logs.create({
     *   data: {
     *     // ... data to create a Time_logs
     *   }
     * })
     * 
     */
    create<T extends time_logsCreateArgs>(args: SelectSubset<T, time_logsCreateArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Time_logs.
     * @param {time_logsCreateManyArgs} args - Arguments to create many Time_logs.
     * @example
     * // Create many Time_logs
     * const time_logs = await prisma.time_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends time_logsCreateManyArgs>(args?: SelectSubset<T, time_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Time_logs and returns the data saved in the database.
     * @param {time_logsCreateManyAndReturnArgs} args - Arguments to create many Time_logs.
     * @example
     * // Create many Time_logs
     * const time_logs = await prisma.time_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Time_logs and only return the `id`
     * const time_logsWithIdOnly = await prisma.time_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends time_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, time_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Time_logs.
     * @param {time_logsDeleteArgs} args - Arguments to delete one Time_logs.
     * @example
     * // Delete one Time_logs
     * const Time_logs = await prisma.time_logs.delete({
     *   where: {
     *     // ... filter to delete one Time_logs
     *   }
     * })
     * 
     */
    delete<T extends time_logsDeleteArgs>(args: SelectSubset<T, time_logsDeleteArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Time_logs.
     * @param {time_logsUpdateArgs} args - Arguments to update one Time_logs.
     * @example
     * // Update one Time_logs
     * const time_logs = await prisma.time_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends time_logsUpdateArgs>(args: SelectSubset<T, time_logsUpdateArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Time_logs.
     * @param {time_logsDeleteManyArgs} args - Arguments to filter Time_logs to delete.
     * @example
     * // Delete a few Time_logs
     * const { count } = await prisma.time_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends time_logsDeleteManyArgs>(args?: SelectSubset<T, time_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Time_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {time_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Time_logs
     * const time_logs = await prisma.time_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends time_logsUpdateManyArgs>(args: SelectSubset<T, time_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Time_logs and returns the data updated in the database.
     * @param {time_logsUpdateManyAndReturnArgs} args - Arguments to update many Time_logs.
     * @example
     * // Update many Time_logs
     * const time_logs = await prisma.time_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Time_logs and only return the `id`
     * const time_logsWithIdOnly = await prisma.time_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends time_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, time_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Time_logs.
     * @param {time_logsUpsertArgs} args - Arguments to update or create a Time_logs.
     * @example
     * // Update or create a Time_logs
     * const time_logs = await prisma.time_logs.upsert({
     *   create: {
     *     // ... data to create a Time_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Time_logs we want to update
     *   }
     * })
     */
    upsert<T extends time_logsUpsertArgs>(args: SelectSubset<T, time_logsUpsertArgs<ExtArgs>>): Prisma__time_logsClient<$Result.GetResult<Prisma.$time_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Time_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {time_logsCountArgs} args - Arguments to filter Time_logs to count.
     * @example
     * // Count the number of Time_logs
     * const count = await prisma.time_logs.count({
     *   where: {
     *     // ... the filter for the Time_logs we want to count
     *   }
     * })
    **/
    count<T extends time_logsCountArgs>(
      args?: Subset<T, time_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Time_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Time_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Time_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Time_logsAggregateArgs>(args: Subset<T, Time_logsAggregateArgs>): Prisma.PrismaPromise<GetTime_logsAggregateType<T>>

    /**
     * Group by Time_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {time_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends time_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: time_logsGroupByArgs['orderBy'] }
        : { orderBy?: time_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, time_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTime_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the time_logs model
   */
  readonly fields: time_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for time_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__time_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    projects<T extends projectsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectsDefaultArgs<ExtArgs>>): Prisma__projectsClient<$Result.GetResult<Prisma.$projectsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    staff<T extends staffDefaultArgs<ExtArgs> = {}>(args?: Subset<T, staffDefaultArgs<ExtArgs>>): Prisma__staffClient<$Result.GetResult<Prisma.$staffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    project_stages<T extends time_logs$project_stagesArgs<ExtArgs> = {}>(args?: Subset<T, time_logs$project_stagesArgs<ExtArgs>>): Prisma__project_stagesClient<$Result.GetResult<Prisma.$project_stagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the time_logs model
   */
  interface time_logsFieldRefs {
    readonly id: FieldRef<"time_logs", 'Int'>
    readonly staff_id: FieldRef<"time_logs", 'Int'>
    readonly project_id: FieldRef<"time_logs", 'Int'>
    readonly stage_id: FieldRef<"time_logs", 'Int'>
    readonly check_in: FieldRef<"time_logs", 'DateTime'>
    readonly check_out: FieldRef<"time_logs", 'DateTime'>
    readonly comment: FieldRef<"time_logs", 'String'>
    readonly gps_lat: FieldRef<"time_logs", 'Decimal'>
    readonly gps_long: FieldRef<"time_logs", 'Decimal'>
    readonly created_at: FieldRef<"time_logs", 'DateTime'>
    readonly updated_at: FieldRef<"time_logs", 'DateTime'>
    readonly synced_at: FieldRef<"time_logs", 'DateTime'>
    readonly synced_by_device_id: FieldRef<"time_logs", 'String'>
  }
    

  // Custom InputTypes
  /**
   * time_logs findUnique
   */
  export type time_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * Filter, which time_logs to fetch.
     */
    where: time_logsWhereUniqueInput
  }

  /**
   * time_logs findUniqueOrThrow
   */
  export type time_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * Filter, which time_logs to fetch.
     */
    where: time_logsWhereUniqueInput
  }

  /**
   * time_logs findFirst
   */
  export type time_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * Filter, which time_logs to fetch.
     */
    where?: time_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of time_logs to fetch.
     */
    orderBy?: time_logsOrderByWithRelationInput | time_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for time_logs.
     */
    cursor?: time_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` time_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` time_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of time_logs.
     */
    distinct?: Time_logsScalarFieldEnum | Time_logsScalarFieldEnum[]
  }

  /**
   * time_logs findFirstOrThrow
   */
  export type time_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * Filter, which time_logs to fetch.
     */
    where?: time_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of time_logs to fetch.
     */
    orderBy?: time_logsOrderByWithRelationInput | time_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for time_logs.
     */
    cursor?: time_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` time_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` time_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of time_logs.
     */
    distinct?: Time_logsScalarFieldEnum | Time_logsScalarFieldEnum[]
  }

  /**
   * time_logs findMany
   */
  export type time_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * Filter, which time_logs to fetch.
     */
    where?: time_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of time_logs to fetch.
     */
    orderBy?: time_logsOrderByWithRelationInput | time_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing time_logs.
     */
    cursor?: time_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` time_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` time_logs.
     */
    skip?: number
    distinct?: Time_logsScalarFieldEnum | Time_logsScalarFieldEnum[]
  }

  /**
   * time_logs create
   */
  export type time_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a time_logs.
     */
    data: XOR<time_logsCreateInput, time_logsUncheckedCreateInput>
  }

  /**
   * time_logs createMany
   */
  export type time_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many time_logs.
     */
    data: time_logsCreateManyInput | time_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * time_logs createManyAndReturn
   */
  export type time_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * The data used to create many time_logs.
     */
    data: time_logsCreateManyInput | time_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * time_logs update
   */
  export type time_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a time_logs.
     */
    data: XOR<time_logsUpdateInput, time_logsUncheckedUpdateInput>
    /**
     * Choose, which time_logs to update.
     */
    where: time_logsWhereUniqueInput
  }

  /**
   * time_logs updateMany
   */
  export type time_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update time_logs.
     */
    data: XOR<time_logsUpdateManyMutationInput, time_logsUncheckedUpdateManyInput>
    /**
     * Filter which time_logs to update
     */
    where?: time_logsWhereInput
    /**
     * Limit how many time_logs to update.
     */
    limit?: number
  }

  /**
   * time_logs updateManyAndReturn
   */
  export type time_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * The data used to update time_logs.
     */
    data: XOR<time_logsUpdateManyMutationInput, time_logsUncheckedUpdateManyInput>
    /**
     * Filter which time_logs to update
     */
    where?: time_logsWhereInput
    /**
     * Limit how many time_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * time_logs upsert
   */
  export type time_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the time_logs to update in case it exists.
     */
    where: time_logsWhereUniqueInput
    /**
     * In case the time_logs found by the `where` argument doesn't exist, create a new time_logs with this data.
     */
    create: XOR<time_logsCreateInput, time_logsUncheckedCreateInput>
    /**
     * In case the time_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<time_logsUpdateInput, time_logsUncheckedUpdateInput>
  }

  /**
   * time_logs delete
   */
  export type time_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
    /**
     * Filter which time_logs to delete.
     */
    where: time_logsWhereUniqueInput
  }

  /**
   * time_logs deleteMany
   */
  export type time_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which time_logs to delete
     */
    where?: time_logsWhereInput
    /**
     * Limit how many time_logs to delete.
     */
    limit?: number
  }

  /**
   * time_logs.project_stages
   */
  export type time_logs$project_stagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project_stages
     */
    select?: project_stagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project_stages
     */
    omit?: project_stagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: project_stagesInclude<ExtArgs> | null
    where?: project_stagesWhereInput
  }

  /**
   * time_logs without action
   */
  export type time_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the time_logs
     */
    select?: time_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the time_logs
     */
    omit?: time_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: time_logsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AddressesScalarFieldEnum: {
    id: 'id',
    street_number: 'street_number',
    street_name: 'street_name',
    additional_address: 'additional_address',
    zip_code: 'zip_code',
    city: 'city',
    country: 'country',
    latitude: 'latitude',
    longitude: 'longitude',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type AddressesScalarFieldEnum = (typeof AddressesScalarFieldEnum)[keyof typeof AddressesScalarFieldEnum]


  export const ClientsScalarFieldEnum: {
    id: 'id',
    company_name: 'company_name',
    firstname: 'firstname',
    lastname: 'lastname',
    email: 'email',
    phone: 'phone',
    mobile: 'mobile',
    address_id: 'address_id',
    siret: 'siret',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ClientsScalarFieldEnum = (typeof ClientsScalarFieldEnum)[keyof typeof ClientsScalarFieldEnum]


  export const Document_tagsScalarFieldEnum: {
    document_id: 'document_id',
    tag_id: 'tag_id',
    created_at: 'created_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Document_tagsScalarFieldEnum = (typeof Document_tagsScalarFieldEnum)[keyof typeof Document_tagsScalarFieldEnum]


  export const DocumentsScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    client_id: 'client_id',
    type: 'type',
    reference: 'reference',
    status: 'status',
    amount: 'amount',
    tva_rate: 'tva_rate',
    issue_date: 'issue_date',
    due_date: 'due_date',
    payment_date: 'payment_date',
    payment_method: 'payment_method',
    notes: 'notes',
    file_path: 'file_path',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DocumentsScalarFieldEnum = (typeof DocumentsScalarFieldEnum)[keyof typeof DocumentsScalarFieldEnum]


  export const EventsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    event_type: 'event_type',
    start_date: 'start_date',
    end_date: 'end_date',
    all_day: 'all_day',
    location: 'location',
    project_id: 'project_id',
    staff_id: 'staff_id',
    client_id: 'client_id',
    status: 'status',
    color: 'color',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type EventsScalarFieldEnum = (typeof EventsScalarFieldEnum)[keyof typeof EventsScalarFieldEnum]


  export const MaterialsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    reference: 'reference',
    unit: 'unit',
    price: 'price',
    stock_quantity: 'stock_quantity',
    minimum_stock: 'minimum_stock',
    supplier: 'supplier',
    supplier_reference: 'supplier_reference',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type MaterialsScalarFieldEnum = (typeof MaterialsScalarFieldEnum)[keyof typeof MaterialsScalarFieldEnum]


  export const Project_materialsScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    material_id: 'material_id',
    stage_id: 'stage_id',
    quantity_planned: 'quantity_planned',
    quantity_used: 'quantity_used',
    unit_price: 'unit_price',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Project_materialsScalarFieldEnum = (typeof Project_materialsScalarFieldEnum)[keyof typeof Project_materialsScalarFieldEnum]


  export const Project_mediaScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    stage_id: 'stage_id',
    staff_id: 'staff_id',
    media_type: 'media_type',
    file_path: 'file_path',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Project_mediaScalarFieldEnum = (typeof Project_mediaScalarFieldEnum)[keyof typeof Project_mediaScalarFieldEnum]


  export const Project_staffScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    staff_id: 'staff_id',
    stage_id: 'stage_id',
    role_description: 'role_description',
    start_date: 'start_date',
    end_date: 'end_date',
    hours_planned: 'hours_planned',
    hours_worked: 'hours_worked',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Project_staffScalarFieldEnum = (typeof Project_staffScalarFieldEnum)[keyof typeof Project_staffScalarFieldEnum]


  export const Project_stagesScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    name: 'name',
    description: 'description',
    start_date: 'start_date',
    end_date: 'end_date',
    status: 'status',
    order_index: 'order_index',
    estimated_duration: 'estimated_duration',
    actual_duration: 'actual_duration',
    completion_percentage: 'completion_percentage',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Project_stagesScalarFieldEnum = (typeof Project_stagesScalarFieldEnum)[keyof typeof Project_stagesScalarFieldEnum]


  export const Project_tagsScalarFieldEnum: {
    project_id: 'project_id',
    tag_id: 'tag_id',
    created_at: 'created_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Project_tagsScalarFieldEnum = (typeof Project_tagsScalarFieldEnum)[keyof typeof Project_tagsScalarFieldEnum]


  export const ProjectsScalarFieldEnum: {
    id: 'id',
    reference: 'reference',
    name: 'name',
    description: 'description',
    client_id: 'client_id',
    address_id: 'address_id',
    status: 'status',
    start_date: 'start_date',
    end_date: 'end_date',
    estimated_duration: 'estimated_duration',
    budget: 'budget',
    actual_cost: 'actual_cost',
    margin: 'margin',
    priority: 'priority',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ProjectsScalarFieldEnum = (typeof ProjectsScalarFieldEnum)[keyof typeof ProjectsScalarFieldEnum]


  export const RolesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const Site_reportsScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    staff_id: 'staff_id',
    stage_id: 'stage_id',
    report_type: 'report_type',
    description: 'description',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Site_reportsScalarFieldEnum = (typeof Site_reportsScalarFieldEnum)[keyof typeof Site_reportsScalarFieldEnum]


  export const StaffScalarFieldEnum: {
    id: 'id',
    firstname: 'firstname',
    lastname: 'lastname',
    email: 'email',
    role_id: 'role_id',
    phone: 'phone',
    mobile: 'mobile',
    address_id: 'address_id',
    hire_date: 'hire_date',
    is_available: 'is_available',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type StaffScalarFieldEnum = (typeof StaffScalarFieldEnum)[keyof typeof StaffScalarFieldEnum]


  export const Stage_checklistsScalarFieldEnum: {
    id: 'id',
    stage_id: 'stage_id',
    label: 'label',
    is_done: 'is_done',
    staff_id: 'staff_id',
    comment: 'comment',
    created_at: 'created_at',
    updated_at: 'updated_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Stage_checklistsScalarFieldEnum = (typeof Stage_checklistsScalarFieldEnum)[keyof typeof Stage_checklistsScalarFieldEnum]


  export const Stage_tagsScalarFieldEnum: {
    stage_id: 'stage_id',
    tag_id: 'tag_id',
    created_at: 'created_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Stage_tagsScalarFieldEnum = (typeof Stage_tagsScalarFieldEnum)[keyof typeof Stage_tagsScalarFieldEnum]


  export const TagsScalarFieldEnum: {
    id: 'id',
    label: 'label',
    color: 'color',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TagsScalarFieldEnum = (typeof TagsScalarFieldEnum)[keyof typeof TagsScalarFieldEnum]


  export const TasksScalarFieldEnum: {
    id: 'id',
    stage_id: 'stage_id',
    label: 'label',
    description: 'description',
    assigned_to: 'assigned_to',
    due_date: 'due_date',
    status: 'status',
    priority: 'priority',
    created_at: 'created_at',
    updated_at: 'updated_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type TasksScalarFieldEnum = (typeof TasksScalarFieldEnum)[keyof typeof TasksScalarFieldEnum]


  export const Time_logsScalarFieldEnum: {
    id: 'id',
    staff_id: 'staff_id',
    project_id: 'project_id',
    stage_id: 'stage_id',
    check_in: 'check_in',
    check_out: 'check_out',
    comment: 'comment',
    gps_lat: 'gps_lat',
    gps_long: 'gps_long',
    created_at: 'created_at',
    updated_at: 'updated_at',
    synced_at: 'synced_at',
    synced_by_device_id: 'synced_by_device_id'
  };

  export type Time_logsScalarFieldEnum = (typeof Time_logsScalarFieldEnum)[keyof typeof Time_logsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'document_type'
   */
  export type Enumdocument_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'document_type'>
    


  /**
   * Reference to a field of type 'document_type[]'
   */
  export type ListEnumdocument_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'document_type[]'>
    


  /**
   * Reference to a field of type 'document_status'
   */
  export type Enumdocument_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'document_status'>
    


  /**
   * Reference to a field of type 'document_status[]'
   */
  export type ListEnumdocument_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'document_status[]'>
    


  /**
   * Reference to a field of type 'event_type'
   */
  export type Enumevent_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'event_type'>
    


  /**
   * Reference to a field of type 'event_type[]'
   */
  export type ListEnumevent_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'event_type[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'project_status'
   */
  export type Enumproject_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'project_status'>
    


  /**
   * Reference to a field of type 'project_status[]'
   */
  export type ListEnumproject_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'project_status[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type addressesWhereInput = {
    AND?: addressesWhereInput | addressesWhereInput[]
    OR?: addressesWhereInput[]
    NOT?: addressesWhereInput | addressesWhereInput[]
    id?: IntFilter<"addresses"> | number
    street_number?: StringNullableFilter<"addresses"> | string | null
    street_name?: StringFilter<"addresses"> | string
    additional_address?: StringNullableFilter<"addresses"> | string | null
    zip_code?: StringFilter<"addresses"> | string
    city?: StringFilter<"addresses"> | string
    country?: StringNullableFilter<"addresses"> | string | null
    latitude?: DecimalNullableFilter<"addresses"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"addresses"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"addresses"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"addresses"> | Date | string | null
    clients?: ClientsListRelationFilter
    projects?: ProjectsListRelationFilter
    staff?: StaffListRelationFilter
  }

  export type addressesOrderByWithRelationInput = {
    id?: SortOrder
    street_number?: SortOrderInput | SortOrder
    street_name?: SortOrder
    additional_address?: SortOrderInput | SortOrder
    zip_code?: SortOrder
    city?: SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByRelationAggregateInput
    projects?: projectsOrderByRelationAggregateInput
    staff?: staffOrderByRelationAggregateInput
  }

  export type addressesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: addressesWhereInput | addressesWhereInput[]
    OR?: addressesWhereInput[]
    NOT?: addressesWhereInput | addressesWhereInput[]
    street_number?: StringNullableFilter<"addresses"> | string | null
    street_name?: StringFilter<"addresses"> | string
    additional_address?: StringNullableFilter<"addresses"> | string | null
    zip_code?: StringFilter<"addresses"> | string
    city?: StringFilter<"addresses"> | string
    country?: StringNullableFilter<"addresses"> | string | null
    latitude?: DecimalNullableFilter<"addresses"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"addresses"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"addresses"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"addresses"> | Date | string | null
    clients?: ClientsListRelationFilter
    projects?: ProjectsListRelationFilter
    staff?: StaffListRelationFilter
  }, "id">

  export type addressesOrderByWithAggregationInput = {
    id?: SortOrder
    street_number?: SortOrderInput | SortOrder
    street_name?: SortOrder
    additional_address?: SortOrderInput | SortOrder
    zip_code?: SortOrder
    city?: SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: addressesCountOrderByAggregateInput
    _avg?: addressesAvgOrderByAggregateInput
    _max?: addressesMaxOrderByAggregateInput
    _min?: addressesMinOrderByAggregateInput
    _sum?: addressesSumOrderByAggregateInput
  }

  export type addressesScalarWhereWithAggregatesInput = {
    AND?: addressesScalarWhereWithAggregatesInput | addressesScalarWhereWithAggregatesInput[]
    OR?: addressesScalarWhereWithAggregatesInput[]
    NOT?: addressesScalarWhereWithAggregatesInput | addressesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"addresses"> | number
    street_number?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    street_name?: StringWithAggregatesFilter<"addresses"> | string
    additional_address?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    zip_code?: StringWithAggregatesFilter<"addresses"> | string
    city?: StringWithAggregatesFilter<"addresses"> | string
    country?: StringNullableWithAggregatesFilter<"addresses"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"addresses"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"addresses"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"addresses"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"addresses"> | Date | string | null
  }

  export type clientsWhereInput = {
    AND?: clientsWhereInput | clientsWhereInput[]
    OR?: clientsWhereInput[]
    NOT?: clientsWhereInput | clientsWhereInput[]
    id?: IntFilter<"clients"> | number
    company_name?: StringNullableFilter<"clients"> | string | null
    firstname?: StringFilter<"clients"> | string
    lastname?: StringFilter<"clients"> | string
    email?: StringFilter<"clients"> | string
    phone?: StringNullableFilter<"clients"> | string | null
    mobile?: StringNullableFilter<"clients"> | string | null
    address_id?: IntNullableFilter<"clients"> | number | null
    siret?: StringNullableFilter<"clients"> | string | null
    notes?: StringNullableFilter<"clients"> | string | null
    created_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    addresses?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    documents?: DocumentsListRelationFilter
    events?: EventsListRelationFilter
    projects?: ProjectsListRelationFilter
  }

  export type clientsOrderByWithRelationInput = {
    id?: SortOrder
    company_name?: SortOrderInput | SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    address_id?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    addresses?: addressesOrderByWithRelationInput
    documents?: documentsOrderByRelationAggregateInput
    events?: eventsOrderByRelationAggregateInput
    projects?: projectsOrderByRelationAggregateInput
  }

  export type clientsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: clientsWhereInput | clientsWhereInput[]
    OR?: clientsWhereInput[]
    NOT?: clientsWhereInput | clientsWhereInput[]
    company_name?: StringNullableFilter<"clients"> | string | null
    firstname?: StringFilter<"clients"> | string
    lastname?: StringFilter<"clients"> | string
    phone?: StringNullableFilter<"clients"> | string | null
    mobile?: StringNullableFilter<"clients"> | string | null
    address_id?: IntNullableFilter<"clients"> | number | null
    siret?: StringNullableFilter<"clients"> | string | null
    notes?: StringNullableFilter<"clients"> | string | null
    created_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    addresses?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    documents?: DocumentsListRelationFilter
    events?: EventsListRelationFilter
    projects?: ProjectsListRelationFilter
  }, "id" | "email">

  export type clientsOrderByWithAggregationInput = {
    id?: SortOrder
    company_name?: SortOrderInput | SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    address_id?: SortOrderInput | SortOrder
    siret?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: clientsCountOrderByAggregateInput
    _avg?: clientsAvgOrderByAggregateInput
    _max?: clientsMaxOrderByAggregateInput
    _min?: clientsMinOrderByAggregateInput
    _sum?: clientsSumOrderByAggregateInput
  }

  export type clientsScalarWhereWithAggregatesInput = {
    AND?: clientsScalarWhereWithAggregatesInput | clientsScalarWhereWithAggregatesInput[]
    OR?: clientsScalarWhereWithAggregatesInput[]
    NOT?: clientsScalarWhereWithAggregatesInput | clientsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"clients"> | number
    company_name?: StringNullableWithAggregatesFilter<"clients"> | string | null
    firstname?: StringWithAggregatesFilter<"clients"> | string
    lastname?: StringWithAggregatesFilter<"clients"> | string
    email?: StringWithAggregatesFilter<"clients"> | string
    phone?: StringNullableWithAggregatesFilter<"clients"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"clients"> | string | null
    address_id?: IntNullableWithAggregatesFilter<"clients"> | number | null
    siret?: StringNullableWithAggregatesFilter<"clients"> | string | null
    notes?: StringNullableWithAggregatesFilter<"clients"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"clients"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"clients"> | Date | string | null
  }

  export type document_tagsWhereInput = {
    AND?: document_tagsWhereInput | document_tagsWhereInput[]
    OR?: document_tagsWhereInput[]
    NOT?: document_tagsWhereInput | document_tagsWhereInput[]
    document_id?: IntFilter<"document_tags"> | number
    tag_id?: IntFilter<"document_tags"> | number
    created_at?: DateTimeNullableFilter<"document_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"document_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"document_tags"> | string | null
    documents?: XOR<DocumentsScalarRelationFilter, documentsWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }

  export type document_tagsOrderByWithRelationInput = {
    document_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    documents?: documentsOrderByWithRelationInput
    tags?: tagsOrderByWithRelationInput
  }

  export type document_tagsWhereUniqueInput = Prisma.AtLeast<{
    document_id_tag_id?: document_tagsDocument_idTag_idCompoundUniqueInput
    AND?: document_tagsWhereInput | document_tagsWhereInput[]
    OR?: document_tagsWhereInput[]
    NOT?: document_tagsWhereInput | document_tagsWhereInput[]
    document_id?: IntFilter<"document_tags"> | number
    tag_id?: IntFilter<"document_tags"> | number
    created_at?: DateTimeNullableFilter<"document_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"document_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"document_tags"> | string | null
    documents?: XOR<DocumentsScalarRelationFilter, documentsWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }, "document_id_tag_id">

  export type document_tagsOrderByWithAggregationInput = {
    document_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: document_tagsCountOrderByAggregateInput
    _avg?: document_tagsAvgOrderByAggregateInput
    _max?: document_tagsMaxOrderByAggregateInput
    _min?: document_tagsMinOrderByAggregateInput
    _sum?: document_tagsSumOrderByAggregateInput
  }

  export type document_tagsScalarWhereWithAggregatesInput = {
    AND?: document_tagsScalarWhereWithAggregatesInput | document_tagsScalarWhereWithAggregatesInput[]
    OR?: document_tagsScalarWhereWithAggregatesInput[]
    NOT?: document_tagsScalarWhereWithAggregatesInput | document_tagsScalarWhereWithAggregatesInput[]
    document_id?: IntWithAggregatesFilter<"document_tags"> | number
    tag_id?: IntWithAggregatesFilter<"document_tags"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"document_tags"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"document_tags"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"document_tags"> | string | null
  }

  export type documentsWhereInput = {
    AND?: documentsWhereInput | documentsWhereInput[]
    OR?: documentsWhereInput[]
    NOT?: documentsWhereInput | documentsWhereInput[]
    id?: IntFilter<"documents"> | number
    project_id?: IntFilter<"documents"> | number
    client_id?: IntNullableFilter<"documents"> | number | null
    type?: Enumdocument_typeFilter<"documents"> | $Enums.document_type
    reference?: StringFilter<"documents"> | string
    status?: Enumdocument_statusNullableFilter<"documents"> | $Enums.document_status | null
    amount?: DecimalNullableFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    tva_rate?: DecimalNullableFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFilter<"documents"> | Date | string
    due_date?: DateTimeNullableFilter<"documents"> | Date | string | null
    payment_date?: DateTimeNullableFilter<"documents"> | Date | string | null
    payment_method?: StringNullableFilter<"documents"> | string | null
    notes?: StringNullableFilter<"documents"> | string | null
    file_path?: StringNullableFilter<"documents"> | string | null
    created_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    document_tags?: Document_tagsListRelationFilter
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
  }

  export type documentsOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_id?: SortOrderInput | SortOrder
    type?: SortOrder
    reference?: SortOrder
    status?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    tva_rate?: SortOrderInput | SortOrder
    issue_date?: SortOrder
    due_date?: SortOrderInput | SortOrder
    payment_date?: SortOrderInput | SortOrder
    payment_method?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    file_path?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    document_tags?: document_tagsOrderByRelationAggregateInput
    clients?: clientsOrderByWithRelationInput
    projects?: projectsOrderByWithRelationInput
  }

  export type documentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reference?: string
    AND?: documentsWhereInput | documentsWhereInput[]
    OR?: documentsWhereInput[]
    NOT?: documentsWhereInput | documentsWhereInput[]
    project_id?: IntFilter<"documents"> | number
    client_id?: IntNullableFilter<"documents"> | number | null
    type?: Enumdocument_typeFilter<"documents"> | $Enums.document_type
    status?: Enumdocument_statusNullableFilter<"documents"> | $Enums.document_status | null
    amount?: DecimalNullableFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    tva_rate?: DecimalNullableFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFilter<"documents"> | Date | string
    due_date?: DateTimeNullableFilter<"documents"> | Date | string | null
    payment_date?: DateTimeNullableFilter<"documents"> | Date | string | null
    payment_method?: StringNullableFilter<"documents"> | string | null
    notes?: StringNullableFilter<"documents"> | string | null
    file_path?: StringNullableFilter<"documents"> | string | null
    created_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    document_tags?: Document_tagsListRelationFilter
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
  }, "id" | "reference">

  export type documentsOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_id?: SortOrderInput | SortOrder
    type?: SortOrder
    reference?: SortOrder
    status?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    tva_rate?: SortOrderInput | SortOrder
    issue_date?: SortOrder
    due_date?: SortOrderInput | SortOrder
    payment_date?: SortOrderInput | SortOrder
    payment_method?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    file_path?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: documentsCountOrderByAggregateInput
    _avg?: documentsAvgOrderByAggregateInput
    _max?: documentsMaxOrderByAggregateInput
    _min?: documentsMinOrderByAggregateInput
    _sum?: documentsSumOrderByAggregateInput
  }

  export type documentsScalarWhereWithAggregatesInput = {
    AND?: documentsScalarWhereWithAggregatesInput | documentsScalarWhereWithAggregatesInput[]
    OR?: documentsScalarWhereWithAggregatesInput[]
    NOT?: documentsScalarWhereWithAggregatesInput | documentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"documents"> | number
    project_id?: IntWithAggregatesFilter<"documents"> | number
    client_id?: IntNullableWithAggregatesFilter<"documents"> | number | null
    type?: Enumdocument_typeWithAggregatesFilter<"documents"> | $Enums.document_type
    reference?: StringWithAggregatesFilter<"documents"> | string
    status?: Enumdocument_statusNullableWithAggregatesFilter<"documents"> | $Enums.document_status | null
    amount?: DecimalNullableWithAggregatesFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    tva_rate?: DecimalNullableWithAggregatesFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeWithAggregatesFilter<"documents"> | Date | string
    due_date?: DateTimeNullableWithAggregatesFilter<"documents"> | Date | string | null
    payment_date?: DateTimeNullableWithAggregatesFilter<"documents"> | Date | string | null
    payment_method?: StringNullableWithAggregatesFilter<"documents"> | string | null
    notes?: StringNullableWithAggregatesFilter<"documents"> | string | null
    file_path?: StringNullableWithAggregatesFilter<"documents"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"documents"> | Date | string | null
  }

  export type eventsWhereInput = {
    AND?: eventsWhereInput | eventsWhereInput[]
    OR?: eventsWhereInput[]
    NOT?: eventsWhereInput | eventsWhereInput[]
    id?: IntFilter<"events"> | number
    title?: StringFilter<"events"> | string
    description?: StringNullableFilter<"events"> | string | null
    event_type?: Enumevent_typeFilter<"events"> | $Enums.event_type
    start_date?: DateTimeFilter<"events"> | Date | string
    end_date?: DateTimeFilter<"events"> | Date | string
    all_day?: BoolNullableFilter<"events"> | boolean | null
    location?: StringNullableFilter<"events"> | string | null
    project_id?: IntNullableFilter<"events"> | number | null
    staff_id?: IntNullableFilter<"events"> | number | null
    client_id?: IntNullableFilter<"events"> | number | null
    status?: StringNullableFilter<"events"> | string | null
    color?: StringNullableFilter<"events"> | string | null
    created_at?: DateTimeNullableFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"events"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    projects?: XOR<ProjectsNullableScalarRelationFilter, projectsWhereInput> | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
  }

  export type eventsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    event_type?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    all_day?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    staff_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    projects?: projectsOrderByWithRelationInput
    staff?: staffOrderByWithRelationInput
  }

  export type eventsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: eventsWhereInput | eventsWhereInput[]
    OR?: eventsWhereInput[]
    NOT?: eventsWhereInput | eventsWhereInput[]
    title?: StringFilter<"events"> | string
    description?: StringNullableFilter<"events"> | string | null
    event_type?: Enumevent_typeFilter<"events"> | $Enums.event_type
    start_date?: DateTimeFilter<"events"> | Date | string
    end_date?: DateTimeFilter<"events"> | Date | string
    all_day?: BoolNullableFilter<"events"> | boolean | null
    location?: StringNullableFilter<"events"> | string | null
    project_id?: IntNullableFilter<"events"> | number | null
    staff_id?: IntNullableFilter<"events"> | number | null
    client_id?: IntNullableFilter<"events"> | number | null
    status?: StringNullableFilter<"events"> | string | null
    color?: StringNullableFilter<"events"> | string | null
    created_at?: DateTimeNullableFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"events"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    projects?: XOR<ProjectsNullableScalarRelationFilter, projectsWhereInput> | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
  }, "id">

  export type eventsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    event_type?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    all_day?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    staff_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: eventsCountOrderByAggregateInput
    _avg?: eventsAvgOrderByAggregateInput
    _max?: eventsMaxOrderByAggregateInput
    _min?: eventsMinOrderByAggregateInput
    _sum?: eventsSumOrderByAggregateInput
  }

  export type eventsScalarWhereWithAggregatesInput = {
    AND?: eventsScalarWhereWithAggregatesInput | eventsScalarWhereWithAggregatesInput[]
    OR?: eventsScalarWhereWithAggregatesInput[]
    NOT?: eventsScalarWhereWithAggregatesInput | eventsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"events"> | number
    title?: StringWithAggregatesFilter<"events"> | string
    description?: StringNullableWithAggregatesFilter<"events"> | string | null
    event_type?: Enumevent_typeWithAggregatesFilter<"events"> | $Enums.event_type
    start_date?: DateTimeWithAggregatesFilter<"events"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"events"> | Date | string
    all_day?: BoolNullableWithAggregatesFilter<"events"> | boolean | null
    location?: StringNullableWithAggregatesFilter<"events"> | string | null
    project_id?: IntNullableWithAggregatesFilter<"events"> | number | null
    staff_id?: IntNullableWithAggregatesFilter<"events"> | number | null
    client_id?: IntNullableWithAggregatesFilter<"events"> | number | null
    status?: StringNullableWithAggregatesFilter<"events"> | string | null
    color?: StringNullableWithAggregatesFilter<"events"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"events"> | Date | string | null
  }

  export type materialsWhereInput = {
    AND?: materialsWhereInput | materialsWhereInput[]
    OR?: materialsWhereInput[]
    NOT?: materialsWhereInput | materialsWhereInput[]
    id?: IntFilter<"materials"> | number
    name?: StringFilter<"materials"> | string
    description?: StringNullableFilter<"materials"> | string | null
    reference?: StringNullableFilter<"materials"> | string | null
    unit?: StringFilter<"materials"> | string
    price?: DecimalNullableFilter<"materials"> | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: IntNullableFilter<"materials"> | number | null
    minimum_stock?: IntNullableFilter<"materials"> | number | null
    supplier?: StringNullableFilter<"materials"> | string | null
    supplier_reference?: StringNullableFilter<"materials"> | string | null
    created_at?: DateTimeNullableFilter<"materials"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"materials"> | Date | string | null
    project_materials?: Project_materialsListRelationFilter
  }

  export type materialsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    reference?: SortOrderInput | SortOrder
    unit?: SortOrder
    price?: SortOrderInput | SortOrder
    stock_quantity?: SortOrderInput | SortOrder
    minimum_stock?: SortOrderInput | SortOrder
    supplier?: SortOrderInput | SortOrder
    supplier_reference?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    project_materials?: project_materialsOrderByRelationAggregateInput
  }

  export type materialsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reference?: string
    AND?: materialsWhereInput | materialsWhereInput[]
    OR?: materialsWhereInput[]
    NOT?: materialsWhereInput | materialsWhereInput[]
    name?: StringFilter<"materials"> | string
    description?: StringNullableFilter<"materials"> | string | null
    unit?: StringFilter<"materials"> | string
    price?: DecimalNullableFilter<"materials"> | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: IntNullableFilter<"materials"> | number | null
    minimum_stock?: IntNullableFilter<"materials"> | number | null
    supplier?: StringNullableFilter<"materials"> | string | null
    supplier_reference?: StringNullableFilter<"materials"> | string | null
    created_at?: DateTimeNullableFilter<"materials"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"materials"> | Date | string | null
    project_materials?: Project_materialsListRelationFilter
  }, "id" | "reference">

  export type materialsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    reference?: SortOrderInput | SortOrder
    unit?: SortOrder
    price?: SortOrderInput | SortOrder
    stock_quantity?: SortOrderInput | SortOrder
    minimum_stock?: SortOrderInput | SortOrder
    supplier?: SortOrderInput | SortOrder
    supplier_reference?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: materialsCountOrderByAggregateInput
    _avg?: materialsAvgOrderByAggregateInput
    _max?: materialsMaxOrderByAggregateInput
    _min?: materialsMinOrderByAggregateInput
    _sum?: materialsSumOrderByAggregateInput
  }

  export type materialsScalarWhereWithAggregatesInput = {
    AND?: materialsScalarWhereWithAggregatesInput | materialsScalarWhereWithAggregatesInput[]
    OR?: materialsScalarWhereWithAggregatesInput[]
    NOT?: materialsScalarWhereWithAggregatesInput | materialsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"materials"> | number
    name?: StringWithAggregatesFilter<"materials"> | string
    description?: StringNullableWithAggregatesFilter<"materials"> | string | null
    reference?: StringNullableWithAggregatesFilter<"materials"> | string | null
    unit?: StringWithAggregatesFilter<"materials"> | string
    price?: DecimalNullableWithAggregatesFilter<"materials"> | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: IntNullableWithAggregatesFilter<"materials"> | number | null
    minimum_stock?: IntNullableWithAggregatesFilter<"materials"> | number | null
    supplier?: StringNullableWithAggregatesFilter<"materials"> | string | null
    supplier_reference?: StringNullableWithAggregatesFilter<"materials"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"materials"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"materials"> | Date | string | null
  }

  export type project_materialsWhereInput = {
    AND?: project_materialsWhereInput | project_materialsWhereInput[]
    OR?: project_materialsWhereInput[]
    NOT?: project_materialsWhereInput | project_materialsWhereInput[]
    id?: IntFilter<"project_materials"> | number
    project_id?: IntFilter<"project_materials"> | number
    material_id?: IntFilter<"project_materials"> | number
    stage_id?: IntNullableFilter<"project_materials"> | number | null
    quantity_planned?: IntFilter<"project_materials"> | number
    quantity_used?: IntNullableFilter<"project_materials"> | number | null
    unit_price?: DecimalFilter<"project_materials"> | Decimal | DecimalJsLike | number | string
    notes?: StringNullableFilter<"project_materials"> | string | null
    created_at?: DateTimeNullableFilter<"project_materials"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_materials"> | Date | string | null
    materials?: XOR<MaterialsScalarRelationFilter, materialsWhereInput>
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }

  export type project_materialsOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    material_id?: SortOrder
    stage_id?: SortOrderInput | SortOrder
    quantity_planned?: SortOrder
    quantity_used?: SortOrderInput | SortOrder
    unit_price?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    materials?: materialsOrderByWithRelationInput
    projects?: projectsOrderByWithRelationInput
    project_stages?: project_stagesOrderByWithRelationInput
  }

  export type project_materialsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: project_materialsWhereInput | project_materialsWhereInput[]
    OR?: project_materialsWhereInput[]
    NOT?: project_materialsWhereInput | project_materialsWhereInput[]
    project_id?: IntFilter<"project_materials"> | number
    material_id?: IntFilter<"project_materials"> | number
    stage_id?: IntNullableFilter<"project_materials"> | number | null
    quantity_planned?: IntFilter<"project_materials"> | number
    quantity_used?: IntNullableFilter<"project_materials"> | number | null
    unit_price?: DecimalFilter<"project_materials"> | Decimal | DecimalJsLike | number | string
    notes?: StringNullableFilter<"project_materials"> | string | null
    created_at?: DateTimeNullableFilter<"project_materials"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_materials"> | Date | string | null
    materials?: XOR<MaterialsScalarRelationFilter, materialsWhereInput>
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }, "id">

  export type project_materialsOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    material_id?: SortOrder
    stage_id?: SortOrderInput | SortOrder
    quantity_planned?: SortOrder
    quantity_used?: SortOrderInput | SortOrder
    unit_price?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: project_materialsCountOrderByAggregateInput
    _avg?: project_materialsAvgOrderByAggregateInput
    _max?: project_materialsMaxOrderByAggregateInput
    _min?: project_materialsMinOrderByAggregateInput
    _sum?: project_materialsSumOrderByAggregateInput
  }

  export type project_materialsScalarWhereWithAggregatesInput = {
    AND?: project_materialsScalarWhereWithAggregatesInput | project_materialsScalarWhereWithAggregatesInput[]
    OR?: project_materialsScalarWhereWithAggregatesInput[]
    NOT?: project_materialsScalarWhereWithAggregatesInput | project_materialsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"project_materials"> | number
    project_id?: IntWithAggregatesFilter<"project_materials"> | number
    material_id?: IntWithAggregatesFilter<"project_materials"> | number
    stage_id?: IntNullableWithAggregatesFilter<"project_materials"> | number | null
    quantity_planned?: IntWithAggregatesFilter<"project_materials"> | number
    quantity_used?: IntNullableWithAggregatesFilter<"project_materials"> | number | null
    unit_price?: DecimalWithAggregatesFilter<"project_materials"> | Decimal | DecimalJsLike | number | string
    notes?: StringNullableWithAggregatesFilter<"project_materials"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"project_materials"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"project_materials"> | Date | string | null
  }

  export type project_mediaWhereInput = {
    AND?: project_mediaWhereInput | project_mediaWhereInput[]
    OR?: project_mediaWhereInput[]
    NOT?: project_mediaWhereInput | project_mediaWhereInput[]
    id?: IntFilter<"project_media"> | number
    project_id?: IntNullableFilter<"project_media"> | number | null
    stage_id?: IntNullableFilter<"project_media"> | number | null
    staff_id?: IntNullableFilter<"project_media"> | number | null
    media_type?: StringNullableFilter<"project_media"> | string | null
    file_path?: StringFilter<"project_media"> | string
    description?: StringNullableFilter<"project_media"> | string | null
    created_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_media"> | string | null
    projects?: XOR<ProjectsNullableScalarRelationFilter, projectsWhereInput> | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }

  export type project_mediaOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrderInput | SortOrder
    stage_id?: SortOrderInput | SortOrder
    staff_id?: SortOrderInput | SortOrder
    media_type?: SortOrderInput | SortOrder
    file_path?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    projects?: projectsOrderByWithRelationInput
    staff?: staffOrderByWithRelationInput
    project_stages?: project_stagesOrderByWithRelationInput
  }

  export type project_mediaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: project_mediaWhereInput | project_mediaWhereInput[]
    OR?: project_mediaWhereInput[]
    NOT?: project_mediaWhereInput | project_mediaWhereInput[]
    project_id?: IntNullableFilter<"project_media"> | number | null
    stage_id?: IntNullableFilter<"project_media"> | number | null
    staff_id?: IntNullableFilter<"project_media"> | number | null
    media_type?: StringNullableFilter<"project_media"> | string | null
    file_path?: StringFilter<"project_media"> | string
    description?: StringNullableFilter<"project_media"> | string | null
    created_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_media"> | string | null
    projects?: XOR<ProjectsNullableScalarRelationFilter, projectsWhereInput> | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }, "id">

  export type project_mediaOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrderInput | SortOrder
    stage_id?: SortOrderInput | SortOrder
    staff_id?: SortOrderInput | SortOrder
    media_type?: SortOrderInput | SortOrder
    file_path?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: project_mediaCountOrderByAggregateInput
    _avg?: project_mediaAvgOrderByAggregateInput
    _max?: project_mediaMaxOrderByAggregateInput
    _min?: project_mediaMinOrderByAggregateInput
    _sum?: project_mediaSumOrderByAggregateInput
  }

  export type project_mediaScalarWhereWithAggregatesInput = {
    AND?: project_mediaScalarWhereWithAggregatesInput | project_mediaScalarWhereWithAggregatesInput[]
    OR?: project_mediaScalarWhereWithAggregatesInput[]
    NOT?: project_mediaScalarWhereWithAggregatesInput | project_mediaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"project_media"> | number
    project_id?: IntNullableWithAggregatesFilter<"project_media"> | number | null
    stage_id?: IntNullableWithAggregatesFilter<"project_media"> | number | null
    staff_id?: IntNullableWithAggregatesFilter<"project_media"> | number | null
    media_type?: StringNullableWithAggregatesFilter<"project_media"> | string | null
    file_path?: StringWithAggregatesFilter<"project_media"> | string
    description?: StringNullableWithAggregatesFilter<"project_media"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"project_media"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"project_media"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"project_media"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"project_media"> | string | null
  }

  export type project_staffWhereInput = {
    AND?: project_staffWhereInput | project_staffWhereInput[]
    OR?: project_staffWhereInput[]
    NOT?: project_staffWhereInput | project_staffWhereInput[]
    id?: IntFilter<"project_staff"> | number
    project_id?: IntFilter<"project_staff"> | number
    staff_id?: IntFilter<"project_staff"> | number
    stage_id?: IntNullableFilter<"project_staff"> | number | null
    role_description?: StringNullableFilter<"project_staff"> | string | null
    start_date?: DateTimeFilter<"project_staff"> | Date | string
    end_date?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    hours_planned?: IntNullableFilter<"project_staff"> | number | null
    hours_worked?: IntNullableFilter<"project_staff"> | number | null
    created_at?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    staff?: XOR<StaffScalarRelationFilter, staffWhereInput>
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }

  export type project_staffOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrderInput | SortOrder
    role_description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    hours_planned?: SortOrderInput | SortOrder
    hours_worked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    projects?: projectsOrderByWithRelationInput
    staff?: staffOrderByWithRelationInput
    project_stages?: project_stagesOrderByWithRelationInput
  }

  export type project_staffWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: project_staffWhereInput | project_staffWhereInput[]
    OR?: project_staffWhereInput[]
    NOT?: project_staffWhereInput | project_staffWhereInput[]
    project_id?: IntFilter<"project_staff"> | number
    staff_id?: IntFilter<"project_staff"> | number
    stage_id?: IntNullableFilter<"project_staff"> | number | null
    role_description?: StringNullableFilter<"project_staff"> | string | null
    start_date?: DateTimeFilter<"project_staff"> | Date | string
    end_date?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    hours_planned?: IntNullableFilter<"project_staff"> | number | null
    hours_worked?: IntNullableFilter<"project_staff"> | number | null
    created_at?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    staff?: XOR<StaffScalarRelationFilter, staffWhereInput>
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }, "id">

  export type project_staffOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrderInput | SortOrder
    role_description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrderInput | SortOrder
    hours_planned?: SortOrderInput | SortOrder
    hours_worked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: project_staffCountOrderByAggregateInput
    _avg?: project_staffAvgOrderByAggregateInput
    _max?: project_staffMaxOrderByAggregateInput
    _min?: project_staffMinOrderByAggregateInput
    _sum?: project_staffSumOrderByAggregateInput
  }

  export type project_staffScalarWhereWithAggregatesInput = {
    AND?: project_staffScalarWhereWithAggregatesInput | project_staffScalarWhereWithAggregatesInput[]
    OR?: project_staffScalarWhereWithAggregatesInput[]
    NOT?: project_staffScalarWhereWithAggregatesInput | project_staffScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"project_staff"> | number
    project_id?: IntWithAggregatesFilter<"project_staff"> | number
    staff_id?: IntWithAggregatesFilter<"project_staff"> | number
    stage_id?: IntNullableWithAggregatesFilter<"project_staff"> | number | null
    role_description?: StringNullableWithAggregatesFilter<"project_staff"> | string | null
    start_date?: DateTimeWithAggregatesFilter<"project_staff"> | Date | string
    end_date?: DateTimeNullableWithAggregatesFilter<"project_staff"> | Date | string | null
    hours_planned?: IntNullableWithAggregatesFilter<"project_staff"> | number | null
    hours_worked?: IntNullableWithAggregatesFilter<"project_staff"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"project_staff"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"project_staff"> | Date | string | null
  }

  export type project_stagesWhereInput = {
    AND?: project_stagesWhereInput | project_stagesWhereInput[]
    OR?: project_stagesWhereInput[]
    NOT?: project_stagesWhereInput | project_stagesWhereInput[]
    id?: IntFilter<"project_stages"> | number
    project_id?: IntFilter<"project_stages"> | number
    name?: StringFilter<"project_stages"> | string
    description?: StringNullableFilter<"project_stages"> | string | null
    start_date?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    end_date?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    status?: StringNullableFilter<"project_stages"> | string | null
    order_index?: IntFilter<"project_stages"> | number
    estimated_duration?: IntNullableFilter<"project_stages"> | number | null
    actual_duration?: IntNullableFilter<"project_stages"> | number | null
    completion_percentage?: IntNullableFilter<"project_stages"> | number | null
    notes?: StringNullableFilter<"project_stages"> | string | null
    created_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_stages"> | string | null
    project_materials?: Project_materialsListRelationFilter
    project_media?: Project_mediaListRelationFilter
    project_staff?: Project_staffListRelationFilter
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    site_reports?: Site_reportsListRelationFilter
    stage_checklists?: Stage_checklistsListRelationFilter
    stage_tags?: Stage_tagsListRelationFilter
    tasks?: TasksListRelationFilter
    time_logs?: Time_logsListRelationFilter
  }

  export type project_stagesOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    order_index?: SortOrder
    estimated_duration?: SortOrderInput | SortOrder
    actual_duration?: SortOrderInput | SortOrder
    completion_percentage?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    project_materials?: project_materialsOrderByRelationAggregateInput
    project_media?: project_mediaOrderByRelationAggregateInput
    project_staff?: project_staffOrderByRelationAggregateInput
    projects?: projectsOrderByWithRelationInput
    site_reports?: site_reportsOrderByRelationAggregateInput
    stage_checklists?: stage_checklistsOrderByRelationAggregateInput
    stage_tags?: stage_tagsOrderByRelationAggregateInput
    tasks?: tasksOrderByRelationAggregateInput
    time_logs?: time_logsOrderByRelationAggregateInput
  }

  export type project_stagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: project_stagesWhereInput | project_stagesWhereInput[]
    OR?: project_stagesWhereInput[]
    NOT?: project_stagesWhereInput | project_stagesWhereInput[]
    project_id?: IntFilter<"project_stages"> | number
    name?: StringFilter<"project_stages"> | string
    description?: StringNullableFilter<"project_stages"> | string | null
    start_date?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    end_date?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    status?: StringNullableFilter<"project_stages"> | string | null
    order_index?: IntFilter<"project_stages"> | number
    estimated_duration?: IntNullableFilter<"project_stages"> | number | null
    actual_duration?: IntNullableFilter<"project_stages"> | number | null
    completion_percentage?: IntNullableFilter<"project_stages"> | number | null
    notes?: StringNullableFilter<"project_stages"> | string | null
    created_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_stages"> | string | null
    project_materials?: Project_materialsListRelationFilter
    project_media?: Project_mediaListRelationFilter
    project_staff?: Project_staffListRelationFilter
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    site_reports?: Site_reportsListRelationFilter
    stage_checklists?: Stage_checklistsListRelationFilter
    stage_tags?: Stage_tagsListRelationFilter
    tasks?: TasksListRelationFilter
    time_logs?: Time_logsListRelationFilter
  }, "id">

  export type project_stagesOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    order_index?: SortOrder
    estimated_duration?: SortOrderInput | SortOrder
    actual_duration?: SortOrderInput | SortOrder
    completion_percentage?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: project_stagesCountOrderByAggregateInput
    _avg?: project_stagesAvgOrderByAggregateInput
    _max?: project_stagesMaxOrderByAggregateInput
    _min?: project_stagesMinOrderByAggregateInput
    _sum?: project_stagesSumOrderByAggregateInput
  }

  export type project_stagesScalarWhereWithAggregatesInput = {
    AND?: project_stagesScalarWhereWithAggregatesInput | project_stagesScalarWhereWithAggregatesInput[]
    OR?: project_stagesScalarWhereWithAggregatesInput[]
    NOT?: project_stagesScalarWhereWithAggregatesInput | project_stagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"project_stages"> | number
    project_id?: IntWithAggregatesFilter<"project_stages"> | number
    name?: StringWithAggregatesFilter<"project_stages"> | string
    description?: StringNullableWithAggregatesFilter<"project_stages"> | string | null
    start_date?: DateTimeNullableWithAggregatesFilter<"project_stages"> | Date | string | null
    end_date?: DateTimeNullableWithAggregatesFilter<"project_stages"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"project_stages"> | string | null
    order_index?: IntWithAggregatesFilter<"project_stages"> | number
    estimated_duration?: IntNullableWithAggregatesFilter<"project_stages"> | number | null
    actual_duration?: IntNullableWithAggregatesFilter<"project_stages"> | number | null
    completion_percentage?: IntNullableWithAggregatesFilter<"project_stages"> | number | null
    notes?: StringNullableWithAggregatesFilter<"project_stages"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"project_stages"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"project_stages"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"project_stages"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"project_stages"> | string | null
  }

  export type project_tagsWhereInput = {
    AND?: project_tagsWhereInput | project_tagsWhereInput[]
    OR?: project_tagsWhereInput[]
    NOT?: project_tagsWhereInput | project_tagsWhereInput[]
    project_id?: IntFilter<"project_tags"> | number
    tag_id?: IntFilter<"project_tags"> | number
    created_at?: DateTimeNullableFilter<"project_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_tags"> | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }

  export type project_tagsOrderByWithRelationInput = {
    project_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    projects?: projectsOrderByWithRelationInput
    tags?: tagsOrderByWithRelationInput
  }

  export type project_tagsWhereUniqueInput = Prisma.AtLeast<{
    project_id_tag_id?: project_tagsProject_idTag_idCompoundUniqueInput
    AND?: project_tagsWhereInput | project_tagsWhereInput[]
    OR?: project_tagsWhereInput[]
    NOT?: project_tagsWhereInput | project_tagsWhereInput[]
    project_id?: IntFilter<"project_tags"> | number
    tag_id?: IntFilter<"project_tags"> | number
    created_at?: DateTimeNullableFilter<"project_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_tags"> | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }, "project_id_tag_id">

  export type project_tagsOrderByWithAggregationInput = {
    project_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: project_tagsCountOrderByAggregateInput
    _avg?: project_tagsAvgOrderByAggregateInput
    _max?: project_tagsMaxOrderByAggregateInput
    _min?: project_tagsMinOrderByAggregateInput
    _sum?: project_tagsSumOrderByAggregateInput
  }

  export type project_tagsScalarWhereWithAggregatesInput = {
    AND?: project_tagsScalarWhereWithAggregatesInput | project_tagsScalarWhereWithAggregatesInput[]
    OR?: project_tagsScalarWhereWithAggregatesInput[]
    NOT?: project_tagsScalarWhereWithAggregatesInput | project_tagsScalarWhereWithAggregatesInput[]
    project_id?: IntWithAggregatesFilter<"project_tags"> | number
    tag_id?: IntWithAggregatesFilter<"project_tags"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"project_tags"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"project_tags"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"project_tags"> | string | null
  }

  export type projectsWhereInput = {
    AND?: projectsWhereInput | projectsWhereInput[]
    OR?: projectsWhereInput[]
    NOT?: projectsWhereInput | projectsWhereInput[]
    id?: IntFilter<"projects"> | number
    reference?: StringFilter<"projects"> | string
    name?: StringFilter<"projects"> | string
    description?: StringNullableFilter<"projects"> | string | null
    client_id?: IntFilter<"projects"> | number
    address_id?: IntNullableFilter<"projects"> | number | null
    status?: Enumproject_statusNullableFilter<"projects"> | $Enums.project_status | null
    start_date?: DateTimeNullableFilter<"projects"> | Date | string | null
    end_date?: DateTimeNullableFilter<"projects"> | Date | string | null
    estimated_duration?: IntNullableFilter<"projects"> | number | null
    budget?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    actual_cost?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    margin?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    priority?: IntNullableFilter<"projects"> | number | null
    notes?: StringNullableFilter<"projects"> | string | null
    created_at?: DateTimeNullableFilter<"projects"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"projects"> | Date | string | null
    documents?: DocumentsListRelationFilter
    events?: EventsListRelationFilter
    project_materials?: Project_materialsListRelationFilter
    project_media?: Project_mediaListRelationFilter
    project_staff?: Project_staffListRelationFilter
    project_stages?: Project_stagesListRelationFilter
    project_tags?: Project_tagsListRelationFilter
    addresses?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
    site_reports?: Site_reportsListRelationFilter
    time_logs?: Time_logsListRelationFilter
  }

  export type projectsOrderByWithRelationInput = {
    id?: SortOrder
    reference?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    client_id?: SortOrder
    address_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    estimated_duration?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    actual_cost?: SortOrderInput | SortOrder
    margin?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    documents?: documentsOrderByRelationAggregateInput
    events?: eventsOrderByRelationAggregateInput
    project_materials?: project_materialsOrderByRelationAggregateInput
    project_media?: project_mediaOrderByRelationAggregateInput
    project_staff?: project_staffOrderByRelationAggregateInput
    project_stages?: project_stagesOrderByRelationAggregateInput
    project_tags?: project_tagsOrderByRelationAggregateInput
    addresses?: addressesOrderByWithRelationInput
    clients?: clientsOrderByWithRelationInput
    site_reports?: site_reportsOrderByRelationAggregateInput
    time_logs?: time_logsOrderByRelationAggregateInput
  }

  export type projectsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    reference?: string
    AND?: projectsWhereInput | projectsWhereInput[]
    OR?: projectsWhereInput[]
    NOT?: projectsWhereInput | projectsWhereInput[]
    name?: StringFilter<"projects"> | string
    description?: StringNullableFilter<"projects"> | string | null
    client_id?: IntFilter<"projects"> | number
    address_id?: IntNullableFilter<"projects"> | number | null
    status?: Enumproject_statusNullableFilter<"projects"> | $Enums.project_status | null
    start_date?: DateTimeNullableFilter<"projects"> | Date | string | null
    end_date?: DateTimeNullableFilter<"projects"> | Date | string | null
    estimated_duration?: IntNullableFilter<"projects"> | number | null
    budget?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    actual_cost?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    margin?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    priority?: IntNullableFilter<"projects"> | number | null
    notes?: StringNullableFilter<"projects"> | string | null
    created_at?: DateTimeNullableFilter<"projects"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"projects"> | Date | string | null
    documents?: DocumentsListRelationFilter
    events?: EventsListRelationFilter
    project_materials?: Project_materialsListRelationFilter
    project_media?: Project_mediaListRelationFilter
    project_staff?: Project_staffListRelationFilter
    project_stages?: Project_stagesListRelationFilter
    project_tags?: Project_tagsListRelationFilter
    addresses?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
    site_reports?: Site_reportsListRelationFilter
    time_logs?: Time_logsListRelationFilter
  }, "id" | "reference">

  export type projectsOrderByWithAggregationInput = {
    id?: SortOrder
    reference?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    client_id?: SortOrder
    address_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    estimated_duration?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    actual_cost?: SortOrderInput | SortOrder
    margin?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: projectsCountOrderByAggregateInput
    _avg?: projectsAvgOrderByAggregateInput
    _max?: projectsMaxOrderByAggregateInput
    _min?: projectsMinOrderByAggregateInput
    _sum?: projectsSumOrderByAggregateInput
  }

  export type projectsScalarWhereWithAggregatesInput = {
    AND?: projectsScalarWhereWithAggregatesInput | projectsScalarWhereWithAggregatesInput[]
    OR?: projectsScalarWhereWithAggregatesInput[]
    NOT?: projectsScalarWhereWithAggregatesInput | projectsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"projects"> | number
    reference?: StringWithAggregatesFilter<"projects"> | string
    name?: StringWithAggregatesFilter<"projects"> | string
    description?: StringNullableWithAggregatesFilter<"projects"> | string | null
    client_id?: IntWithAggregatesFilter<"projects"> | number
    address_id?: IntNullableWithAggregatesFilter<"projects"> | number | null
    status?: Enumproject_statusNullableWithAggregatesFilter<"projects"> | $Enums.project_status | null
    start_date?: DateTimeNullableWithAggregatesFilter<"projects"> | Date | string | null
    end_date?: DateTimeNullableWithAggregatesFilter<"projects"> | Date | string | null
    estimated_duration?: IntNullableWithAggregatesFilter<"projects"> | number | null
    budget?: DecimalNullableWithAggregatesFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    actual_cost?: DecimalNullableWithAggregatesFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    margin?: DecimalNullableWithAggregatesFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    priority?: IntNullableWithAggregatesFilter<"projects"> | number | null
    notes?: StringNullableWithAggregatesFilter<"projects"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"projects"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"projects"> | Date | string | null
  }

  export type rolesWhereInput = {
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    id?: IntFilter<"roles"> | number
    name?: StringFilter<"roles"> | string
    description?: StringNullableFilter<"roles"> | string | null
    created_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    staff?: StaffListRelationFilter
  }

  export type rolesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    staff?: staffOrderByRelationAggregateInput
  }

  export type rolesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    description?: StringNullableFilter<"roles"> | string | null
    created_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    staff?: StaffListRelationFilter
  }, "id" | "name">

  export type rolesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: rolesCountOrderByAggregateInput
    _avg?: rolesAvgOrderByAggregateInput
    _max?: rolesMaxOrderByAggregateInput
    _min?: rolesMinOrderByAggregateInput
    _sum?: rolesSumOrderByAggregateInput
  }

  export type rolesScalarWhereWithAggregatesInput = {
    AND?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    OR?: rolesScalarWhereWithAggregatesInput[]
    NOT?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"roles"> | number
    name?: StringWithAggregatesFilter<"roles"> | string
    description?: StringNullableWithAggregatesFilter<"roles"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"roles"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"roles"> | Date | string | null
  }

  export type site_reportsWhereInput = {
    AND?: site_reportsWhereInput | site_reportsWhereInput[]
    OR?: site_reportsWhereInput[]
    NOT?: site_reportsWhereInput | site_reportsWhereInput[]
    id?: IntFilter<"site_reports"> | number
    project_id?: IntFilter<"site_reports"> | number
    staff_id?: IntNullableFilter<"site_reports"> | number | null
    stage_id?: IntNullableFilter<"site_reports"> | number | null
    report_type?: StringNullableFilter<"site_reports"> | string | null
    description?: StringFilter<"site_reports"> | string
    status?: StringNullableFilter<"site_reports"> | string | null
    created_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"site_reports"> | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }

  export type site_reportsOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrderInput | SortOrder
    stage_id?: SortOrderInput | SortOrder
    report_type?: SortOrderInput | SortOrder
    description?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    projects?: projectsOrderByWithRelationInput
    staff?: staffOrderByWithRelationInput
    project_stages?: project_stagesOrderByWithRelationInput
  }

  export type site_reportsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: site_reportsWhereInput | site_reportsWhereInput[]
    OR?: site_reportsWhereInput[]
    NOT?: site_reportsWhereInput | site_reportsWhereInput[]
    project_id?: IntFilter<"site_reports"> | number
    staff_id?: IntNullableFilter<"site_reports"> | number | null
    stage_id?: IntNullableFilter<"site_reports"> | number | null
    report_type?: StringNullableFilter<"site_reports"> | string | null
    description?: StringFilter<"site_reports"> | string
    status?: StringNullableFilter<"site_reports"> | string | null
    created_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"site_reports"> | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }, "id">

  export type site_reportsOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrderInput | SortOrder
    stage_id?: SortOrderInput | SortOrder
    report_type?: SortOrderInput | SortOrder
    description?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: site_reportsCountOrderByAggregateInput
    _avg?: site_reportsAvgOrderByAggregateInput
    _max?: site_reportsMaxOrderByAggregateInput
    _min?: site_reportsMinOrderByAggregateInput
    _sum?: site_reportsSumOrderByAggregateInput
  }

  export type site_reportsScalarWhereWithAggregatesInput = {
    AND?: site_reportsScalarWhereWithAggregatesInput | site_reportsScalarWhereWithAggregatesInput[]
    OR?: site_reportsScalarWhereWithAggregatesInput[]
    NOT?: site_reportsScalarWhereWithAggregatesInput | site_reportsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"site_reports"> | number
    project_id?: IntWithAggregatesFilter<"site_reports"> | number
    staff_id?: IntNullableWithAggregatesFilter<"site_reports"> | number | null
    stage_id?: IntNullableWithAggregatesFilter<"site_reports"> | number | null
    report_type?: StringNullableWithAggregatesFilter<"site_reports"> | string | null
    description?: StringWithAggregatesFilter<"site_reports"> | string
    status?: StringNullableWithAggregatesFilter<"site_reports"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"site_reports"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"site_reports"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"site_reports"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"site_reports"> | string | null
  }

  export type staffWhereInput = {
    AND?: staffWhereInput | staffWhereInput[]
    OR?: staffWhereInput[]
    NOT?: staffWhereInput | staffWhereInput[]
    id?: IntFilter<"staff"> | number
    firstname?: StringFilter<"staff"> | string
    lastname?: StringFilter<"staff"> | string
    email?: StringFilter<"staff"> | string
    role_id?: IntFilter<"staff"> | number
    phone?: StringNullableFilter<"staff"> | string | null
    mobile?: StringNullableFilter<"staff"> | string | null
    address_id?: IntNullableFilter<"staff"> | number | null
    hire_date?: DateTimeFilter<"staff"> | Date | string
    is_available?: BoolNullableFilter<"staff"> | boolean | null
    created_at?: DateTimeNullableFilter<"staff"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"staff"> | Date | string | null
    events?: EventsListRelationFilter
    project_media?: Project_mediaListRelationFilter
    project_staff?: Project_staffListRelationFilter
    site_reports?: Site_reportsListRelationFilter
    addresses?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    stage_checklists?: Stage_checklistsListRelationFilter
    tasks?: TasksListRelationFilter
    time_logs?: Time_logsListRelationFilter
  }

  export type staffOrderByWithRelationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    role_id?: SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    address_id?: SortOrderInput | SortOrder
    hire_date?: SortOrder
    is_available?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    events?: eventsOrderByRelationAggregateInput
    project_media?: project_mediaOrderByRelationAggregateInput
    project_staff?: project_staffOrderByRelationAggregateInput
    site_reports?: site_reportsOrderByRelationAggregateInput
    addresses?: addressesOrderByWithRelationInput
    roles?: rolesOrderByWithRelationInput
    stage_checklists?: stage_checklistsOrderByRelationAggregateInput
    tasks?: tasksOrderByRelationAggregateInput
    time_logs?: time_logsOrderByRelationAggregateInput
  }

  export type staffWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: staffWhereInput | staffWhereInput[]
    OR?: staffWhereInput[]
    NOT?: staffWhereInput | staffWhereInput[]
    firstname?: StringFilter<"staff"> | string
    lastname?: StringFilter<"staff"> | string
    role_id?: IntFilter<"staff"> | number
    phone?: StringNullableFilter<"staff"> | string | null
    mobile?: StringNullableFilter<"staff"> | string | null
    address_id?: IntNullableFilter<"staff"> | number | null
    hire_date?: DateTimeFilter<"staff"> | Date | string
    is_available?: BoolNullableFilter<"staff"> | boolean | null
    created_at?: DateTimeNullableFilter<"staff"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"staff"> | Date | string | null
    events?: EventsListRelationFilter
    project_media?: Project_mediaListRelationFilter
    project_staff?: Project_staffListRelationFilter
    site_reports?: Site_reportsListRelationFilter
    addresses?: XOR<AddressesNullableScalarRelationFilter, addressesWhereInput> | null
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    stage_checklists?: Stage_checklistsListRelationFilter
    tasks?: TasksListRelationFilter
    time_logs?: Time_logsListRelationFilter
  }, "id" | "email">

  export type staffOrderByWithAggregationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    role_id?: SortOrder
    phone?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    address_id?: SortOrderInput | SortOrder
    hire_date?: SortOrder
    is_available?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: staffCountOrderByAggregateInput
    _avg?: staffAvgOrderByAggregateInput
    _max?: staffMaxOrderByAggregateInput
    _min?: staffMinOrderByAggregateInput
    _sum?: staffSumOrderByAggregateInput
  }

  export type staffScalarWhereWithAggregatesInput = {
    AND?: staffScalarWhereWithAggregatesInput | staffScalarWhereWithAggregatesInput[]
    OR?: staffScalarWhereWithAggregatesInput[]
    NOT?: staffScalarWhereWithAggregatesInput | staffScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"staff"> | number
    firstname?: StringWithAggregatesFilter<"staff"> | string
    lastname?: StringWithAggregatesFilter<"staff"> | string
    email?: StringWithAggregatesFilter<"staff"> | string
    role_id?: IntWithAggregatesFilter<"staff"> | number
    phone?: StringNullableWithAggregatesFilter<"staff"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"staff"> | string | null
    address_id?: IntNullableWithAggregatesFilter<"staff"> | number | null
    hire_date?: DateTimeWithAggregatesFilter<"staff"> | Date | string
    is_available?: BoolNullableWithAggregatesFilter<"staff"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"staff"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"staff"> | Date | string | null
  }

  export type stage_checklistsWhereInput = {
    AND?: stage_checklistsWhereInput | stage_checklistsWhereInput[]
    OR?: stage_checklistsWhereInput[]
    NOT?: stage_checklistsWhereInput | stage_checklistsWhereInput[]
    id?: IntFilter<"stage_checklists"> | number
    stage_id?: IntFilter<"stage_checklists"> | number
    label?: StringFilter<"stage_checklists"> | string
    is_done?: BoolNullableFilter<"stage_checklists"> | boolean | null
    staff_id?: IntNullableFilter<"stage_checklists"> | number | null
    comment?: StringNullableFilter<"stage_checklists"> | string | null
    created_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"stage_checklists"> | string | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesScalarRelationFilter, project_stagesWhereInput>
  }

  export type stage_checklistsOrderByWithRelationInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    is_done?: SortOrderInput | SortOrder
    staff_id?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    staff?: staffOrderByWithRelationInput
    project_stages?: project_stagesOrderByWithRelationInput
  }

  export type stage_checklistsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: stage_checklistsWhereInput | stage_checklistsWhereInput[]
    OR?: stage_checklistsWhereInput[]
    NOT?: stage_checklistsWhereInput | stage_checklistsWhereInput[]
    stage_id?: IntFilter<"stage_checklists"> | number
    label?: StringFilter<"stage_checklists"> | string
    is_done?: BoolNullableFilter<"stage_checklists"> | boolean | null
    staff_id?: IntNullableFilter<"stage_checklists"> | number | null
    comment?: StringNullableFilter<"stage_checklists"> | string | null
    created_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"stage_checklists"> | string | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesScalarRelationFilter, project_stagesWhereInput>
  }, "id">

  export type stage_checklistsOrderByWithAggregationInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    is_done?: SortOrderInput | SortOrder
    staff_id?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: stage_checklistsCountOrderByAggregateInput
    _avg?: stage_checklistsAvgOrderByAggregateInput
    _max?: stage_checklistsMaxOrderByAggregateInput
    _min?: stage_checklistsMinOrderByAggregateInput
    _sum?: stage_checklistsSumOrderByAggregateInput
  }

  export type stage_checklistsScalarWhereWithAggregatesInput = {
    AND?: stage_checklistsScalarWhereWithAggregatesInput | stage_checklistsScalarWhereWithAggregatesInput[]
    OR?: stage_checklistsScalarWhereWithAggregatesInput[]
    NOT?: stage_checklistsScalarWhereWithAggregatesInput | stage_checklistsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"stage_checklists"> | number
    stage_id?: IntWithAggregatesFilter<"stage_checklists"> | number
    label?: StringWithAggregatesFilter<"stage_checklists"> | string
    is_done?: BoolNullableWithAggregatesFilter<"stage_checklists"> | boolean | null
    staff_id?: IntNullableWithAggregatesFilter<"stage_checklists"> | number | null
    comment?: StringNullableWithAggregatesFilter<"stage_checklists"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"stage_checklists"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stage_checklists"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"stage_checklists"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"stage_checklists"> | string | null
  }

  export type stage_tagsWhereInput = {
    AND?: stage_tagsWhereInput | stage_tagsWhereInput[]
    OR?: stage_tagsWhereInput[]
    NOT?: stage_tagsWhereInput | stage_tagsWhereInput[]
    stage_id?: IntFilter<"stage_tags"> | number
    tag_id?: IntFilter<"stage_tags"> | number
    created_at?: DateTimeNullableFilter<"stage_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"stage_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"stage_tags"> | string | null
    project_stages?: XOR<Project_stagesScalarRelationFilter, project_stagesWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }

  export type stage_tagsOrderByWithRelationInput = {
    stage_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    project_stages?: project_stagesOrderByWithRelationInput
    tags?: tagsOrderByWithRelationInput
  }

  export type stage_tagsWhereUniqueInput = Prisma.AtLeast<{
    stage_id_tag_id?: stage_tagsStage_idTag_idCompoundUniqueInput
    AND?: stage_tagsWhereInput | stage_tagsWhereInput[]
    OR?: stage_tagsWhereInput[]
    NOT?: stage_tagsWhereInput | stage_tagsWhereInput[]
    stage_id?: IntFilter<"stage_tags"> | number
    tag_id?: IntFilter<"stage_tags"> | number
    created_at?: DateTimeNullableFilter<"stage_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"stage_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"stage_tags"> | string | null
    project_stages?: XOR<Project_stagesScalarRelationFilter, project_stagesWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }, "stage_id_tag_id">

  export type stage_tagsOrderByWithAggregationInput = {
    stage_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: stage_tagsCountOrderByAggregateInput
    _avg?: stage_tagsAvgOrderByAggregateInput
    _max?: stage_tagsMaxOrderByAggregateInput
    _min?: stage_tagsMinOrderByAggregateInput
    _sum?: stage_tagsSumOrderByAggregateInput
  }

  export type stage_tagsScalarWhereWithAggregatesInput = {
    AND?: stage_tagsScalarWhereWithAggregatesInput | stage_tagsScalarWhereWithAggregatesInput[]
    OR?: stage_tagsScalarWhereWithAggregatesInput[]
    NOT?: stage_tagsScalarWhereWithAggregatesInput | stage_tagsScalarWhereWithAggregatesInput[]
    stage_id?: IntWithAggregatesFilter<"stage_tags"> | number
    tag_id?: IntWithAggregatesFilter<"stage_tags"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"stage_tags"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"stage_tags"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"stage_tags"> | string | null
  }

  export type tagsWhereInput = {
    AND?: tagsWhereInput | tagsWhereInput[]
    OR?: tagsWhereInput[]
    NOT?: tagsWhereInput | tagsWhereInput[]
    id?: IntFilter<"tags"> | number
    label?: StringFilter<"tags"> | string
    color?: StringNullableFilter<"tags"> | string | null
    created_at?: DateTimeNullableFilter<"tags"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"tags"> | Date | string | null
    document_tags?: Document_tagsListRelationFilter
    project_tags?: Project_tagsListRelationFilter
    stage_tags?: Stage_tagsListRelationFilter
  }

  export type tagsOrderByWithRelationInput = {
    id?: SortOrder
    label?: SortOrder
    color?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    document_tags?: document_tagsOrderByRelationAggregateInput
    project_tags?: project_tagsOrderByRelationAggregateInput
    stage_tags?: stage_tagsOrderByRelationAggregateInput
  }

  export type tagsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    label?: string
    AND?: tagsWhereInput | tagsWhereInput[]
    OR?: tagsWhereInput[]
    NOT?: tagsWhereInput | tagsWhereInput[]
    color?: StringNullableFilter<"tags"> | string | null
    created_at?: DateTimeNullableFilter<"tags"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"tags"> | Date | string | null
    document_tags?: Document_tagsListRelationFilter
    project_tags?: Project_tagsListRelationFilter
    stage_tags?: Stage_tagsListRelationFilter
  }, "id" | "label">

  export type tagsOrderByWithAggregationInput = {
    id?: SortOrder
    label?: SortOrder
    color?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: tagsCountOrderByAggregateInput
    _avg?: tagsAvgOrderByAggregateInput
    _max?: tagsMaxOrderByAggregateInput
    _min?: tagsMinOrderByAggregateInput
    _sum?: tagsSumOrderByAggregateInput
  }

  export type tagsScalarWhereWithAggregatesInput = {
    AND?: tagsScalarWhereWithAggregatesInput | tagsScalarWhereWithAggregatesInput[]
    OR?: tagsScalarWhereWithAggregatesInput[]
    NOT?: tagsScalarWhereWithAggregatesInput | tagsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tags"> | number
    label?: StringWithAggregatesFilter<"tags"> | string
    color?: StringNullableWithAggregatesFilter<"tags"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"tags"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"tags"> | Date | string | null
  }

  export type tasksWhereInput = {
    AND?: tasksWhereInput | tasksWhereInput[]
    OR?: tasksWhereInput[]
    NOT?: tasksWhereInput | tasksWhereInput[]
    id?: IntFilter<"tasks"> | number
    stage_id?: IntFilter<"tasks"> | number
    label?: StringFilter<"tasks"> | string
    description?: StringNullableFilter<"tasks"> | string | null
    assigned_to?: IntNullableFilter<"tasks"> | number | null
    due_date?: DateTimeNullableFilter<"tasks"> | Date | string | null
    status?: StringNullableFilter<"tasks"> | string | null
    priority?: IntNullableFilter<"tasks"> | number | null
    created_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"tasks"> | string | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesScalarRelationFilter, project_stagesWhereInput>
  }

  export type tasksOrderByWithRelationInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    description?: SortOrderInput | SortOrder
    assigned_to?: SortOrderInput | SortOrder
    due_date?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    staff?: staffOrderByWithRelationInput
    project_stages?: project_stagesOrderByWithRelationInput
  }

  export type tasksWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tasksWhereInput | tasksWhereInput[]
    OR?: tasksWhereInput[]
    NOT?: tasksWhereInput | tasksWhereInput[]
    stage_id?: IntFilter<"tasks"> | number
    label?: StringFilter<"tasks"> | string
    description?: StringNullableFilter<"tasks"> | string | null
    assigned_to?: IntNullableFilter<"tasks"> | number | null
    due_date?: DateTimeNullableFilter<"tasks"> | Date | string | null
    status?: StringNullableFilter<"tasks"> | string | null
    priority?: IntNullableFilter<"tasks"> | number | null
    created_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"tasks"> | string | null
    staff?: XOR<StaffNullableScalarRelationFilter, staffWhereInput> | null
    project_stages?: XOR<Project_stagesScalarRelationFilter, project_stagesWhereInput>
  }, "id">

  export type tasksOrderByWithAggregationInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    description?: SortOrderInput | SortOrder
    assigned_to?: SortOrderInput | SortOrder
    due_date?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: tasksCountOrderByAggregateInput
    _avg?: tasksAvgOrderByAggregateInput
    _max?: tasksMaxOrderByAggregateInput
    _min?: tasksMinOrderByAggregateInput
    _sum?: tasksSumOrderByAggregateInput
  }

  export type tasksScalarWhereWithAggregatesInput = {
    AND?: tasksScalarWhereWithAggregatesInput | tasksScalarWhereWithAggregatesInput[]
    OR?: tasksScalarWhereWithAggregatesInput[]
    NOT?: tasksScalarWhereWithAggregatesInput | tasksScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tasks"> | number
    stage_id?: IntWithAggregatesFilter<"tasks"> | number
    label?: StringWithAggregatesFilter<"tasks"> | string
    description?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    assigned_to?: IntNullableWithAggregatesFilter<"tasks"> | number | null
    due_date?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    priority?: IntNullableWithAggregatesFilter<"tasks"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"tasks"> | string | null
  }

  export type time_logsWhereInput = {
    AND?: time_logsWhereInput | time_logsWhereInput[]
    OR?: time_logsWhereInput[]
    NOT?: time_logsWhereInput | time_logsWhereInput[]
    id?: IntFilter<"time_logs"> | number
    staff_id?: IntFilter<"time_logs"> | number
    project_id?: IntFilter<"time_logs"> | number
    stage_id?: IntNullableFilter<"time_logs"> | number | null
    check_in?: DateTimeFilter<"time_logs"> | Date | string
    check_out?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    comment?: StringNullableFilter<"time_logs"> | string | null
    gps_lat?: DecimalNullableFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    gps_long?: DecimalNullableFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"time_logs"> | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    staff?: XOR<StaffScalarRelationFilter, staffWhereInput>
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }

  export type time_logsOrderByWithRelationInput = {
    id?: SortOrder
    staff_id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrderInput | SortOrder
    check_in?: SortOrder
    check_out?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    gps_lat?: SortOrderInput | SortOrder
    gps_long?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    projects?: projectsOrderByWithRelationInput
    staff?: staffOrderByWithRelationInput
    project_stages?: project_stagesOrderByWithRelationInput
  }

  export type time_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: time_logsWhereInput | time_logsWhereInput[]
    OR?: time_logsWhereInput[]
    NOT?: time_logsWhereInput | time_logsWhereInput[]
    staff_id?: IntFilter<"time_logs"> | number
    project_id?: IntFilter<"time_logs"> | number
    stage_id?: IntNullableFilter<"time_logs"> | number | null
    check_in?: DateTimeFilter<"time_logs"> | Date | string
    check_out?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    comment?: StringNullableFilter<"time_logs"> | string | null
    gps_lat?: DecimalNullableFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    gps_long?: DecimalNullableFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"time_logs"> | string | null
    projects?: XOR<ProjectsScalarRelationFilter, projectsWhereInput>
    staff?: XOR<StaffScalarRelationFilter, staffWhereInput>
    project_stages?: XOR<Project_stagesNullableScalarRelationFilter, project_stagesWhereInput> | null
  }, "id">

  export type time_logsOrderByWithAggregationInput = {
    id?: SortOrder
    staff_id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrderInput | SortOrder
    check_in?: SortOrder
    check_out?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    gps_lat?: SortOrderInput | SortOrder
    gps_long?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    synced_at?: SortOrderInput | SortOrder
    synced_by_device_id?: SortOrderInput | SortOrder
    _count?: time_logsCountOrderByAggregateInput
    _avg?: time_logsAvgOrderByAggregateInput
    _max?: time_logsMaxOrderByAggregateInput
    _min?: time_logsMinOrderByAggregateInput
    _sum?: time_logsSumOrderByAggregateInput
  }

  export type time_logsScalarWhereWithAggregatesInput = {
    AND?: time_logsScalarWhereWithAggregatesInput | time_logsScalarWhereWithAggregatesInput[]
    OR?: time_logsScalarWhereWithAggregatesInput[]
    NOT?: time_logsScalarWhereWithAggregatesInput | time_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"time_logs"> | number
    staff_id?: IntWithAggregatesFilter<"time_logs"> | number
    project_id?: IntWithAggregatesFilter<"time_logs"> | number
    stage_id?: IntNullableWithAggregatesFilter<"time_logs"> | number | null
    check_in?: DateTimeWithAggregatesFilter<"time_logs"> | Date | string
    check_out?: DateTimeNullableWithAggregatesFilter<"time_logs"> | Date | string | null
    comment?: StringNullableWithAggregatesFilter<"time_logs"> | string | null
    gps_lat?: DecimalNullableWithAggregatesFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    gps_long?: DecimalNullableWithAggregatesFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"time_logs"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"time_logs"> | Date | string | null
    synced_at?: DateTimeNullableWithAggregatesFilter<"time_logs"> | Date | string | null
    synced_by_device_id?: StringNullableWithAggregatesFilter<"time_logs"> | string | null
  }

  export type addressesCreateInput = {
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedManyWithoutAddressesInput
    projects?: projectsCreateNestedManyWithoutAddressesInput
    staff?: staffCreateNestedManyWithoutAddressesInput
  }

  export type addressesUncheckedCreateInput = {
    id?: number
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsUncheckedCreateNestedManyWithoutAddressesInput
    projects?: projectsUncheckedCreateNestedManyWithoutAddressesInput
    staff?: staffUncheckedCreateNestedManyWithoutAddressesInput
  }

  export type addressesUpdateInput = {
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateManyWithoutAddressesNestedInput
    projects?: projectsUpdateManyWithoutAddressesNestedInput
    staff?: staffUpdateManyWithoutAddressesNestedInput
  }

  export type addressesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUncheckedUpdateManyWithoutAddressesNestedInput
    projects?: projectsUncheckedUpdateManyWithoutAddressesNestedInput
    staff?: staffUncheckedUpdateManyWithoutAddressesNestedInput
  }

  export type addressesCreateManyInput = {
    id?: number
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type addressesUpdateManyMutationInput = {
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type addressesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type clientsCreateInput = {
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    addresses?: addressesCreateNestedOneWithoutClientsInput
    documents?: documentsCreateNestedManyWithoutClientsInput
    events?: eventsCreateNestedManyWithoutClientsInput
    projects?: projectsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateInput = {
    id?: number
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutClientsInput
    events?: eventsUncheckedCreateNestedManyWithoutClientsInput
    projects?: projectsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsUpdateInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    addresses?: addressesUpdateOneWithoutClientsNestedInput
    documents?: documentsUpdateManyWithoutClientsNestedInput
    events?: eventsUpdateManyWithoutClientsNestedInput
    projects?: projectsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutClientsNestedInput
    events?: eventsUncheckedUpdateManyWithoutClientsNestedInput
    projects?: projectsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type clientsCreateManyInput = {
    id?: number
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type clientsUpdateManyMutationInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type clientsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type document_tagsCreateInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    documents: documentsCreateNestedOneWithoutDocument_tagsInput
    tags: tagsCreateNestedOneWithoutDocument_tagsInput
  }

  export type document_tagsUncheckedCreateInput = {
    document_id: number
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type document_tagsUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: documentsUpdateOneRequiredWithoutDocument_tagsNestedInput
    tags?: tagsUpdateOneRequiredWithoutDocument_tagsNestedInput
  }

  export type document_tagsUncheckedUpdateInput = {
    document_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_tagsCreateManyInput = {
    document_id: number
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type document_tagsUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_tagsUncheckedUpdateManyInput = {
    document_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type documentsCreateInput = {
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsCreateNestedManyWithoutDocumentsInput
    clients?: clientsCreateNestedOneWithoutDocumentsInput
    projects: projectsCreateNestedOneWithoutDocumentsInput
  }

  export type documentsUncheckedCreateInput = {
    id?: number
    project_id: number
    client_id?: number | null
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsUncheckedCreateNestedManyWithoutDocumentsInput
  }

  export type documentsUpdateInput = {
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUpdateManyWithoutDocumentsNestedInput
    clients?: clientsUpdateOneWithoutDocumentsNestedInput
    projects?: projectsUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type documentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUncheckedUpdateManyWithoutDocumentsNestedInput
  }

  export type documentsCreateManyInput = {
    id?: number
    project_id: number
    client_id?: number | null
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type documentsUpdateManyMutationInput = {
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsCreateInput = {
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutEventsInput
    projects?: projectsCreateNestedOneWithoutEventsInput
    staff?: staffCreateNestedOneWithoutEventsInput
  }

  export type eventsUncheckedCreateInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    project_id?: number | null
    staff_id?: number | null
    client_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type eventsUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutEventsNestedInput
    projects?: projectsUpdateOneWithoutEventsNestedInput
    staff?: staffUpdateOneWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsCreateManyInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    project_id?: number | null
    staff_id?: number | null
    client_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type eventsUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type materialsCreateInput = {
    name: string
    description?: string | null
    reference?: string | null
    unit: string
    price?: Decimal | DecimalJsLike | number | string | null
    stock_quantity?: number | null
    minimum_stock?: number | null
    supplier?: string | null
    supplier_reference?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    project_materials?: project_materialsCreateNestedManyWithoutMaterialsInput
  }

  export type materialsUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    reference?: string | null
    unit: string
    price?: Decimal | DecimalJsLike | number | string | null
    stock_quantity?: number | null
    minimum_stock?: number | null
    supplier?: string | null
    supplier_reference?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutMaterialsInput
  }

  export type materialsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: NullableIntFieldUpdateOperationsInput | number | null
    minimum_stock?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_reference?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_materials?: project_materialsUpdateManyWithoutMaterialsNestedInput
  }

  export type materialsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: NullableIntFieldUpdateOperationsInput | number | null
    minimum_stock?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_reference?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutMaterialsNestedInput
  }

  export type materialsCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    reference?: string | null
    unit: string
    price?: Decimal | DecimalJsLike | number | string | null
    stock_quantity?: number | null
    minimum_stock?: number | null
    supplier?: string | null
    supplier_reference?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type materialsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: NullableIntFieldUpdateOperationsInput | number | null
    minimum_stock?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_reference?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type materialsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: NullableIntFieldUpdateOperationsInput | number | null
    minimum_stock?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_reference?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsCreateInput = {
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    materials: materialsCreateNestedOneWithoutProject_materialsInput
    projects: projectsCreateNestedOneWithoutProject_materialsInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_materialsInput
  }

  export type project_materialsUncheckedCreateInput = {
    id?: number
    project_id: number
    material_id: number
    stage_id?: number | null
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_materialsUpdateInput = {
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    materials?: materialsUpdateOneRequiredWithoutProject_materialsNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_materialsNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_materialsNestedInput
  }

  export type project_materialsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    material_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsCreateManyInput = {
    id?: number
    project_id: number
    material_id: number
    stage_id?: number | null
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_materialsUpdateManyMutationInput = {
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    material_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_mediaCreateInput = {
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects?: projectsCreateNestedOneWithoutProject_mediaInput
    staff?: staffCreateNestedOneWithoutProject_mediaInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_mediaInput
  }

  export type project_mediaUncheckedCreateInput = {
    id?: number
    project_id?: number | null
    stage_id?: number | null
    staff_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_mediaUpdateInput = {
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneWithoutProject_mediaNestedInput
    staff?: staffUpdateOneWithoutProject_mediaNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_mediaNestedInput
  }

  export type project_mediaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_mediaCreateManyInput = {
    id?: number
    project_id?: number | null
    stage_id?: number | null
    staff_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_mediaUpdateManyMutationInput = {
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_mediaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_staffCreateInput = {
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    projects: projectsCreateNestedOneWithoutProject_staffInput
    staff: staffCreateNestedOneWithoutProject_staffInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_staffInput
  }

  export type project_staffUncheckedCreateInput = {
    id?: number
    project_id: number
    staff_id: number
    stage_id?: number | null
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_staffUpdateInput = {
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects?: projectsUpdateOneRequiredWithoutProject_staffNestedInput
    staff?: staffUpdateOneRequiredWithoutProject_staffNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_staffNestedInput
  }

  export type project_staffUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_staffCreateManyInput = {
    id?: number
    project_id: number
    staff_id: number
    stage_id?: number | null
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_staffUpdateManyMutationInput = {
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_staffUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_stagesCreateInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesCreateManyInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_stagesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_stagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_tagsCreateInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutProject_tagsInput
    tags: tagsCreateNestedOneWithoutProject_tagsInput
  }

  export type project_tagsUncheckedCreateInput = {
    project_id: number
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_tagsUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutProject_tagsNestedInput
    tags?: tagsUpdateOneRequiredWithoutProject_tagsNestedInput
  }

  export type project_tagsUncheckedUpdateInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_tagsCreateManyInput = {
    project_id: number
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_tagsUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_tagsUncheckedUpdateManyInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type projectsCreateInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsUpdateInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type projectsCreateManyInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type projectsUpdateManyMutationInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type projectsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesCreateInput = {
    name: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    staff?: staffCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    staff?: staffUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    staff?: staffUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    staff?: staffUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type rolesCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type rolesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_reportsCreateInput = {
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutSite_reportsInput
    staff?: staffCreateNestedOneWithoutSite_reportsInput
    project_stages?: project_stagesCreateNestedOneWithoutSite_reportsInput
  }

  export type site_reportsUncheckedCreateInput = {
    id?: number
    project_id: number
    staff_id?: number | null
    stage_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type site_reportsUpdateInput = {
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutSite_reportsNestedInput
    staff?: staffUpdateOneWithoutSite_reportsNestedInput
    project_stages?: project_stagesUpdateOneWithoutSite_reportsNestedInput
  }

  export type site_reportsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type site_reportsCreateManyInput = {
    id?: number
    project_id: number
    staff_id?: number | null
    stage_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type site_reportsUpdateManyMutationInput = {
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type site_reportsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type staffCreateInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffUpdateInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type staffCreateManyInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type staffUpdateManyMutationInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type staffUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stage_checklistsCreateInput = {
    label: string
    is_done?: boolean | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    staff?: staffCreateNestedOneWithoutStage_checklistsInput
    project_stages: project_stagesCreateNestedOneWithoutStage_checklistsInput
  }

  export type stage_checklistsUncheckedCreateInput = {
    id?: number
    stage_id: number
    label: string
    is_done?: boolean | null
    staff_id?: number | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_checklistsUpdateInput = {
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: staffUpdateOneWithoutStage_checklistsNestedInput
    project_stages?: project_stagesUpdateOneRequiredWithoutStage_checklistsNestedInput
  }

  export type stage_checklistsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_checklistsCreateManyInput = {
    id?: number
    stage_id: number
    label: string
    is_done?: boolean | null
    staff_id?: number | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_checklistsUpdateManyMutationInput = {
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_checklistsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_tagsCreateInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_stages: project_stagesCreateNestedOneWithoutStage_tagsInput
    tags: tagsCreateNestedOneWithoutStage_tagsInput
  }

  export type stage_tagsUncheckedCreateInput = {
    stage_id: number
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_tagsUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_stages?: project_stagesUpdateOneRequiredWithoutStage_tagsNestedInput
    tags?: tagsUpdateOneRequiredWithoutStage_tagsNestedInput
  }

  export type stage_tagsUncheckedUpdateInput = {
    stage_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_tagsCreateManyInput = {
    stage_id: number
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_tagsUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_tagsUncheckedUpdateManyInput = {
    stage_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tagsCreateInput = {
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsCreateNestedManyWithoutTagsInput
    project_tags?: project_tagsCreateNestedManyWithoutTagsInput
    stage_tags?: stage_tagsCreateNestedManyWithoutTagsInput
  }

  export type tagsUncheckedCreateInput = {
    id?: number
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsUncheckedCreateNestedManyWithoutTagsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutTagsInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutTagsInput
  }

  export type tagsUpdateInput = {
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUpdateManyWithoutTagsNestedInput
    project_tags?: project_tagsUpdateManyWithoutTagsNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutTagsNestedInput
  }

  export type tagsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUncheckedUpdateManyWithoutTagsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutTagsNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type tagsCreateManyInput = {
    id?: number
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type tagsUpdateManyMutationInput = {
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tagsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tasksCreateInput = {
    label: string
    description?: string | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    staff?: staffCreateNestedOneWithoutTasksInput
    project_stages: project_stagesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateInput = {
    id?: number
    stage_id: number
    label: string
    description?: string | null
    assigned_to?: number | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type tasksUpdateInput = {
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: staffUpdateOneWithoutTasksNestedInput
    project_stages?: project_stagesUpdateOneRequiredWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksCreateManyInput = {
    id?: number
    stage_id: number
    label: string
    description?: string | null
    assigned_to?: number | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type tasksUpdateManyMutationInput = {
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsCreateInput = {
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutTime_logsInput
    staff: staffCreateNestedOneWithoutTime_logsInput
    project_stages?: project_stagesCreateNestedOneWithoutTime_logsInput
  }

  export type time_logsUncheckedCreateInput = {
    id?: number
    staff_id: number
    project_id: number
    stage_id?: number | null
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsUpdateInput = {
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutTime_logsNestedInput
    staff?: staffUpdateOneRequiredWithoutTime_logsNestedInput
    project_stages?: project_stagesUpdateOneWithoutTime_logsNestedInput
  }

  export type time_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsCreateManyInput = {
    id?: number
    staff_id: number
    project_id: number
    stage_id?: number | null
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsUpdateManyMutationInput = {
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ClientsListRelationFilter = {
    every?: clientsWhereInput
    some?: clientsWhereInput
    none?: clientsWhereInput
  }

  export type ProjectsListRelationFilter = {
    every?: projectsWhereInput
    some?: projectsWhereInput
    none?: projectsWhereInput
  }

  export type StaffListRelationFilter = {
    every?: staffWhereInput
    some?: staffWhereInput
    none?: staffWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type clientsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type projectsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type staffOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type addressesCountOrderByAggregateInput = {
    id?: SortOrder
    street_number?: SortOrder
    street_name?: SortOrder
    additional_address?: SortOrder
    zip_code?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type addressesAvgOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type addressesMaxOrderByAggregateInput = {
    id?: SortOrder
    street_number?: SortOrder
    street_name?: SortOrder
    additional_address?: SortOrder
    zip_code?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type addressesMinOrderByAggregateInput = {
    id?: SortOrder
    street_number?: SortOrder
    street_name?: SortOrder
    additional_address?: SortOrder
    zip_code?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type addressesSumOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type AddressesNullableScalarRelationFilter = {
    is?: addressesWhereInput | null
    isNot?: addressesWhereInput | null
  }

  export type DocumentsListRelationFilter = {
    every?: documentsWhereInput
    some?: documentsWhereInput
    none?: documentsWhereInput
  }

  export type EventsListRelationFilter = {
    every?: eventsWhereInput
    some?: eventsWhereInput
    none?: eventsWhereInput
  }

  export type documentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type eventsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clientsCountOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    address_id?: SortOrder
    siret?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type clientsAvgOrderByAggregateInput = {
    id?: SortOrder
    address_id?: SortOrder
  }

  export type clientsMaxOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    address_id?: SortOrder
    siret?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type clientsMinOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    address_id?: SortOrder
    siret?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type clientsSumOrderByAggregateInput = {
    id?: SortOrder
    address_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DocumentsScalarRelationFilter = {
    is?: documentsWhereInput
    isNot?: documentsWhereInput
  }

  export type TagsScalarRelationFilter = {
    is?: tagsWhereInput
    isNot?: tagsWhereInput
  }

  export type document_tagsDocument_idTag_idCompoundUniqueInput = {
    document_id: number
    tag_id: number
  }

  export type document_tagsCountOrderByAggregateInput = {
    document_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type document_tagsAvgOrderByAggregateInput = {
    document_id?: SortOrder
    tag_id?: SortOrder
  }

  export type document_tagsMaxOrderByAggregateInput = {
    document_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type document_tagsMinOrderByAggregateInput = {
    document_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type document_tagsSumOrderByAggregateInput = {
    document_id?: SortOrder
    tag_id?: SortOrder
  }

  export type Enumdocument_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.document_type | Enumdocument_typeFieldRefInput<$PrismaModel>
    in?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumdocument_typeFilter<$PrismaModel> | $Enums.document_type
  }

  export type Enumdocument_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.document_status | Enumdocument_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumdocument_statusNullableFilter<$PrismaModel> | $Enums.document_status | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Document_tagsListRelationFilter = {
    every?: document_tagsWhereInput
    some?: document_tagsWhereInput
    none?: document_tagsWhereInput
  }

  export type ClientsNullableScalarRelationFilter = {
    is?: clientsWhereInput | null
    isNot?: clientsWhereInput | null
  }

  export type ProjectsScalarRelationFilter = {
    is?: projectsWhereInput
    isNot?: projectsWhereInput
  }

  export type document_tagsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type documentsCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    tva_rate?: SortOrder
    issue_date?: SortOrder
    due_date?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    notes?: SortOrder
    file_path?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type documentsAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_id?: SortOrder
    amount?: SortOrder
    tva_rate?: SortOrder
  }

  export type documentsMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    tva_rate?: SortOrder
    issue_date?: SortOrder
    due_date?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    notes?: SortOrder
    file_path?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type documentsMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    tva_rate?: SortOrder
    issue_date?: SortOrder
    due_date?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    notes?: SortOrder
    file_path?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type documentsSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_id?: SortOrder
    amount?: SortOrder
    tva_rate?: SortOrder
  }

  export type Enumdocument_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.document_type | Enumdocument_typeFieldRefInput<$PrismaModel>
    in?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumdocument_typeWithAggregatesFilter<$PrismaModel> | $Enums.document_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdocument_typeFilter<$PrismaModel>
    _max?: NestedEnumdocument_typeFilter<$PrismaModel>
  }

  export type Enumdocument_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.document_status | Enumdocument_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumdocument_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.document_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdocument_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumdocument_statusNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Enumevent_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.event_type | Enumevent_typeFieldRefInput<$PrismaModel>
    in?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumevent_typeFilter<$PrismaModel> | $Enums.event_type
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type ProjectsNullableScalarRelationFilter = {
    is?: projectsWhereInput | null
    isNot?: projectsWhereInput | null
  }

  export type StaffNullableScalarRelationFilter = {
    is?: staffWhereInput | null
    isNot?: staffWhereInput | null
  }

  export type eventsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    event_type?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    all_day?: SortOrder
    location?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    client_id?: SortOrder
    status?: SortOrder
    color?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type eventsAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    client_id?: SortOrder
  }

  export type eventsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    event_type?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    all_day?: SortOrder
    location?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    client_id?: SortOrder
    status?: SortOrder
    color?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type eventsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    event_type?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    all_day?: SortOrder
    location?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    client_id?: SortOrder
    status?: SortOrder
    color?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type eventsSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    client_id?: SortOrder
  }

  export type Enumevent_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.event_type | Enumevent_typeFieldRefInput<$PrismaModel>
    in?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumevent_typeWithAggregatesFilter<$PrismaModel> | $Enums.event_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumevent_typeFilter<$PrismaModel>
    _max?: NestedEnumevent_typeFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Project_materialsListRelationFilter = {
    every?: project_materialsWhereInput
    some?: project_materialsWhereInput
    none?: project_materialsWhereInput
  }

  export type project_materialsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type materialsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    reference?: SortOrder
    unit?: SortOrder
    price?: SortOrder
    stock_quantity?: SortOrder
    minimum_stock?: SortOrder
    supplier?: SortOrder
    supplier_reference?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type materialsAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    stock_quantity?: SortOrder
    minimum_stock?: SortOrder
  }

  export type materialsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    reference?: SortOrder
    unit?: SortOrder
    price?: SortOrder
    stock_quantity?: SortOrder
    minimum_stock?: SortOrder
    supplier?: SortOrder
    supplier_reference?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type materialsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    reference?: SortOrder
    unit?: SortOrder
    price?: SortOrder
    stock_quantity?: SortOrder
    minimum_stock?: SortOrder
    supplier?: SortOrder
    supplier_reference?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type materialsSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    stock_quantity?: SortOrder
    minimum_stock?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type MaterialsScalarRelationFilter = {
    is?: materialsWhereInput
    isNot?: materialsWhereInput
  }

  export type Project_stagesNullableScalarRelationFilter = {
    is?: project_stagesWhereInput | null
    isNot?: project_stagesWhereInput | null
  }

  export type project_materialsCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    material_id?: SortOrder
    stage_id?: SortOrder
    quantity_planned?: SortOrder
    quantity_used?: SortOrder
    unit_price?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type project_materialsAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    material_id?: SortOrder
    stage_id?: SortOrder
    quantity_planned?: SortOrder
    quantity_used?: SortOrder
    unit_price?: SortOrder
  }

  export type project_materialsMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    material_id?: SortOrder
    stage_id?: SortOrder
    quantity_planned?: SortOrder
    quantity_used?: SortOrder
    unit_price?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type project_materialsMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    material_id?: SortOrder
    stage_id?: SortOrder
    quantity_planned?: SortOrder
    quantity_used?: SortOrder
    unit_price?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type project_materialsSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    material_id?: SortOrder
    stage_id?: SortOrder
    quantity_planned?: SortOrder
    quantity_used?: SortOrder
    unit_price?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type project_mediaCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    staff_id?: SortOrder
    media_type?: SortOrder
    file_path?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_mediaAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    staff_id?: SortOrder
  }

  export type project_mediaMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    staff_id?: SortOrder
    media_type?: SortOrder
    file_path?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_mediaMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    staff_id?: SortOrder
    media_type?: SortOrder
    file_path?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_mediaSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    staff_id?: SortOrder
  }

  export type StaffScalarRelationFilter = {
    is?: staffWhereInput
    isNot?: staffWhereInput
  }

  export type project_staffCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    role_description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    hours_planned?: SortOrder
    hours_worked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type project_staffAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    hours_planned?: SortOrder
    hours_worked?: SortOrder
  }

  export type project_staffMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    role_description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    hours_planned?: SortOrder
    hours_worked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type project_staffMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    role_description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    hours_planned?: SortOrder
    hours_worked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type project_staffSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    hours_planned?: SortOrder
    hours_worked?: SortOrder
  }

  export type Project_mediaListRelationFilter = {
    every?: project_mediaWhereInput
    some?: project_mediaWhereInput
    none?: project_mediaWhereInput
  }

  export type Project_staffListRelationFilter = {
    every?: project_staffWhereInput
    some?: project_staffWhereInput
    none?: project_staffWhereInput
  }

  export type Site_reportsListRelationFilter = {
    every?: site_reportsWhereInput
    some?: site_reportsWhereInput
    none?: site_reportsWhereInput
  }

  export type Stage_checklistsListRelationFilter = {
    every?: stage_checklistsWhereInput
    some?: stage_checklistsWhereInput
    none?: stage_checklistsWhereInput
  }

  export type Stage_tagsListRelationFilter = {
    every?: stage_tagsWhereInput
    some?: stage_tagsWhereInput
    none?: stage_tagsWhereInput
  }

  export type TasksListRelationFilter = {
    every?: tasksWhereInput
    some?: tasksWhereInput
    none?: tasksWhereInput
  }

  export type Time_logsListRelationFilter = {
    every?: time_logsWhereInput
    some?: time_logsWhereInput
    none?: time_logsWhereInput
  }

  export type project_mediaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type project_staffOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type site_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type stage_checklistsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type stage_tagsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tasksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type time_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type project_stagesCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    order_index?: SortOrder
    estimated_duration?: SortOrder
    actual_duration?: SortOrder
    completion_percentage?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_stagesAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    order_index?: SortOrder
    estimated_duration?: SortOrder
    actual_duration?: SortOrder
    completion_percentage?: SortOrder
  }

  export type project_stagesMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    order_index?: SortOrder
    estimated_duration?: SortOrder
    actual_duration?: SortOrder
    completion_percentage?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_stagesMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    order_index?: SortOrder
    estimated_duration?: SortOrder
    actual_duration?: SortOrder
    completion_percentage?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_stagesSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    order_index?: SortOrder
    estimated_duration?: SortOrder
    actual_duration?: SortOrder
    completion_percentage?: SortOrder
  }

  export type project_tagsProject_idTag_idCompoundUniqueInput = {
    project_id: number
    tag_id: number
  }

  export type project_tagsCountOrderByAggregateInput = {
    project_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_tagsAvgOrderByAggregateInput = {
    project_id?: SortOrder
    tag_id?: SortOrder
  }

  export type project_tagsMaxOrderByAggregateInput = {
    project_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_tagsMinOrderByAggregateInput = {
    project_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type project_tagsSumOrderByAggregateInput = {
    project_id?: SortOrder
    tag_id?: SortOrder
  }

  export type Enumproject_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.project_status | Enumproject_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_statusNullableFilter<$PrismaModel> | $Enums.project_status | null
  }

  export type Project_stagesListRelationFilter = {
    every?: project_stagesWhereInput
    some?: project_stagesWhereInput
    none?: project_stagesWhereInput
  }

  export type Project_tagsListRelationFilter = {
    every?: project_tagsWhereInput
    some?: project_tagsWhereInput
    none?: project_tagsWhereInput
  }

  export type ClientsScalarRelationFilter = {
    is?: clientsWhereInput
    isNot?: clientsWhereInput
  }

  export type project_stagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type project_tagsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type projectsCountOrderByAggregateInput = {
    id?: SortOrder
    reference?: SortOrder
    name?: SortOrder
    description?: SortOrder
    client_id?: SortOrder
    address_id?: SortOrder
    status?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    estimated_duration?: SortOrder
    budget?: SortOrder
    actual_cost?: SortOrder
    margin?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type projectsAvgOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    address_id?: SortOrder
    estimated_duration?: SortOrder
    budget?: SortOrder
    actual_cost?: SortOrder
    margin?: SortOrder
    priority?: SortOrder
  }

  export type projectsMaxOrderByAggregateInput = {
    id?: SortOrder
    reference?: SortOrder
    name?: SortOrder
    description?: SortOrder
    client_id?: SortOrder
    address_id?: SortOrder
    status?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    estimated_duration?: SortOrder
    budget?: SortOrder
    actual_cost?: SortOrder
    margin?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type projectsMinOrderByAggregateInput = {
    id?: SortOrder
    reference?: SortOrder
    name?: SortOrder
    description?: SortOrder
    client_id?: SortOrder
    address_id?: SortOrder
    status?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    estimated_duration?: SortOrder
    budget?: SortOrder
    actual_cost?: SortOrder
    margin?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type projectsSumOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    address_id?: SortOrder
    estimated_duration?: SortOrder
    budget?: SortOrder
    actual_cost?: SortOrder
    margin?: SortOrder
    priority?: SortOrder
  }

  export type Enumproject_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.project_status | Enumproject_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.project_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumproject_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumproject_statusNullableFilter<$PrismaModel>
  }

  export type rolesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type rolesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type site_reportsCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    report_type?: SortOrder
    description?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type site_reportsAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
  }

  export type site_reportsMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    report_type?: SortOrder
    description?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type site_reportsMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
    report_type?: SortOrder
    description?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type site_reportsSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    staff_id?: SortOrder
    stage_id?: SortOrder
  }

  export type RolesScalarRelationFilter = {
    is?: rolesWhereInput
    isNot?: rolesWhereInput
  }

  export type staffCountOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    role_id?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    address_id?: SortOrder
    hire_date?: SortOrder
    is_available?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type staffAvgOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
    address_id?: SortOrder
  }

  export type staffMaxOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    role_id?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    address_id?: SortOrder
    hire_date?: SortOrder
    is_available?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type staffMinOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    role_id?: SortOrder
    phone?: SortOrder
    mobile?: SortOrder
    address_id?: SortOrder
    hire_date?: SortOrder
    is_available?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type staffSumOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
    address_id?: SortOrder
  }

  export type Project_stagesScalarRelationFilter = {
    is?: project_stagesWhereInput
    isNot?: project_stagesWhereInput
  }

  export type stage_checklistsCountOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    is_done?: SortOrder
    staff_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type stage_checklistsAvgOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    staff_id?: SortOrder
  }

  export type stage_checklistsMaxOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    is_done?: SortOrder
    staff_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type stage_checklistsMinOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    is_done?: SortOrder
    staff_id?: SortOrder
    comment?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type stage_checklistsSumOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    staff_id?: SortOrder
  }

  export type stage_tagsStage_idTag_idCompoundUniqueInput = {
    stage_id: number
    tag_id: number
  }

  export type stage_tagsCountOrderByAggregateInput = {
    stage_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type stage_tagsAvgOrderByAggregateInput = {
    stage_id?: SortOrder
    tag_id?: SortOrder
  }

  export type stage_tagsMaxOrderByAggregateInput = {
    stage_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type stage_tagsMinOrderByAggregateInput = {
    stage_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type stage_tagsSumOrderByAggregateInput = {
    stage_id?: SortOrder
    tag_id?: SortOrder
  }

  export type tagsCountOrderByAggregateInput = {
    id?: SortOrder
    label?: SortOrder
    color?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tagsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tagsMaxOrderByAggregateInput = {
    id?: SortOrder
    label?: SortOrder
    color?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tagsMinOrderByAggregateInput = {
    id?: SortOrder
    label?: SortOrder
    color?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tagsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tasksCountOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    description?: SortOrder
    assigned_to?: SortOrder
    due_date?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type tasksAvgOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    assigned_to?: SortOrder
    priority?: SortOrder
  }

  export type tasksMaxOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    description?: SortOrder
    assigned_to?: SortOrder
    due_date?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type tasksMinOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    label?: SortOrder
    description?: SortOrder
    assigned_to?: SortOrder
    due_date?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type tasksSumOrderByAggregateInput = {
    id?: SortOrder
    stage_id?: SortOrder
    assigned_to?: SortOrder
    priority?: SortOrder
  }

  export type time_logsCountOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    comment?: SortOrder
    gps_lat?: SortOrder
    gps_long?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type time_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    gps_lat?: SortOrder
    gps_long?: SortOrder
  }

  export type time_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    comment?: SortOrder
    gps_lat?: SortOrder
    gps_long?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type time_logsMinOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    check_in?: SortOrder
    check_out?: SortOrder
    comment?: SortOrder
    gps_lat?: SortOrder
    gps_long?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    synced_at?: SortOrder
    synced_by_device_id?: SortOrder
  }

  export type time_logsSumOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    project_id?: SortOrder
    stage_id?: SortOrder
    gps_lat?: SortOrder
    gps_long?: SortOrder
  }

  export type clientsCreateNestedManyWithoutAddressesInput = {
    create?: XOR<clientsCreateWithoutAddressesInput, clientsUncheckedCreateWithoutAddressesInput> | clientsCreateWithoutAddressesInput[] | clientsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutAddressesInput | clientsCreateOrConnectWithoutAddressesInput[]
    createMany?: clientsCreateManyAddressesInputEnvelope
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
  }

  export type projectsCreateNestedManyWithoutAddressesInput = {
    create?: XOR<projectsCreateWithoutAddressesInput, projectsUncheckedCreateWithoutAddressesInput> | projectsCreateWithoutAddressesInput[] | projectsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutAddressesInput | projectsCreateOrConnectWithoutAddressesInput[]
    createMany?: projectsCreateManyAddressesInputEnvelope
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
  }

  export type staffCreateNestedManyWithoutAddressesInput = {
    create?: XOR<staffCreateWithoutAddressesInput, staffUncheckedCreateWithoutAddressesInput> | staffCreateWithoutAddressesInput[] | staffUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutAddressesInput | staffCreateOrConnectWithoutAddressesInput[]
    createMany?: staffCreateManyAddressesInputEnvelope
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
  }

  export type clientsUncheckedCreateNestedManyWithoutAddressesInput = {
    create?: XOR<clientsCreateWithoutAddressesInput, clientsUncheckedCreateWithoutAddressesInput> | clientsCreateWithoutAddressesInput[] | clientsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutAddressesInput | clientsCreateOrConnectWithoutAddressesInput[]
    createMany?: clientsCreateManyAddressesInputEnvelope
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
  }

  export type projectsUncheckedCreateNestedManyWithoutAddressesInput = {
    create?: XOR<projectsCreateWithoutAddressesInput, projectsUncheckedCreateWithoutAddressesInput> | projectsCreateWithoutAddressesInput[] | projectsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutAddressesInput | projectsCreateOrConnectWithoutAddressesInput[]
    createMany?: projectsCreateManyAddressesInputEnvelope
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
  }

  export type staffUncheckedCreateNestedManyWithoutAddressesInput = {
    create?: XOR<staffCreateWithoutAddressesInput, staffUncheckedCreateWithoutAddressesInput> | staffCreateWithoutAddressesInput[] | staffUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutAddressesInput | staffCreateOrConnectWithoutAddressesInput[]
    createMany?: staffCreateManyAddressesInputEnvelope
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type clientsUpdateManyWithoutAddressesNestedInput = {
    create?: XOR<clientsCreateWithoutAddressesInput, clientsUncheckedCreateWithoutAddressesInput> | clientsCreateWithoutAddressesInput[] | clientsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutAddressesInput | clientsCreateOrConnectWithoutAddressesInput[]
    upsert?: clientsUpsertWithWhereUniqueWithoutAddressesInput | clientsUpsertWithWhereUniqueWithoutAddressesInput[]
    createMany?: clientsCreateManyAddressesInputEnvelope
    set?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    disconnect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    delete?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    update?: clientsUpdateWithWhereUniqueWithoutAddressesInput | clientsUpdateWithWhereUniqueWithoutAddressesInput[]
    updateMany?: clientsUpdateManyWithWhereWithoutAddressesInput | clientsUpdateManyWithWhereWithoutAddressesInput[]
    deleteMany?: clientsScalarWhereInput | clientsScalarWhereInput[]
  }

  export type projectsUpdateManyWithoutAddressesNestedInput = {
    create?: XOR<projectsCreateWithoutAddressesInput, projectsUncheckedCreateWithoutAddressesInput> | projectsCreateWithoutAddressesInput[] | projectsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutAddressesInput | projectsCreateOrConnectWithoutAddressesInput[]
    upsert?: projectsUpsertWithWhereUniqueWithoutAddressesInput | projectsUpsertWithWhereUniqueWithoutAddressesInput[]
    createMany?: projectsCreateManyAddressesInputEnvelope
    set?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    disconnect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    delete?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    update?: projectsUpdateWithWhereUniqueWithoutAddressesInput | projectsUpdateWithWhereUniqueWithoutAddressesInput[]
    updateMany?: projectsUpdateManyWithWhereWithoutAddressesInput | projectsUpdateManyWithWhereWithoutAddressesInput[]
    deleteMany?: projectsScalarWhereInput | projectsScalarWhereInput[]
  }

  export type staffUpdateManyWithoutAddressesNestedInput = {
    create?: XOR<staffCreateWithoutAddressesInput, staffUncheckedCreateWithoutAddressesInput> | staffCreateWithoutAddressesInput[] | staffUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutAddressesInput | staffCreateOrConnectWithoutAddressesInput[]
    upsert?: staffUpsertWithWhereUniqueWithoutAddressesInput | staffUpsertWithWhereUniqueWithoutAddressesInput[]
    createMany?: staffCreateManyAddressesInputEnvelope
    set?: staffWhereUniqueInput | staffWhereUniqueInput[]
    disconnect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    delete?: staffWhereUniqueInput | staffWhereUniqueInput[]
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    update?: staffUpdateWithWhereUniqueWithoutAddressesInput | staffUpdateWithWhereUniqueWithoutAddressesInput[]
    updateMany?: staffUpdateManyWithWhereWithoutAddressesInput | staffUpdateManyWithWhereWithoutAddressesInput[]
    deleteMany?: staffScalarWhereInput | staffScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type clientsUncheckedUpdateManyWithoutAddressesNestedInput = {
    create?: XOR<clientsCreateWithoutAddressesInput, clientsUncheckedCreateWithoutAddressesInput> | clientsCreateWithoutAddressesInput[] | clientsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutAddressesInput | clientsCreateOrConnectWithoutAddressesInput[]
    upsert?: clientsUpsertWithWhereUniqueWithoutAddressesInput | clientsUpsertWithWhereUniqueWithoutAddressesInput[]
    createMany?: clientsCreateManyAddressesInputEnvelope
    set?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    disconnect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    delete?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    update?: clientsUpdateWithWhereUniqueWithoutAddressesInput | clientsUpdateWithWhereUniqueWithoutAddressesInput[]
    updateMany?: clientsUpdateManyWithWhereWithoutAddressesInput | clientsUpdateManyWithWhereWithoutAddressesInput[]
    deleteMany?: clientsScalarWhereInput | clientsScalarWhereInput[]
  }

  export type projectsUncheckedUpdateManyWithoutAddressesNestedInput = {
    create?: XOR<projectsCreateWithoutAddressesInput, projectsUncheckedCreateWithoutAddressesInput> | projectsCreateWithoutAddressesInput[] | projectsUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutAddressesInput | projectsCreateOrConnectWithoutAddressesInput[]
    upsert?: projectsUpsertWithWhereUniqueWithoutAddressesInput | projectsUpsertWithWhereUniqueWithoutAddressesInput[]
    createMany?: projectsCreateManyAddressesInputEnvelope
    set?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    disconnect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    delete?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    update?: projectsUpdateWithWhereUniqueWithoutAddressesInput | projectsUpdateWithWhereUniqueWithoutAddressesInput[]
    updateMany?: projectsUpdateManyWithWhereWithoutAddressesInput | projectsUpdateManyWithWhereWithoutAddressesInput[]
    deleteMany?: projectsScalarWhereInput | projectsScalarWhereInput[]
  }

  export type staffUncheckedUpdateManyWithoutAddressesNestedInput = {
    create?: XOR<staffCreateWithoutAddressesInput, staffUncheckedCreateWithoutAddressesInput> | staffCreateWithoutAddressesInput[] | staffUncheckedCreateWithoutAddressesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutAddressesInput | staffCreateOrConnectWithoutAddressesInput[]
    upsert?: staffUpsertWithWhereUniqueWithoutAddressesInput | staffUpsertWithWhereUniqueWithoutAddressesInput[]
    createMany?: staffCreateManyAddressesInputEnvelope
    set?: staffWhereUniqueInput | staffWhereUniqueInput[]
    disconnect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    delete?: staffWhereUniqueInput | staffWhereUniqueInput[]
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    update?: staffUpdateWithWhereUniqueWithoutAddressesInput | staffUpdateWithWhereUniqueWithoutAddressesInput[]
    updateMany?: staffUpdateManyWithWhereWithoutAddressesInput | staffUpdateManyWithWhereWithoutAddressesInput[]
    deleteMany?: staffScalarWhereInput | staffScalarWhereInput[]
  }

  export type addressesCreateNestedOneWithoutClientsInput = {
    create?: XOR<addressesCreateWithoutClientsInput, addressesUncheckedCreateWithoutClientsInput>
    connectOrCreate?: addressesCreateOrConnectWithoutClientsInput
    connect?: addressesWhereUniqueInput
  }

  export type documentsCreateNestedManyWithoutClientsInput = {
    create?: XOR<documentsCreateWithoutClientsInput, documentsUncheckedCreateWithoutClientsInput> | documentsCreateWithoutClientsInput[] | documentsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutClientsInput | documentsCreateOrConnectWithoutClientsInput[]
    createMany?: documentsCreateManyClientsInputEnvelope
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
  }

  export type eventsCreateNestedManyWithoutClientsInput = {
    create?: XOR<eventsCreateWithoutClientsInput, eventsUncheckedCreateWithoutClientsInput> | eventsCreateWithoutClientsInput[] | eventsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutClientsInput | eventsCreateOrConnectWithoutClientsInput[]
    createMany?: eventsCreateManyClientsInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type projectsCreateNestedManyWithoutClientsInput = {
    create?: XOR<projectsCreateWithoutClientsInput, projectsUncheckedCreateWithoutClientsInput> | projectsCreateWithoutClientsInput[] | projectsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutClientsInput | projectsCreateOrConnectWithoutClientsInput[]
    createMany?: projectsCreateManyClientsInputEnvelope
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
  }

  export type documentsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<documentsCreateWithoutClientsInput, documentsUncheckedCreateWithoutClientsInput> | documentsCreateWithoutClientsInput[] | documentsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutClientsInput | documentsCreateOrConnectWithoutClientsInput[]
    createMany?: documentsCreateManyClientsInputEnvelope
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
  }

  export type eventsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<eventsCreateWithoutClientsInput, eventsUncheckedCreateWithoutClientsInput> | eventsCreateWithoutClientsInput[] | eventsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutClientsInput | eventsCreateOrConnectWithoutClientsInput[]
    createMany?: eventsCreateManyClientsInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type projectsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<projectsCreateWithoutClientsInput, projectsUncheckedCreateWithoutClientsInput> | projectsCreateWithoutClientsInput[] | projectsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutClientsInput | projectsCreateOrConnectWithoutClientsInput[]
    createMany?: projectsCreateManyClientsInputEnvelope
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
  }

  export type addressesUpdateOneWithoutClientsNestedInput = {
    create?: XOR<addressesCreateWithoutClientsInput, addressesUncheckedCreateWithoutClientsInput>
    connectOrCreate?: addressesCreateOrConnectWithoutClientsInput
    upsert?: addressesUpsertWithoutClientsInput
    disconnect?: addressesWhereInput | boolean
    delete?: addressesWhereInput | boolean
    connect?: addressesWhereUniqueInput
    update?: XOR<XOR<addressesUpdateToOneWithWhereWithoutClientsInput, addressesUpdateWithoutClientsInput>, addressesUncheckedUpdateWithoutClientsInput>
  }

  export type documentsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<documentsCreateWithoutClientsInput, documentsUncheckedCreateWithoutClientsInput> | documentsCreateWithoutClientsInput[] | documentsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutClientsInput | documentsCreateOrConnectWithoutClientsInput[]
    upsert?: documentsUpsertWithWhereUniqueWithoutClientsInput | documentsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: documentsCreateManyClientsInputEnvelope
    set?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    disconnect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    delete?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    update?: documentsUpdateWithWhereUniqueWithoutClientsInput | documentsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: documentsUpdateManyWithWhereWithoutClientsInput | documentsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: documentsScalarWhereInput | documentsScalarWhereInput[]
  }

  export type eventsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<eventsCreateWithoutClientsInput, eventsUncheckedCreateWithoutClientsInput> | eventsCreateWithoutClientsInput[] | eventsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutClientsInput | eventsCreateOrConnectWithoutClientsInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutClientsInput | eventsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: eventsCreateManyClientsInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutClientsInput | eventsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutClientsInput | eventsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type projectsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<projectsCreateWithoutClientsInput, projectsUncheckedCreateWithoutClientsInput> | projectsCreateWithoutClientsInput[] | projectsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutClientsInput | projectsCreateOrConnectWithoutClientsInput[]
    upsert?: projectsUpsertWithWhereUniqueWithoutClientsInput | projectsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: projectsCreateManyClientsInputEnvelope
    set?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    disconnect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    delete?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    update?: projectsUpdateWithWhereUniqueWithoutClientsInput | projectsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: projectsUpdateManyWithWhereWithoutClientsInput | projectsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: projectsScalarWhereInput | projectsScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type documentsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<documentsCreateWithoutClientsInput, documentsUncheckedCreateWithoutClientsInput> | documentsCreateWithoutClientsInput[] | documentsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutClientsInput | documentsCreateOrConnectWithoutClientsInput[]
    upsert?: documentsUpsertWithWhereUniqueWithoutClientsInput | documentsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: documentsCreateManyClientsInputEnvelope
    set?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    disconnect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    delete?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    update?: documentsUpdateWithWhereUniqueWithoutClientsInput | documentsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: documentsUpdateManyWithWhereWithoutClientsInput | documentsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: documentsScalarWhereInput | documentsScalarWhereInput[]
  }

  export type eventsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<eventsCreateWithoutClientsInput, eventsUncheckedCreateWithoutClientsInput> | eventsCreateWithoutClientsInput[] | eventsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutClientsInput | eventsCreateOrConnectWithoutClientsInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutClientsInput | eventsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: eventsCreateManyClientsInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutClientsInput | eventsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutClientsInput | eventsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type projectsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<projectsCreateWithoutClientsInput, projectsUncheckedCreateWithoutClientsInput> | projectsCreateWithoutClientsInput[] | projectsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: projectsCreateOrConnectWithoutClientsInput | projectsCreateOrConnectWithoutClientsInput[]
    upsert?: projectsUpsertWithWhereUniqueWithoutClientsInput | projectsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: projectsCreateManyClientsInputEnvelope
    set?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    disconnect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    delete?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    connect?: projectsWhereUniqueInput | projectsWhereUniqueInput[]
    update?: projectsUpdateWithWhereUniqueWithoutClientsInput | projectsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: projectsUpdateManyWithWhereWithoutClientsInput | projectsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: projectsScalarWhereInput | projectsScalarWhereInput[]
  }

  export type documentsCreateNestedOneWithoutDocument_tagsInput = {
    create?: XOR<documentsCreateWithoutDocument_tagsInput, documentsUncheckedCreateWithoutDocument_tagsInput>
    connectOrCreate?: documentsCreateOrConnectWithoutDocument_tagsInput
    connect?: documentsWhereUniqueInput
  }

  export type tagsCreateNestedOneWithoutDocument_tagsInput = {
    create?: XOR<tagsCreateWithoutDocument_tagsInput, tagsUncheckedCreateWithoutDocument_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutDocument_tagsInput
    connect?: tagsWhereUniqueInput
  }

  export type documentsUpdateOneRequiredWithoutDocument_tagsNestedInput = {
    create?: XOR<documentsCreateWithoutDocument_tagsInput, documentsUncheckedCreateWithoutDocument_tagsInput>
    connectOrCreate?: documentsCreateOrConnectWithoutDocument_tagsInput
    upsert?: documentsUpsertWithoutDocument_tagsInput
    connect?: documentsWhereUniqueInput
    update?: XOR<XOR<documentsUpdateToOneWithWhereWithoutDocument_tagsInput, documentsUpdateWithoutDocument_tagsInput>, documentsUncheckedUpdateWithoutDocument_tagsInput>
  }

  export type tagsUpdateOneRequiredWithoutDocument_tagsNestedInput = {
    create?: XOR<tagsCreateWithoutDocument_tagsInput, tagsUncheckedCreateWithoutDocument_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutDocument_tagsInput
    upsert?: tagsUpsertWithoutDocument_tagsInput
    connect?: tagsWhereUniqueInput
    update?: XOR<XOR<tagsUpdateToOneWithWhereWithoutDocument_tagsInput, tagsUpdateWithoutDocument_tagsInput>, tagsUncheckedUpdateWithoutDocument_tagsInput>
  }

  export type document_tagsCreateNestedManyWithoutDocumentsInput = {
    create?: XOR<document_tagsCreateWithoutDocumentsInput, document_tagsUncheckedCreateWithoutDocumentsInput> | document_tagsCreateWithoutDocumentsInput[] | document_tagsUncheckedCreateWithoutDocumentsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutDocumentsInput | document_tagsCreateOrConnectWithoutDocumentsInput[]
    createMany?: document_tagsCreateManyDocumentsInputEnvelope
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
  }

  export type clientsCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<clientsCreateWithoutDocumentsInput, clientsUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutDocumentsInput
    connect?: clientsWhereUniqueInput
  }

  export type projectsCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<projectsCreateWithoutDocumentsInput, projectsUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutDocumentsInput
    connect?: projectsWhereUniqueInput
  }

  export type document_tagsUncheckedCreateNestedManyWithoutDocumentsInput = {
    create?: XOR<document_tagsCreateWithoutDocumentsInput, document_tagsUncheckedCreateWithoutDocumentsInput> | document_tagsCreateWithoutDocumentsInput[] | document_tagsUncheckedCreateWithoutDocumentsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutDocumentsInput | document_tagsCreateOrConnectWithoutDocumentsInput[]
    createMany?: document_tagsCreateManyDocumentsInputEnvelope
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
  }

  export type Enumdocument_typeFieldUpdateOperationsInput = {
    set?: $Enums.document_type
  }

  export type NullableEnumdocument_statusFieldUpdateOperationsInput = {
    set?: $Enums.document_status | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type document_tagsUpdateManyWithoutDocumentsNestedInput = {
    create?: XOR<document_tagsCreateWithoutDocumentsInput, document_tagsUncheckedCreateWithoutDocumentsInput> | document_tagsCreateWithoutDocumentsInput[] | document_tagsUncheckedCreateWithoutDocumentsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutDocumentsInput | document_tagsCreateOrConnectWithoutDocumentsInput[]
    upsert?: document_tagsUpsertWithWhereUniqueWithoutDocumentsInput | document_tagsUpsertWithWhereUniqueWithoutDocumentsInput[]
    createMany?: document_tagsCreateManyDocumentsInputEnvelope
    set?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    disconnect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    delete?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    update?: document_tagsUpdateWithWhereUniqueWithoutDocumentsInput | document_tagsUpdateWithWhereUniqueWithoutDocumentsInput[]
    updateMany?: document_tagsUpdateManyWithWhereWithoutDocumentsInput | document_tagsUpdateManyWithWhereWithoutDocumentsInput[]
    deleteMany?: document_tagsScalarWhereInput | document_tagsScalarWhereInput[]
  }

  export type clientsUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<clientsCreateWithoutDocumentsInput, clientsUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutDocumentsInput
    upsert?: clientsUpsertWithoutDocumentsInput
    disconnect?: clientsWhereInput | boolean
    delete?: clientsWhereInput | boolean
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutDocumentsInput, clientsUpdateWithoutDocumentsInput>, clientsUncheckedUpdateWithoutDocumentsInput>
  }

  export type projectsUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<projectsCreateWithoutDocumentsInput, projectsUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutDocumentsInput
    upsert?: projectsUpsertWithoutDocumentsInput
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutDocumentsInput, projectsUpdateWithoutDocumentsInput>, projectsUncheckedUpdateWithoutDocumentsInput>
  }

  export type document_tagsUncheckedUpdateManyWithoutDocumentsNestedInput = {
    create?: XOR<document_tagsCreateWithoutDocumentsInput, document_tagsUncheckedCreateWithoutDocumentsInput> | document_tagsCreateWithoutDocumentsInput[] | document_tagsUncheckedCreateWithoutDocumentsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutDocumentsInput | document_tagsCreateOrConnectWithoutDocumentsInput[]
    upsert?: document_tagsUpsertWithWhereUniqueWithoutDocumentsInput | document_tagsUpsertWithWhereUniqueWithoutDocumentsInput[]
    createMany?: document_tagsCreateManyDocumentsInputEnvelope
    set?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    disconnect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    delete?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    update?: document_tagsUpdateWithWhereUniqueWithoutDocumentsInput | document_tagsUpdateWithWhereUniqueWithoutDocumentsInput[]
    updateMany?: document_tagsUpdateManyWithWhereWithoutDocumentsInput | document_tagsUpdateManyWithWhereWithoutDocumentsInput[]
    deleteMany?: document_tagsScalarWhereInput | document_tagsScalarWhereInput[]
  }

  export type clientsCreateNestedOneWithoutEventsInput = {
    create?: XOR<clientsCreateWithoutEventsInput, clientsUncheckedCreateWithoutEventsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutEventsInput
    connect?: clientsWhereUniqueInput
  }

  export type projectsCreateNestedOneWithoutEventsInput = {
    create?: XOR<projectsCreateWithoutEventsInput, projectsUncheckedCreateWithoutEventsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutEventsInput
    connect?: projectsWhereUniqueInput
  }

  export type staffCreateNestedOneWithoutEventsInput = {
    create?: XOR<staffCreateWithoutEventsInput, staffUncheckedCreateWithoutEventsInput>
    connectOrCreate?: staffCreateOrConnectWithoutEventsInput
    connect?: staffWhereUniqueInput
  }

  export type Enumevent_typeFieldUpdateOperationsInput = {
    set?: $Enums.event_type
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type clientsUpdateOneWithoutEventsNestedInput = {
    create?: XOR<clientsCreateWithoutEventsInput, clientsUncheckedCreateWithoutEventsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutEventsInput
    upsert?: clientsUpsertWithoutEventsInput
    disconnect?: clientsWhereInput | boolean
    delete?: clientsWhereInput | boolean
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutEventsInput, clientsUpdateWithoutEventsInput>, clientsUncheckedUpdateWithoutEventsInput>
  }

  export type projectsUpdateOneWithoutEventsNestedInput = {
    create?: XOR<projectsCreateWithoutEventsInput, projectsUncheckedCreateWithoutEventsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutEventsInput
    upsert?: projectsUpsertWithoutEventsInput
    disconnect?: projectsWhereInput | boolean
    delete?: projectsWhereInput | boolean
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutEventsInput, projectsUpdateWithoutEventsInput>, projectsUncheckedUpdateWithoutEventsInput>
  }

  export type staffUpdateOneWithoutEventsNestedInput = {
    create?: XOR<staffCreateWithoutEventsInput, staffUncheckedCreateWithoutEventsInput>
    connectOrCreate?: staffCreateOrConnectWithoutEventsInput
    upsert?: staffUpsertWithoutEventsInput
    disconnect?: staffWhereInput | boolean
    delete?: staffWhereInput | boolean
    connect?: staffWhereUniqueInput
    update?: XOR<XOR<staffUpdateToOneWithWhereWithoutEventsInput, staffUpdateWithoutEventsInput>, staffUncheckedUpdateWithoutEventsInput>
  }

  export type project_materialsCreateNestedManyWithoutMaterialsInput = {
    create?: XOR<project_materialsCreateWithoutMaterialsInput, project_materialsUncheckedCreateWithoutMaterialsInput> | project_materialsCreateWithoutMaterialsInput[] | project_materialsUncheckedCreateWithoutMaterialsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutMaterialsInput | project_materialsCreateOrConnectWithoutMaterialsInput[]
    createMany?: project_materialsCreateManyMaterialsInputEnvelope
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
  }

  export type project_materialsUncheckedCreateNestedManyWithoutMaterialsInput = {
    create?: XOR<project_materialsCreateWithoutMaterialsInput, project_materialsUncheckedCreateWithoutMaterialsInput> | project_materialsCreateWithoutMaterialsInput[] | project_materialsUncheckedCreateWithoutMaterialsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutMaterialsInput | project_materialsCreateOrConnectWithoutMaterialsInput[]
    createMany?: project_materialsCreateManyMaterialsInputEnvelope
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
  }

  export type project_materialsUpdateManyWithoutMaterialsNestedInput = {
    create?: XOR<project_materialsCreateWithoutMaterialsInput, project_materialsUncheckedCreateWithoutMaterialsInput> | project_materialsCreateWithoutMaterialsInput[] | project_materialsUncheckedCreateWithoutMaterialsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutMaterialsInput | project_materialsCreateOrConnectWithoutMaterialsInput[]
    upsert?: project_materialsUpsertWithWhereUniqueWithoutMaterialsInput | project_materialsUpsertWithWhereUniqueWithoutMaterialsInput[]
    createMany?: project_materialsCreateManyMaterialsInputEnvelope
    set?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    disconnect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    delete?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    update?: project_materialsUpdateWithWhereUniqueWithoutMaterialsInput | project_materialsUpdateWithWhereUniqueWithoutMaterialsInput[]
    updateMany?: project_materialsUpdateManyWithWhereWithoutMaterialsInput | project_materialsUpdateManyWithWhereWithoutMaterialsInput[]
    deleteMany?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
  }

  export type project_materialsUncheckedUpdateManyWithoutMaterialsNestedInput = {
    create?: XOR<project_materialsCreateWithoutMaterialsInput, project_materialsUncheckedCreateWithoutMaterialsInput> | project_materialsCreateWithoutMaterialsInput[] | project_materialsUncheckedCreateWithoutMaterialsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutMaterialsInput | project_materialsCreateOrConnectWithoutMaterialsInput[]
    upsert?: project_materialsUpsertWithWhereUniqueWithoutMaterialsInput | project_materialsUpsertWithWhereUniqueWithoutMaterialsInput[]
    createMany?: project_materialsCreateManyMaterialsInputEnvelope
    set?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    disconnect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    delete?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    update?: project_materialsUpdateWithWhereUniqueWithoutMaterialsInput | project_materialsUpdateWithWhereUniqueWithoutMaterialsInput[]
    updateMany?: project_materialsUpdateManyWithWhereWithoutMaterialsInput | project_materialsUpdateManyWithWhereWithoutMaterialsInput[]
    deleteMany?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
  }

  export type materialsCreateNestedOneWithoutProject_materialsInput = {
    create?: XOR<materialsCreateWithoutProject_materialsInput, materialsUncheckedCreateWithoutProject_materialsInput>
    connectOrCreate?: materialsCreateOrConnectWithoutProject_materialsInput
    connect?: materialsWhereUniqueInput
  }

  export type projectsCreateNestedOneWithoutProject_materialsInput = {
    create?: XOR<projectsCreateWithoutProject_materialsInput, projectsUncheckedCreateWithoutProject_materialsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_materialsInput
    connect?: projectsWhereUniqueInput
  }

  export type project_stagesCreateNestedOneWithoutProject_materialsInput = {
    create?: XOR<project_stagesCreateWithoutProject_materialsInput, project_stagesUncheckedCreateWithoutProject_materialsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutProject_materialsInput
    connect?: project_stagesWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type materialsUpdateOneRequiredWithoutProject_materialsNestedInput = {
    create?: XOR<materialsCreateWithoutProject_materialsInput, materialsUncheckedCreateWithoutProject_materialsInput>
    connectOrCreate?: materialsCreateOrConnectWithoutProject_materialsInput
    upsert?: materialsUpsertWithoutProject_materialsInput
    connect?: materialsWhereUniqueInput
    update?: XOR<XOR<materialsUpdateToOneWithWhereWithoutProject_materialsInput, materialsUpdateWithoutProject_materialsInput>, materialsUncheckedUpdateWithoutProject_materialsInput>
  }

  export type projectsUpdateOneRequiredWithoutProject_materialsNestedInput = {
    create?: XOR<projectsCreateWithoutProject_materialsInput, projectsUncheckedCreateWithoutProject_materialsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_materialsInput
    upsert?: projectsUpsertWithoutProject_materialsInput
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutProject_materialsInput, projectsUpdateWithoutProject_materialsInput>, projectsUncheckedUpdateWithoutProject_materialsInput>
  }

  export type project_stagesUpdateOneWithoutProject_materialsNestedInput = {
    create?: XOR<project_stagesCreateWithoutProject_materialsInput, project_stagesUncheckedCreateWithoutProject_materialsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutProject_materialsInput
    upsert?: project_stagesUpsertWithoutProject_materialsInput
    disconnect?: project_stagesWhereInput | boolean
    delete?: project_stagesWhereInput | boolean
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutProject_materialsInput, project_stagesUpdateWithoutProject_materialsInput>, project_stagesUncheckedUpdateWithoutProject_materialsInput>
  }

  export type projectsCreateNestedOneWithoutProject_mediaInput = {
    create?: XOR<projectsCreateWithoutProject_mediaInput, projectsUncheckedCreateWithoutProject_mediaInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_mediaInput
    connect?: projectsWhereUniqueInput
  }

  export type staffCreateNestedOneWithoutProject_mediaInput = {
    create?: XOR<staffCreateWithoutProject_mediaInput, staffUncheckedCreateWithoutProject_mediaInput>
    connectOrCreate?: staffCreateOrConnectWithoutProject_mediaInput
    connect?: staffWhereUniqueInput
  }

  export type project_stagesCreateNestedOneWithoutProject_mediaInput = {
    create?: XOR<project_stagesCreateWithoutProject_mediaInput, project_stagesUncheckedCreateWithoutProject_mediaInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutProject_mediaInput
    connect?: project_stagesWhereUniqueInput
  }

  export type projectsUpdateOneWithoutProject_mediaNestedInput = {
    create?: XOR<projectsCreateWithoutProject_mediaInput, projectsUncheckedCreateWithoutProject_mediaInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_mediaInput
    upsert?: projectsUpsertWithoutProject_mediaInput
    disconnect?: projectsWhereInput | boolean
    delete?: projectsWhereInput | boolean
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutProject_mediaInput, projectsUpdateWithoutProject_mediaInput>, projectsUncheckedUpdateWithoutProject_mediaInput>
  }

  export type staffUpdateOneWithoutProject_mediaNestedInput = {
    create?: XOR<staffCreateWithoutProject_mediaInput, staffUncheckedCreateWithoutProject_mediaInput>
    connectOrCreate?: staffCreateOrConnectWithoutProject_mediaInput
    upsert?: staffUpsertWithoutProject_mediaInput
    disconnect?: staffWhereInput | boolean
    delete?: staffWhereInput | boolean
    connect?: staffWhereUniqueInput
    update?: XOR<XOR<staffUpdateToOneWithWhereWithoutProject_mediaInput, staffUpdateWithoutProject_mediaInput>, staffUncheckedUpdateWithoutProject_mediaInput>
  }

  export type project_stagesUpdateOneWithoutProject_mediaNestedInput = {
    create?: XOR<project_stagesCreateWithoutProject_mediaInput, project_stagesUncheckedCreateWithoutProject_mediaInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutProject_mediaInput
    upsert?: project_stagesUpsertWithoutProject_mediaInput
    disconnect?: project_stagesWhereInput | boolean
    delete?: project_stagesWhereInput | boolean
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutProject_mediaInput, project_stagesUpdateWithoutProject_mediaInput>, project_stagesUncheckedUpdateWithoutProject_mediaInput>
  }

  export type projectsCreateNestedOneWithoutProject_staffInput = {
    create?: XOR<projectsCreateWithoutProject_staffInput, projectsUncheckedCreateWithoutProject_staffInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_staffInput
    connect?: projectsWhereUniqueInput
  }

  export type staffCreateNestedOneWithoutProject_staffInput = {
    create?: XOR<staffCreateWithoutProject_staffInput, staffUncheckedCreateWithoutProject_staffInput>
    connectOrCreate?: staffCreateOrConnectWithoutProject_staffInput
    connect?: staffWhereUniqueInput
  }

  export type project_stagesCreateNestedOneWithoutProject_staffInput = {
    create?: XOR<project_stagesCreateWithoutProject_staffInput, project_stagesUncheckedCreateWithoutProject_staffInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutProject_staffInput
    connect?: project_stagesWhereUniqueInput
  }

  export type projectsUpdateOneRequiredWithoutProject_staffNestedInput = {
    create?: XOR<projectsCreateWithoutProject_staffInput, projectsUncheckedCreateWithoutProject_staffInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_staffInput
    upsert?: projectsUpsertWithoutProject_staffInput
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutProject_staffInput, projectsUpdateWithoutProject_staffInput>, projectsUncheckedUpdateWithoutProject_staffInput>
  }

  export type staffUpdateOneRequiredWithoutProject_staffNestedInput = {
    create?: XOR<staffCreateWithoutProject_staffInput, staffUncheckedCreateWithoutProject_staffInput>
    connectOrCreate?: staffCreateOrConnectWithoutProject_staffInput
    upsert?: staffUpsertWithoutProject_staffInput
    connect?: staffWhereUniqueInput
    update?: XOR<XOR<staffUpdateToOneWithWhereWithoutProject_staffInput, staffUpdateWithoutProject_staffInput>, staffUncheckedUpdateWithoutProject_staffInput>
  }

  export type project_stagesUpdateOneWithoutProject_staffNestedInput = {
    create?: XOR<project_stagesCreateWithoutProject_staffInput, project_stagesUncheckedCreateWithoutProject_staffInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutProject_staffInput
    upsert?: project_stagesUpsertWithoutProject_staffInput
    disconnect?: project_stagesWhereInput | boolean
    delete?: project_stagesWhereInput | boolean
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutProject_staffInput, project_stagesUpdateWithoutProject_staffInput>, project_stagesUncheckedUpdateWithoutProject_staffInput>
  }

  export type project_materialsCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<project_materialsCreateWithoutProject_stagesInput, project_materialsUncheckedCreateWithoutProject_stagesInput> | project_materialsCreateWithoutProject_stagesInput[] | project_materialsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProject_stagesInput | project_materialsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: project_materialsCreateManyProject_stagesInputEnvelope
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
  }

  export type project_mediaCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<project_mediaCreateWithoutProject_stagesInput, project_mediaUncheckedCreateWithoutProject_stagesInput> | project_mediaCreateWithoutProject_stagesInput[] | project_mediaUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProject_stagesInput | project_mediaCreateOrConnectWithoutProject_stagesInput[]
    createMany?: project_mediaCreateManyProject_stagesInputEnvelope
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
  }

  export type project_staffCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<project_staffCreateWithoutProject_stagesInput, project_staffUncheckedCreateWithoutProject_stagesInput> | project_staffCreateWithoutProject_stagesInput[] | project_staffUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProject_stagesInput | project_staffCreateOrConnectWithoutProject_stagesInput[]
    createMany?: project_staffCreateManyProject_stagesInputEnvelope
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
  }

  export type projectsCreateNestedOneWithoutProject_stagesInput = {
    create?: XOR<projectsCreateWithoutProject_stagesInput, projectsUncheckedCreateWithoutProject_stagesInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_stagesInput
    connect?: projectsWhereUniqueInput
  }

  export type site_reportsCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<site_reportsCreateWithoutProject_stagesInput, site_reportsUncheckedCreateWithoutProject_stagesInput> | site_reportsCreateWithoutProject_stagesInput[] | site_reportsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProject_stagesInput | site_reportsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: site_reportsCreateManyProject_stagesInputEnvelope
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
  }

  export type stage_checklistsCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<stage_checklistsCreateWithoutProject_stagesInput, stage_checklistsUncheckedCreateWithoutProject_stagesInput> | stage_checklistsCreateWithoutProject_stagesInput[] | stage_checklistsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutProject_stagesInput | stage_checklistsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: stage_checklistsCreateManyProject_stagesInputEnvelope
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
  }

  export type stage_tagsCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<stage_tagsCreateWithoutProject_stagesInput, stage_tagsUncheckedCreateWithoutProject_stagesInput> | stage_tagsCreateWithoutProject_stagesInput[] | stage_tagsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutProject_stagesInput | stage_tagsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: stage_tagsCreateManyProject_stagesInputEnvelope
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
  }

  export type tasksCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<tasksCreateWithoutProject_stagesInput, tasksUncheckedCreateWithoutProject_stagesInput> | tasksCreateWithoutProject_stagesInput[] | tasksUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProject_stagesInput | tasksCreateOrConnectWithoutProject_stagesInput[]
    createMany?: tasksCreateManyProject_stagesInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type time_logsCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<time_logsCreateWithoutProject_stagesInput, time_logsUncheckedCreateWithoutProject_stagesInput> | time_logsCreateWithoutProject_stagesInput[] | time_logsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProject_stagesInput | time_logsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: time_logsCreateManyProject_stagesInputEnvelope
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
  }

  export type project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<project_materialsCreateWithoutProject_stagesInput, project_materialsUncheckedCreateWithoutProject_stagesInput> | project_materialsCreateWithoutProject_stagesInput[] | project_materialsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProject_stagesInput | project_materialsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: project_materialsCreateManyProject_stagesInputEnvelope
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
  }

  export type project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<project_mediaCreateWithoutProject_stagesInput, project_mediaUncheckedCreateWithoutProject_stagesInput> | project_mediaCreateWithoutProject_stagesInput[] | project_mediaUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProject_stagesInput | project_mediaCreateOrConnectWithoutProject_stagesInput[]
    createMany?: project_mediaCreateManyProject_stagesInputEnvelope
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
  }

  export type project_staffUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<project_staffCreateWithoutProject_stagesInput, project_staffUncheckedCreateWithoutProject_stagesInput> | project_staffCreateWithoutProject_stagesInput[] | project_staffUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProject_stagesInput | project_staffCreateOrConnectWithoutProject_stagesInput[]
    createMany?: project_staffCreateManyProject_stagesInputEnvelope
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
  }

  export type site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<site_reportsCreateWithoutProject_stagesInput, site_reportsUncheckedCreateWithoutProject_stagesInput> | site_reportsCreateWithoutProject_stagesInput[] | site_reportsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProject_stagesInput | site_reportsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: site_reportsCreateManyProject_stagesInputEnvelope
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
  }

  export type stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<stage_checklistsCreateWithoutProject_stagesInput, stage_checklistsUncheckedCreateWithoutProject_stagesInput> | stage_checklistsCreateWithoutProject_stagesInput[] | stage_checklistsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutProject_stagesInput | stage_checklistsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: stage_checklistsCreateManyProject_stagesInputEnvelope
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
  }

  export type stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<stage_tagsCreateWithoutProject_stagesInput, stage_tagsUncheckedCreateWithoutProject_stagesInput> | stage_tagsCreateWithoutProject_stagesInput[] | stage_tagsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutProject_stagesInput | stage_tagsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: stage_tagsCreateManyProject_stagesInputEnvelope
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
  }

  export type tasksUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<tasksCreateWithoutProject_stagesInput, tasksUncheckedCreateWithoutProject_stagesInput> | tasksCreateWithoutProject_stagesInput[] | tasksUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProject_stagesInput | tasksCreateOrConnectWithoutProject_stagesInput[]
    createMany?: tasksCreateManyProject_stagesInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type time_logsUncheckedCreateNestedManyWithoutProject_stagesInput = {
    create?: XOR<time_logsCreateWithoutProject_stagesInput, time_logsUncheckedCreateWithoutProject_stagesInput> | time_logsCreateWithoutProject_stagesInput[] | time_logsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProject_stagesInput | time_logsCreateOrConnectWithoutProject_stagesInput[]
    createMany?: time_logsCreateManyProject_stagesInputEnvelope
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
  }

  export type project_materialsUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<project_materialsCreateWithoutProject_stagesInput, project_materialsUncheckedCreateWithoutProject_stagesInput> | project_materialsCreateWithoutProject_stagesInput[] | project_materialsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProject_stagesInput | project_materialsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: project_materialsUpsertWithWhereUniqueWithoutProject_stagesInput | project_materialsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: project_materialsCreateManyProject_stagesInputEnvelope
    set?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    disconnect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    delete?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    update?: project_materialsUpdateWithWhereUniqueWithoutProject_stagesInput | project_materialsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: project_materialsUpdateManyWithWhereWithoutProject_stagesInput | project_materialsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
  }

  export type project_mediaUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<project_mediaCreateWithoutProject_stagesInput, project_mediaUncheckedCreateWithoutProject_stagesInput> | project_mediaCreateWithoutProject_stagesInput[] | project_mediaUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProject_stagesInput | project_mediaCreateOrConnectWithoutProject_stagesInput[]
    upsert?: project_mediaUpsertWithWhereUniqueWithoutProject_stagesInput | project_mediaUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: project_mediaCreateManyProject_stagesInputEnvelope
    set?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    disconnect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    delete?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    update?: project_mediaUpdateWithWhereUniqueWithoutProject_stagesInput | project_mediaUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: project_mediaUpdateManyWithWhereWithoutProject_stagesInput | project_mediaUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
  }

  export type project_staffUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<project_staffCreateWithoutProject_stagesInput, project_staffUncheckedCreateWithoutProject_stagesInput> | project_staffCreateWithoutProject_stagesInput[] | project_staffUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProject_stagesInput | project_staffCreateOrConnectWithoutProject_stagesInput[]
    upsert?: project_staffUpsertWithWhereUniqueWithoutProject_stagesInput | project_staffUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: project_staffCreateManyProject_stagesInputEnvelope
    set?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    disconnect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    delete?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    update?: project_staffUpdateWithWhereUniqueWithoutProject_stagesInput | project_staffUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: project_staffUpdateManyWithWhereWithoutProject_stagesInput | project_staffUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
  }

  export type projectsUpdateOneRequiredWithoutProject_stagesNestedInput = {
    create?: XOR<projectsCreateWithoutProject_stagesInput, projectsUncheckedCreateWithoutProject_stagesInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_stagesInput
    upsert?: projectsUpsertWithoutProject_stagesInput
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutProject_stagesInput, projectsUpdateWithoutProject_stagesInput>, projectsUncheckedUpdateWithoutProject_stagesInput>
  }

  export type site_reportsUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<site_reportsCreateWithoutProject_stagesInput, site_reportsUncheckedCreateWithoutProject_stagesInput> | site_reportsCreateWithoutProject_stagesInput[] | site_reportsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProject_stagesInput | site_reportsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: site_reportsUpsertWithWhereUniqueWithoutProject_stagesInput | site_reportsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: site_reportsCreateManyProject_stagesInputEnvelope
    set?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    disconnect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    delete?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    update?: site_reportsUpdateWithWhereUniqueWithoutProject_stagesInput | site_reportsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: site_reportsUpdateManyWithWhereWithoutProject_stagesInput | site_reportsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
  }

  export type stage_checklistsUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<stage_checklistsCreateWithoutProject_stagesInput, stage_checklistsUncheckedCreateWithoutProject_stagesInput> | stage_checklistsCreateWithoutProject_stagesInput[] | stage_checklistsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutProject_stagesInput | stage_checklistsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: stage_checklistsUpsertWithWhereUniqueWithoutProject_stagesInput | stage_checklistsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: stage_checklistsCreateManyProject_stagesInputEnvelope
    set?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    disconnect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    delete?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    update?: stage_checklistsUpdateWithWhereUniqueWithoutProject_stagesInput | stage_checklistsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: stage_checklistsUpdateManyWithWhereWithoutProject_stagesInput | stage_checklistsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: stage_checklistsScalarWhereInput | stage_checklistsScalarWhereInput[]
  }

  export type stage_tagsUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<stage_tagsCreateWithoutProject_stagesInput, stage_tagsUncheckedCreateWithoutProject_stagesInput> | stage_tagsCreateWithoutProject_stagesInput[] | stage_tagsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutProject_stagesInput | stage_tagsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: stage_tagsUpsertWithWhereUniqueWithoutProject_stagesInput | stage_tagsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: stage_tagsCreateManyProject_stagesInputEnvelope
    set?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    disconnect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    delete?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    update?: stage_tagsUpdateWithWhereUniqueWithoutProject_stagesInput | stage_tagsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: stage_tagsUpdateManyWithWhereWithoutProject_stagesInput | stage_tagsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: stage_tagsScalarWhereInput | stage_tagsScalarWhereInput[]
  }

  export type tasksUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<tasksCreateWithoutProject_stagesInput, tasksUncheckedCreateWithoutProject_stagesInput> | tasksCreateWithoutProject_stagesInput[] | tasksUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProject_stagesInput | tasksCreateOrConnectWithoutProject_stagesInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutProject_stagesInput | tasksUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: tasksCreateManyProject_stagesInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutProject_stagesInput | tasksUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutProject_stagesInput | tasksUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type time_logsUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<time_logsCreateWithoutProject_stagesInput, time_logsUncheckedCreateWithoutProject_stagesInput> | time_logsCreateWithoutProject_stagesInput[] | time_logsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProject_stagesInput | time_logsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: time_logsUpsertWithWhereUniqueWithoutProject_stagesInput | time_logsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: time_logsCreateManyProject_stagesInputEnvelope
    set?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    disconnect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    delete?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    update?: time_logsUpdateWithWhereUniqueWithoutProject_stagesInput | time_logsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: time_logsUpdateManyWithWhereWithoutProject_stagesInput | time_logsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
  }

  export type project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<project_materialsCreateWithoutProject_stagesInput, project_materialsUncheckedCreateWithoutProject_stagesInput> | project_materialsCreateWithoutProject_stagesInput[] | project_materialsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProject_stagesInput | project_materialsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: project_materialsUpsertWithWhereUniqueWithoutProject_stagesInput | project_materialsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: project_materialsCreateManyProject_stagesInputEnvelope
    set?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    disconnect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    delete?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    update?: project_materialsUpdateWithWhereUniqueWithoutProject_stagesInput | project_materialsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: project_materialsUpdateManyWithWhereWithoutProject_stagesInput | project_materialsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
  }

  export type project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<project_mediaCreateWithoutProject_stagesInput, project_mediaUncheckedCreateWithoutProject_stagesInput> | project_mediaCreateWithoutProject_stagesInput[] | project_mediaUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProject_stagesInput | project_mediaCreateOrConnectWithoutProject_stagesInput[]
    upsert?: project_mediaUpsertWithWhereUniqueWithoutProject_stagesInput | project_mediaUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: project_mediaCreateManyProject_stagesInputEnvelope
    set?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    disconnect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    delete?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    update?: project_mediaUpdateWithWhereUniqueWithoutProject_stagesInput | project_mediaUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: project_mediaUpdateManyWithWhereWithoutProject_stagesInput | project_mediaUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
  }

  export type project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<project_staffCreateWithoutProject_stagesInput, project_staffUncheckedCreateWithoutProject_stagesInput> | project_staffCreateWithoutProject_stagesInput[] | project_staffUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProject_stagesInput | project_staffCreateOrConnectWithoutProject_stagesInput[]
    upsert?: project_staffUpsertWithWhereUniqueWithoutProject_stagesInput | project_staffUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: project_staffCreateManyProject_stagesInputEnvelope
    set?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    disconnect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    delete?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    update?: project_staffUpdateWithWhereUniqueWithoutProject_stagesInput | project_staffUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: project_staffUpdateManyWithWhereWithoutProject_stagesInput | project_staffUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
  }

  export type site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<site_reportsCreateWithoutProject_stagesInput, site_reportsUncheckedCreateWithoutProject_stagesInput> | site_reportsCreateWithoutProject_stagesInput[] | site_reportsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProject_stagesInput | site_reportsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: site_reportsUpsertWithWhereUniqueWithoutProject_stagesInput | site_reportsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: site_reportsCreateManyProject_stagesInputEnvelope
    set?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    disconnect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    delete?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    update?: site_reportsUpdateWithWhereUniqueWithoutProject_stagesInput | site_reportsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: site_reportsUpdateManyWithWhereWithoutProject_stagesInput | site_reportsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
  }

  export type stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<stage_checklistsCreateWithoutProject_stagesInput, stage_checklistsUncheckedCreateWithoutProject_stagesInput> | stage_checklistsCreateWithoutProject_stagesInput[] | stage_checklistsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutProject_stagesInput | stage_checklistsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: stage_checklistsUpsertWithWhereUniqueWithoutProject_stagesInput | stage_checklistsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: stage_checklistsCreateManyProject_stagesInputEnvelope
    set?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    disconnect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    delete?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    update?: stage_checklistsUpdateWithWhereUniqueWithoutProject_stagesInput | stage_checklistsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: stage_checklistsUpdateManyWithWhereWithoutProject_stagesInput | stage_checklistsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: stage_checklistsScalarWhereInput | stage_checklistsScalarWhereInput[]
  }

  export type stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<stage_tagsCreateWithoutProject_stagesInput, stage_tagsUncheckedCreateWithoutProject_stagesInput> | stage_tagsCreateWithoutProject_stagesInput[] | stage_tagsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutProject_stagesInput | stage_tagsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: stage_tagsUpsertWithWhereUniqueWithoutProject_stagesInput | stage_tagsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: stage_tagsCreateManyProject_stagesInputEnvelope
    set?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    disconnect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    delete?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    update?: stage_tagsUpdateWithWhereUniqueWithoutProject_stagesInput | stage_tagsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: stage_tagsUpdateManyWithWhereWithoutProject_stagesInput | stage_tagsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: stage_tagsScalarWhereInput | stage_tagsScalarWhereInput[]
  }

  export type tasksUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<tasksCreateWithoutProject_stagesInput, tasksUncheckedCreateWithoutProject_stagesInput> | tasksCreateWithoutProject_stagesInput[] | tasksUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProject_stagesInput | tasksCreateOrConnectWithoutProject_stagesInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutProject_stagesInput | tasksUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: tasksCreateManyProject_stagesInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutProject_stagesInput | tasksUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutProject_stagesInput | tasksUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput = {
    create?: XOR<time_logsCreateWithoutProject_stagesInput, time_logsUncheckedCreateWithoutProject_stagesInput> | time_logsCreateWithoutProject_stagesInput[] | time_logsUncheckedCreateWithoutProject_stagesInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProject_stagesInput | time_logsCreateOrConnectWithoutProject_stagesInput[]
    upsert?: time_logsUpsertWithWhereUniqueWithoutProject_stagesInput | time_logsUpsertWithWhereUniqueWithoutProject_stagesInput[]
    createMany?: time_logsCreateManyProject_stagesInputEnvelope
    set?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    disconnect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    delete?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    update?: time_logsUpdateWithWhereUniqueWithoutProject_stagesInput | time_logsUpdateWithWhereUniqueWithoutProject_stagesInput[]
    updateMany?: time_logsUpdateManyWithWhereWithoutProject_stagesInput | time_logsUpdateManyWithWhereWithoutProject_stagesInput[]
    deleteMany?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
  }

  export type projectsCreateNestedOneWithoutProject_tagsInput = {
    create?: XOR<projectsCreateWithoutProject_tagsInput, projectsUncheckedCreateWithoutProject_tagsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_tagsInput
    connect?: projectsWhereUniqueInput
  }

  export type tagsCreateNestedOneWithoutProject_tagsInput = {
    create?: XOR<tagsCreateWithoutProject_tagsInput, tagsUncheckedCreateWithoutProject_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutProject_tagsInput
    connect?: tagsWhereUniqueInput
  }

  export type projectsUpdateOneRequiredWithoutProject_tagsNestedInput = {
    create?: XOR<projectsCreateWithoutProject_tagsInput, projectsUncheckedCreateWithoutProject_tagsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutProject_tagsInput
    upsert?: projectsUpsertWithoutProject_tagsInput
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutProject_tagsInput, projectsUpdateWithoutProject_tagsInput>, projectsUncheckedUpdateWithoutProject_tagsInput>
  }

  export type tagsUpdateOneRequiredWithoutProject_tagsNestedInput = {
    create?: XOR<tagsCreateWithoutProject_tagsInput, tagsUncheckedCreateWithoutProject_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutProject_tagsInput
    upsert?: tagsUpsertWithoutProject_tagsInput
    connect?: tagsWhereUniqueInput
    update?: XOR<XOR<tagsUpdateToOneWithWhereWithoutProject_tagsInput, tagsUpdateWithoutProject_tagsInput>, tagsUncheckedUpdateWithoutProject_tagsInput>
  }

  export type documentsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<documentsCreateWithoutProjectsInput, documentsUncheckedCreateWithoutProjectsInput> | documentsCreateWithoutProjectsInput[] | documentsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutProjectsInput | documentsCreateOrConnectWithoutProjectsInput[]
    createMany?: documentsCreateManyProjectsInputEnvelope
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
  }

  export type eventsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<eventsCreateWithoutProjectsInput, eventsUncheckedCreateWithoutProjectsInput> | eventsCreateWithoutProjectsInput[] | eventsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutProjectsInput | eventsCreateOrConnectWithoutProjectsInput[]
    createMany?: eventsCreateManyProjectsInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type project_materialsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_materialsCreateWithoutProjectsInput, project_materialsUncheckedCreateWithoutProjectsInput> | project_materialsCreateWithoutProjectsInput[] | project_materialsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProjectsInput | project_materialsCreateOrConnectWithoutProjectsInput[]
    createMany?: project_materialsCreateManyProjectsInputEnvelope
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
  }

  export type project_mediaCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_mediaCreateWithoutProjectsInput, project_mediaUncheckedCreateWithoutProjectsInput> | project_mediaCreateWithoutProjectsInput[] | project_mediaUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProjectsInput | project_mediaCreateOrConnectWithoutProjectsInput[]
    createMany?: project_mediaCreateManyProjectsInputEnvelope
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
  }

  export type project_staffCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_staffCreateWithoutProjectsInput, project_staffUncheckedCreateWithoutProjectsInput> | project_staffCreateWithoutProjectsInput[] | project_staffUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProjectsInput | project_staffCreateOrConnectWithoutProjectsInput[]
    createMany?: project_staffCreateManyProjectsInputEnvelope
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
  }

  export type project_stagesCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_stagesCreateWithoutProjectsInput, project_stagesUncheckedCreateWithoutProjectsInput> | project_stagesCreateWithoutProjectsInput[] | project_stagesUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_stagesCreateOrConnectWithoutProjectsInput | project_stagesCreateOrConnectWithoutProjectsInput[]
    createMany?: project_stagesCreateManyProjectsInputEnvelope
    connect?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
  }

  export type project_tagsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_tagsCreateWithoutProjectsInput, project_tagsUncheckedCreateWithoutProjectsInput> | project_tagsCreateWithoutProjectsInput[] | project_tagsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutProjectsInput | project_tagsCreateOrConnectWithoutProjectsInput[]
    createMany?: project_tagsCreateManyProjectsInputEnvelope
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
  }

  export type addressesCreateNestedOneWithoutProjectsInput = {
    create?: XOR<addressesCreateWithoutProjectsInput, addressesUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: addressesCreateOrConnectWithoutProjectsInput
    connect?: addressesWhereUniqueInput
  }

  export type clientsCreateNestedOneWithoutProjectsInput = {
    create?: XOR<clientsCreateWithoutProjectsInput, clientsUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutProjectsInput
    connect?: clientsWhereUniqueInput
  }

  export type site_reportsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<site_reportsCreateWithoutProjectsInput, site_reportsUncheckedCreateWithoutProjectsInput> | site_reportsCreateWithoutProjectsInput[] | site_reportsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProjectsInput | site_reportsCreateOrConnectWithoutProjectsInput[]
    createMany?: site_reportsCreateManyProjectsInputEnvelope
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
  }

  export type time_logsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<time_logsCreateWithoutProjectsInput, time_logsUncheckedCreateWithoutProjectsInput> | time_logsCreateWithoutProjectsInput[] | time_logsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProjectsInput | time_logsCreateOrConnectWithoutProjectsInput[]
    createMany?: time_logsCreateManyProjectsInputEnvelope
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
  }

  export type documentsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<documentsCreateWithoutProjectsInput, documentsUncheckedCreateWithoutProjectsInput> | documentsCreateWithoutProjectsInput[] | documentsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutProjectsInput | documentsCreateOrConnectWithoutProjectsInput[]
    createMany?: documentsCreateManyProjectsInputEnvelope
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
  }

  export type eventsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<eventsCreateWithoutProjectsInput, eventsUncheckedCreateWithoutProjectsInput> | eventsCreateWithoutProjectsInput[] | eventsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutProjectsInput | eventsCreateOrConnectWithoutProjectsInput[]
    createMany?: eventsCreateManyProjectsInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type project_materialsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_materialsCreateWithoutProjectsInput, project_materialsUncheckedCreateWithoutProjectsInput> | project_materialsCreateWithoutProjectsInput[] | project_materialsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProjectsInput | project_materialsCreateOrConnectWithoutProjectsInput[]
    createMany?: project_materialsCreateManyProjectsInputEnvelope
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
  }

  export type project_mediaUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_mediaCreateWithoutProjectsInput, project_mediaUncheckedCreateWithoutProjectsInput> | project_mediaCreateWithoutProjectsInput[] | project_mediaUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProjectsInput | project_mediaCreateOrConnectWithoutProjectsInput[]
    createMany?: project_mediaCreateManyProjectsInputEnvelope
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
  }

  export type project_staffUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_staffCreateWithoutProjectsInput, project_staffUncheckedCreateWithoutProjectsInput> | project_staffCreateWithoutProjectsInput[] | project_staffUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProjectsInput | project_staffCreateOrConnectWithoutProjectsInput[]
    createMany?: project_staffCreateManyProjectsInputEnvelope
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
  }

  export type project_stagesUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_stagesCreateWithoutProjectsInput, project_stagesUncheckedCreateWithoutProjectsInput> | project_stagesCreateWithoutProjectsInput[] | project_stagesUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_stagesCreateOrConnectWithoutProjectsInput | project_stagesCreateOrConnectWithoutProjectsInput[]
    createMany?: project_stagesCreateManyProjectsInputEnvelope
    connect?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
  }

  export type project_tagsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<project_tagsCreateWithoutProjectsInput, project_tagsUncheckedCreateWithoutProjectsInput> | project_tagsCreateWithoutProjectsInput[] | project_tagsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutProjectsInput | project_tagsCreateOrConnectWithoutProjectsInput[]
    createMany?: project_tagsCreateManyProjectsInputEnvelope
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
  }

  export type site_reportsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<site_reportsCreateWithoutProjectsInput, site_reportsUncheckedCreateWithoutProjectsInput> | site_reportsCreateWithoutProjectsInput[] | site_reportsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProjectsInput | site_reportsCreateOrConnectWithoutProjectsInput[]
    createMany?: site_reportsCreateManyProjectsInputEnvelope
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
  }

  export type time_logsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<time_logsCreateWithoutProjectsInput, time_logsUncheckedCreateWithoutProjectsInput> | time_logsCreateWithoutProjectsInput[] | time_logsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProjectsInput | time_logsCreateOrConnectWithoutProjectsInput[]
    createMany?: time_logsCreateManyProjectsInputEnvelope
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
  }

  export type NullableEnumproject_statusFieldUpdateOperationsInput = {
    set?: $Enums.project_status | null
  }

  export type documentsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<documentsCreateWithoutProjectsInput, documentsUncheckedCreateWithoutProjectsInput> | documentsCreateWithoutProjectsInput[] | documentsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutProjectsInput | documentsCreateOrConnectWithoutProjectsInput[]
    upsert?: documentsUpsertWithWhereUniqueWithoutProjectsInput | documentsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: documentsCreateManyProjectsInputEnvelope
    set?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    disconnect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    delete?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    update?: documentsUpdateWithWhereUniqueWithoutProjectsInput | documentsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: documentsUpdateManyWithWhereWithoutProjectsInput | documentsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: documentsScalarWhereInput | documentsScalarWhereInput[]
  }

  export type eventsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<eventsCreateWithoutProjectsInput, eventsUncheckedCreateWithoutProjectsInput> | eventsCreateWithoutProjectsInput[] | eventsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutProjectsInput | eventsCreateOrConnectWithoutProjectsInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutProjectsInput | eventsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: eventsCreateManyProjectsInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutProjectsInput | eventsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutProjectsInput | eventsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type project_materialsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_materialsCreateWithoutProjectsInput, project_materialsUncheckedCreateWithoutProjectsInput> | project_materialsCreateWithoutProjectsInput[] | project_materialsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProjectsInput | project_materialsCreateOrConnectWithoutProjectsInput[]
    upsert?: project_materialsUpsertWithWhereUniqueWithoutProjectsInput | project_materialsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_materialsCreateManyProjectsInputEnvelope
    set?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    disconnect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    delete?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    update?: project_materialsUpdateWithWhereUniqueWithoutProjectsInput | project_materialsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_materialsUpdateManyWithWhereWithoutProjectsInput | project_materialsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
  }

  export type project_mediaUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_mediaCreateWithoutProjectsInput, project_mediaUncheckedCreateWithoutProjectsInput> | project_mediaCreateWithoutProjectsInput[] | project_mediaUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProjectsInput | project_mediaCreateOrConnectWithoutProjectsInput[]
    upsert?: project_mediaUpsertWithWhereUniqueWithoutProjectsInput | project_mediaUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_mediaCreateManyProjectsInputEnvelope
    set?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    disconnect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    delete?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    update?: project_mediaUpdateWithWhereUniqueWithoutProjectsInput | project_mediaUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_mediaUpdateManyWithWhereWithoutProjectsInput | project_mediaUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
  }

  export type project_staffUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_staffCreateWithoutProjectsInput, project_staffUncheckedCreateWithoutProjectsInput> | project_staffCreateWithoutProjectsInput[] | project_staffUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProjectsInput | project_staffCreateOrConnectWithoutProjectsInput[]
    upsert?: project_staffUpsertWithWhereUniqueWithoutProjectsInput | project_staffUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_staffCreateManyProjectsInputEnvelope
    set?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    disconnect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    delete?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    update?: project_staffUpdateWithWhereUniqueWithoutProjectsInput | project_staffUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_staffUpdateManyWithWhereWithoutProjectsInput | project_staffUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
  }

  export type project_stagesUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_stagesCreateWithoutProjectsInput, project_stagesUncheckedCreateWithoutProjectsInput> | project_stagesCreateWithoutProjectsInput[] | project_stagesUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_stagesCreateOrConnectWithoutProjectsInput | project_stagesCreateOrConnectWithoutProjectsInput[]
    upsert?: project_stagesUpsertWithWhereUniqueWithoutProjectsInput | project_stagesUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_stagesCreateManyProjectsInputEnvelope
    set?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    disconnect?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    delete?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    connect?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    update?: project_stagesUpdateWithWhereUniqueWithoutProjectsInput | project_stagesUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_stagesUpdateManyWithWhereWithoutProjectsInput | project_stagesUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_stagesScalarWhereInput | project_stagesScalarWhereInput[]
  }

  export type project_tagsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_tagsCreateWithoutProjectsInput, project_tagsUncheckedCreateWithoutProjectsInput> | project_tagsCreateWithoutProjectsInput[] | project_tagsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutProjectsInput | project_tagsCreateOrConnectWithoutProjectsInput[]
    upsert?: project_tagsUpsertWithWhereUniqueWithoutProjectsInput | project_tagsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_tagsCreateManyProjectsInputEnvelope
    set?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    disconnect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    delete?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    update?: project_tagsUpdateWithWhereUniqueWithoutProjectsInput | project_tagsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_tagsUpdateManyWithWhereWithoutProjectsInput | project_tagsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_tagsScalarWhereInput | project_tagsScalarWhereInput[]
  }

  export type addressesUpdateOneWithoutProjectsNestedInput = {
    create?: XOR<addressesCreateWithoutProjectsInput, addressesUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: addressesCreateOrConnectWithoutProjectsInput
    upsert?: addressesUpsertWithoutProjectsInput
    disconnect?: addressesWhereInput | boolean
    delete?: addressesWhereInput | boolean
    connect?: addressesWhereUniqueInput
    update?: XOR<XOR<addressesUpdateToOneWithWhereWithoutProjectsInput, addressesUpdateWithoutProjectsInput>, addressesUncheckedUpdateWithoutProjectsInput>
  }

  export type clientsUpdateOneRequiredWithoutProjectsNestedInput = {
    create?: XOR<clientsCreateWithoutProjectsInput, clientsUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutProjectsInput
    upsert?: clientsUpsertWithoutProjectsInput
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutProjectsInput, clientsUpdateWithoutProjectsInput>, clientsUncheckedUpdateWithoutProjectsInput>
  }

  export type site_reportsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<site_reportsCreateWithoutProjectsInput, site_reportsUncheckedCreateWithoutProjectsInput> | site_reportsCreateWithoutProjectsInput[] | site_reportsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProjectsInput | site_reportsCreateOrConnectWithoutProjectsInput[]
    upsert?: site_reportsUpsertWithWhereUniqueWithoutProjectsInput | site_reportsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: site_reportsCreateManyProjectsInputEnvelope
    set?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    disconnect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    delete?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    update?: site_reportsUpdateWithWhereUniqueWithoutProjectsInput | site_reportsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: site_reportsUpdateManyWithWhereWithoutProjectsInput | site_reportsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
  }

  export type time_logsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<time_logsCreateWithoutProjectsInput, time_logsUncheckedCreateWithoutProjectsInput> | time_logsCreateWithoutProjectsInput[] | time_logsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProjectsInput | time_logsCreateOrConnectWithoutProjectsInput[]
    upsert?: time_logsUpsertWithWhereUniqueWithoutProjectsInput | time_logsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: time_logsCreateManyProjectsInputEnvelope
    set?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    disconnect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    delete?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    update?: time_logsUpdateWithWhereUniqueWithoutProjectsInput | time_logsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: time_logsUpdateManyWithWhereWithoutProjectsInput | time_logsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
  }

  export type documentsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<documentsCreateWithoutProjectsInput, documentsUncheckedCreateWithoutProjectsInput> | documentsCreateWithoutProjectsInput[] | documentsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: documentsCreateOrConnectWithoutProjectsInput | documentsCreateOrConnectWithoutProjectsInput[]
    upsert?: documentsUpsertWithWhereUniqueWithoutProjectsInput | documentsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: documentsCreateManyProjectsInputEnvelope
    set?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    disconnect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    delete?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    connect?: documentsWhereUniqueInput | documentsWhereUniqueInput[]
    update?: documentsUpdateWithWhereUniqueWithoutProjectsInput | documentsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: documentsUpdateManyWithWhereWithoutProjectsInput | documentsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: documentsScalarWhereInput | documentsScalarWhereInput[]
  }

  export type eventsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<eventsCreateWithoutProjectsInput, eventsUncheckedCreateWithoutProjectsInput> | eventsCreateWithoutProjectsInput[] | eventsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutProjectsInput | eventsCreateOrConnectWithoutProjectsInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutProjectsInput | eventsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: eventsCreateManyProjectsInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutProjectsInput | eventsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutProjectsInput | eventsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type project_materialsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_materialsCreateWithoutProjectsInput, project_materialsUncheckedCreateWithoutProjectsInput> | project_materialsCreateWithoutProjectsInput[] | project_materialsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_materialsCreateOrConnectWithoutProjectsInput | project_materialsCreateOrConnectWithoutProjectsInput[]
    upsert?: project_materialsUpsertWithWhereUniqueWithoutProjectsInput | project_materialsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_materialsCreateManyProjectsInputEnvelope
    set?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    disconnect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    delete?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    connect?: project_materialsWhereUniqueInput | project_materialsWhereUniqueInput[]
    update?: project_materialsUpdateWithWhereUniqueWithoutProjectsInput | project_materialsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_materialsUpdateManyWithWhereWithoutProjectsInput | project_materialsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
  }

  export type project_mediaUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_mediaCreateWithoutProjectsInput, project_mediaUncheckedCreateWithoutProjectsInput> | project_mediaCreateWithoutProjectsInput[] | project_mediaUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutProjectsInput | project_mediaCreateOrConnectWithoutProjectsInput[]
    upsert?: project_mediaUpsertWithWhereUniqueWithoutProjectsInput | project_mediaUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_mediaCreateManyProjectsInputEnvelope
    set?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    disconnect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    delete?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    update?: project_mediaUpdateWithWhereUniqueWithoutProjectsInput | project_mediaUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_mediaUpdateManyWithWhereWithoutProjectsInput | project_mediaUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
  }

  export type project_staffUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_staffCreateWithoutProjectsInput, project_staffUncheckedCreateWithoutProjectsInput> | project_staffCreateWithoutProjectsInput[] | project_staffUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutProjectsInput | project_staffCreateOrConnectWithoutProjectsInput[]
    upsert?: project_staffUpsertWithWhereUniqueWithoutProjectsInput | project_staffUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_staffCreateManyProjectsInputEnvelope
    set?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    disconnect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    delete?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    update?: project_staffUpdateWithWhereUniqueWithoutProjectsInput | project_staffUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_staffUpdateManyWithWhereWithoutProjectsInput | project_staffUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
  }

  export type project_stagesUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_stagesCreateWithoutProjectsInput, project_stagesUncheckedCreateWithoutProjectsInput> | project_stagesCreateWithoutProjectsInput[] | project_stagesUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_stagesCreateOrConnectWithoutProjectsInput | project_stagesCreateOrConnectWithoutProjectsInput[]
    upsert?: project_stagesUpsertWithWhereUniqueWithoutProjectsInput | project_stagesUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_stagesCreateManyProjectsInputEnvelope
    set?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    disconnect?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    delete?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    connect?: project_stagesWhereUniqueInput | project_stagesWhereUniqueInput[]
    update?: project_stagesUpdateWithWhereUniqueWithoutProjectsInput | project_stagesUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_stagesUpdateManyWithWhereWithoutProjectsInput | project_stagesUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_stagesScalarWhereInput | project_stagesScalarWhereInput[]
  }

  export type project_tagsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<project_tagsCreateWithoutProjectsInput, project_tagsUncheckedCreateWithoutProjectsInput> | project_tagsCreateWithoutProjectsInput[] | project_tagsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutProjectsInput | project_tagsCreateOrConnectWithoutProjectsInput[]
    upsert?: project_tagsUpsertWithWhereUniqueWithoutProjectsInput | project_tagsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: project_tagsCreateManyProjectsInputEnvelope
    set?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    disconnect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    delete?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    update?: project_tagsUpdateWithWhereUniqueWithoutProjectsInput | project_tagsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: project_tagsUpdateManyWithWhereWithoutProjectsInput | project_tagsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: project_tagsScalarWhereInput | project_tagsScalarWhereInput[]
  }

  export type site_reportsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<site_reportsCreateWithoutProjectsInput, site_reportsUncheckedCreateWithoutProjectsInput> | site_reportsCreateWithoutProjectsInput[] | site_reportsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutProjectsInput | site_reportsCreateOrConnectWithoutProjectsInput[]
    upsert?: site_reportsUpsertWithWhereUniqueWithoutProjectsInput | site_reportsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: site_reportsCreateManyProjectsInputEnvelope
    set?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    disconnect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    delete?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    update?: site_reportsUpdateWithWhereUniqueWithoutProjectsInput | site_reportsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: site_reportsUpdateManyWithWhereWithoutProjectsInput | site_reportsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
  }

  export type time_logsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<time_logsCreateWithoutProjectsInput, time_logsUncheckedCreateWithoutProjectsInput> | time_logsCreateWithoutProjectsInput[] | time_logsUncheckedCreateWithoutProjectsInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutProjectsInput | time_logsCreateOrConnectWithoutProjectsInput[]
    upsert?: time_logsUpsertWithWhereUniqueWithoutProjectsInput | time_logsUpsertWithWhereUniqueWithoutProjectsInput[]
    createMany?: time_logsCreateManyProjectsInputEnvelope
    set?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    disconnect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    delete?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    update?: time_logsUpdateWithWhereUniqueWithoutProjectsInput | time_logsUpdateWithWhereUniqueWithoutProjectsInput[]
    updateMany?: time_logsUpdateManyWithWhereWithoutProjectsInput | time_logsUpdateManyWithWhereWithoutProjectsInput[]
    deleteMany?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
  }

  export type staffCreateNestedManyWithoutRolesInput = {
    create?: XOR<staffCreateWithoutRolesInput, staffUncheckedCreateWithoutRolesInput> | staffCreateWithoutRolesInput[] | staffUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutRolesInput | staffCreateOrConnectWithoutRolesInput[]
    createMany?: staffCreateManyRolesInputEnvelope
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
  }

  export type staffUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<staffCreateWithoutRolesInput, staffUncheckedCreateWithoutRolesInput> | staffCreateWithoutRolesInput[] | staffUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutRolesInput | staffCreateOrConnectWithoutRolesInput[]
    createMany?: staffCreateManyRolesInputEnvelope
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
  }

  export type staffUpdateManyWithoutRolesNestedInput = {
    create?: XOR<staffCreateWithoutRolesInput, staffUncheckedCreateWithoutRolesInput> | staffCreateWithoutRolesInput[] | staffUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutRolesInput | staffCreateOrConnectWithoutRolesInput[]
    upsert?: staffUpsertWithWhereUniqueWithoutRolesInput | staffUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: staffCreateManyRolesInputEnvelope
    set?: staffWhereUniqueInput | staffWhereUniqueInput[]
    disconnect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    delete?: staffWhereUniqueInput | staffWhereUniqueInput[]
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    update?: staffUpdateWithWhereUniqueWithoutRolesInput | staffUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: staffUpdateManyWithWhereWithoutRolesInput | staffUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: staffScalarWhereInput | staffScalarWhereInput[]
  }

  export type staffUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<staffCreateWithoutRolesInput, staffUncheckedCreateWithoutRolesInput> | staffCreateWithoutRolesInput[] | staffUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: staffCreateOrConnectWithoutRolesInput | staffCreateOrConnectWithoutRolesInput[]
    upsert?: staffUpsertWithWhereUniqueWithoutRolesInput | staffUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: staffCreateManyRolesInputEnvelope
    set?: staffWhereUniqueInput | staffWhereUniqueInput[]
    disconnect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    delete?: staffWhereUniqueInput | staffWhereUniqueInput[]
    connect?: staffWhereUniqueInput | staffWhereUniqueInput[]
    update?: staffUpdateWithWhereUniqueWithoutRolesInput | staffUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: staffUpdateManyWithWhereWithoutRolesInput | staffUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: staffScalarWhereInput | staffScalarWhereInput[]
  }

  export type projectsCreateNestedOneWithoutSite_reportsInput = {
    create?: XOR<projectsCreateWithoutSite_reportsInput, projectsUncheckedCreateWithoutSite_reportsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutSite_reportsInput
    connect?: projectsWhereUniqueInput
  }

  export type staffCreateNestedOneWithoutSite_reportsInput = {
    create?: XOR<staffCreateWithoutSite_reportsInput, staffUncheckedCreateWithoutSite_reportsInput>
    connectOrCreate?: staffCreateOrConnectWithoutSite_reportsInput
    connect?: staffWhereUniqueInput
  }

  export type project_stagesCreateNestedOneWithoutSite_reportsInput = {
    create?: XOR<project_stagesCreateWithoutSite_reportsInput, project_stagesUncheckedCreateWithoutSite_reportsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutSite_reportsInput
    connect?: project_stagesWhereUniqueInput
  }

  export type projectsUpdateOneRequiredWithoutSite_reportsNestedInput = {
    create?: XOR<projectsCreateWithoutSite_reportsInput, projectsUncheckedCreateWithoutSite_reportsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutSite_reportsInput
    upsert?: projectsUpsertWithoutSite_reportsInput
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutSite_reportsInput, projectsUpdateWithoutSite_reportsInput>, projectsUncheckedUpdateWithoutSite_reportsInput>
  }

  export type staffUpdateOneWithoutSite_reportsNestedInput = {
    create?: XOR<staffCreateWithoutSite_reportsInput, staffUncheckedCreateWithoutSite_reportsInput>
    connectOrCreate?: staffCreateOrConnectWithoutSite_reportsInput
    upsert?: staffUpsertWithoutSite_reportsInput
    disconnect?: staffWhereInput | boolean
    delete?: staffWhereInput | boolean
    connect?: staffWhereUniqueInput
    update?: XOR<XOR<staffUpdateToOneWithWhereWithoutSite_reportsInput, staffUpdateWithoutSite_reportsInput>, staffUncheckedUpdateWithoutSite_reportsInput>
  }

  export type project_stagesUpdateOneWithoutSite_reportsNestedInput = {
    create?: XOR<project_stagesCreateWithoutSite_reportsInput, project_stagesUncheckedCreateWithoutSite_reportsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutSite_reportsInput
    upsert?: project_stagesUpsertWithoutSite_reportsInput
    disconnect?: project_stagesWhereInput | boolean
    delete?: project_stagesWhereInput | boolean
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutSite_reportsInput, project_stagesUpdateWithoutSite_reportsInput>, project_stagesUncheckedUpdateWithoutSite_reportsInput>
  }

  export type eventsCreateNestedManyWithoutStaffInput = {
    create?: XOR<eventsCreateWithoutStaffInput, eventsUncheckedCreateWithoutStaffInput> | eventsCreateWithoutStaffInput[] | eventsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutStaffInput | eventsCreateOrConnectWithoutStaffInput[]
    createMany?: eventsCreateManyStaffInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type project_mediaCreateNestedManyWithoutStaffInput = {
    create?: XOR<project_mediaCreateWithoutStaffInput, project_mediaUncheckedCreateWithoutStaffInput> | project_mediaCreateWithoutStaffInput[] | project_mediaUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutStaffInput | project_mediaCreateOrConnectWithoutStaffInput[]
    createMany?: project_mediaCreateManyStaffInputEnvelope
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
  }

  export type project_staffCreateNestedManyWithoutStaffInput = {
    create?: XOR<project_staffCreateWithoutStaffInput, project_staffUncheckedCreateWithoutStaffInput> | project_staffCreateWithoutStaffInput[] | project_staffUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutStaffInput | project_staffCreateOrConnectWithoutStaffInput[]
    createMany?: project_staffCreateManyStaffInputEnvelope
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
  }

  export type site_reportsCreateNestedManyWithoutStaffInput = {
    create?: XOR<site_reportsCreateWithoutStaffInput, site_reportsUncheckedCreateWithoutStaffInput> | site_reportsCreateWithoutStaffInput[] | site_reportsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutStaffInput | site_reportsCreateOrConnectWithoutStaffInput[]
    createMany?: site_reportsCreateManyStaffInputEnvelope
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
  }

  export type addressesCreateNestedOneWithoutStaffInput = {
    create?: XOR<addressesCreateWithoutStaffInput, addressesUncheckedCreateWithoutStaffInput>
    connectOrCreate?: addressesCreateOrConnectWithoutStaffInput
    connect?: addressesWhereUniqueInput
  }

  export type rolesCreateNestedOneWithoutStaffInput = {
    create?: XOR<rolesCreateWithoutStaffInput, rolesUncheckedCreateWithoutStaffInput>
    connectOrCreate?: rolesCreateOrConnectWithoutStaffInput
    connect?: rolesWhereUniqueInput
  }

  export type stage_checklistsCreateNestedManyWithoutStaffInput = {
    create?: XOR<stage_checklistsCreateWithoutStaffInput, stage_checklistsUncheckedCreateWithoutStaffInput> | stage_checklistsCreateWithoutStaffInput[] | stage_checklistsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutStaffInput | stage_checklistsCreateOrConnectWithoutStaffInput[]
    createMany?: stage_checklistsCreateManyStaffInputEnvelope
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
  }

  export type tasksCreateNestedManyWithoutStaffInput = {
    create?: XOR<tasksCreateWithoutStaffInput, tasksUncheckedCreateWithoutStaffInput> | tasksCreateWithoutStaffInput[] | tasksUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutStaffInput | tasksCreateOrConnectWithoutStaffInput[]
    createMany?: tasksCreateManyStaffInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type time_logsCreateNestedManyWithoutStaffInput = {
    create?: XOR<time_logsCreateWithoutStaffInput, time_logsUncheckedCreateWithoutStaffInput> | time_logsCreateWithoutStaffInput[] | time_logsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutStaffInput | time_logsCreateOrConnectWithoutStaffInput[]
    createMany?: time_logsCreateManyStaffInputEnvelope
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
  }

  export type eventsUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<eventsCreateWithoutStaffInput, eventsUncheckedCreateWithoutStaffInput> | eventsCreateWithoutStaffInput[] | eventsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutStaffInput | eventsCreateOrConnectWithoutStaffInput[]
    createMany?: eventsCreateManyStaffInputEnvelope
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
  }

  export type project_mediaUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<project_mediaCreateWithoutStaffInput, project_mediaUncheckedCreateWithoutStaffInput> | project_mediaCreateWithoutStaffInput[] | project_mediaUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutStaffInput | project_mediaCreateOrConnectWithoutStaffInput[]
    createMany?: project_mediaCreateManyStaffInputEnvelope
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
  }

  export type project_staffUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<project_staffCreateWithoutStaffInput, project_staffUncheckedCreateWithoutStaffInput> | project_staffCreateWithoutStaffInput[] | project_staffUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutStaffInput | project_staffCreateOrConnectWithoutStaffInput[]
    createMany?: project_staffCreateManyStaffInputEnvelope
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
  }

  export type site_reportsUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<site_reportsCreateWithoutStaffInput, site_reportsUncheckedCreateWithoutStaffInput> | site_reportsCreateWithoutStaffInput[] | site_reportsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutStaffInput | site_reportsCreateOrConnectWithoutStaffInput[]
    createMany?: site_reportsCreateManyStaffInputEnvelope
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
  }

  export type stage_checklistsUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<stage_checklistsCreateWithoutStaffInput, stage_checklistsUncheckedCreateWithoutStaffInput> | stage_checklistsCreateWithoutStaffInput[] | stage_checklistsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutStaffInput | stage_checklistsCreateOrConnectWithoutStaffInput[]
    createMany?: stage_checklistsCreateManyStaffInputEnvelope
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
  }

  export type tasksUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<tasksCreateWithoutStaffInput, tasksUncheckedCreateWithoutStaffInput> | tasksCreateWithoutStaffInput[] | tasksUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutStaffInput | tasksCreateOrConnectWithoutStaffInput[]
    createMany?: tasksCreateManyStaffInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type time_logsUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<time_logsCreateWithoutStaffInput, time_logsUncheckedCreateWithoutStaffInput> | time_logsCreateWithoutStaffInput[] | time_logsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutStaffInput | time_logsCreateOrConnectWithoutStaffInput[]
    createMany?: time_logsCreateManyStaffInputEnvelope
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
  }

  export type eventsUpdateManyWithoutStaffNestedInput = {
    create?: XOR<eventsCreateWithoutStaffInput, eventsUncheckedCreateWithoutStaffInput> | eventsCreateWithoutStaffInput[] | eventsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutStaffInput | eventsCreateOrConnectWithoutStaffInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutStaffInput | eventsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: eventsCreateManyStaffInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutStaffInput | eventsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutStaffInput | eventsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type project_mediaUpdateManyWithoutStaffNestedInput = {
    create?: XOR<project_mediaCreateWithoutStaffInput, project_mediaUncheckedCreateWithoutStaffInput> | project_mediaCreateWithoutStaffInput[] | project_mediaUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutStaffInput | project_mediaCreateOrConnectWithoutStaffInput[]
    upsert?: project_mediaUpsertWithWhereUniqueWithoutStaffInput | project_mediaUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: project_mediaCreateManyStaffInputEnvelope
    set?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    disconnect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    delete?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    update?: project_mediaUpdateWithWhereUniqueWithoutStaffInput | project_mediaUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: project_mediaUpdateManyWithWhereWithoutStaffInput | project_mediaUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
  }

  export type project_staffUpdateManyWithoutStaffNestedInput = {
    create?: XOR<project_staffCreateWithoutStaffInput, project_staffUncheckedCreateWithoutStaffInput> | project_staffCreateWithoutStaffInput[] | project_staffUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutStaffInput | project_staffCreateOrConnectWithoutStaffInput[]
    upsert?: project_staffUpsertWithWhereUniqueWithoutStaffInput | project_staffUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: project_staffCreateManyStaffInputEnvelope
    set?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    disconnect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    delete?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    update?: project_staffUpdateWithWhereUniqueWithoutStaffInput | project_staffUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: project_staffUpdateManyWithWhereWithoutStaffInput | project_staffUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
  }

  export type site_reportsUpdateManyWithoutStaffNestedInput = {
    create?: XOR<site_reportsCreateWithoutStaffInput, site_reportsUncheckedCreateWithoutStaffInput> | site_reportsCreateWithoutStaffInput[] | site_reportsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutStaffInput | site_reportsCreateOrConnectWithoutStaffInput[]
    upsert?: site_reportsUpsertWithWhereUniqueWithoutStaffInput | site_reportsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: site_reportsCreateManyStaffInputEnvelope
    set?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    disconnect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    delete?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    update?: site_reportsUpdateWithWhereUniqueWithoutStaffInput | site_reportsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: site_reportsUpdateManyWithWhereWithoutStaffInput | site_reportsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
  }

  export type addressesUpdateOneWithoutStaffNestedInput = {
    create?: XOR<addressesCreateWithoutStaffInput, addressesUncheckedCreateWithoutStaffInput>
    connectOrCreate?: addressesCreateOrConnectWithoutStaffInput
    upsert?: addressesUpsertWithoutStaffInput
    disconnect?: addressesWhereInput | boolean
    delete?: addressesWhereInput | boolean
    connect?: addressesWhereUniqueInput
    update?: XOR<XOR<addressesUpdateToOneWithWhereWithoutStaffInput, addressesUpdateWithoutStaffInput>, addressesUncheckedUpdateWithoutStaffInput>
  }

  export type rolesUpdateOneRequiredWithoutStaffNestedInput = {
    create?: XOR<rolesCreateWithoutStaffInput, rolesUncheckedCreateWithoutStaffInput>
    connectOrCreate?: rolesCreateOrConnectWithoutStaffInput
    upsert?: rolesUpsertWithoutStaffInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutStaffInput, rolesUpdateWithoutStaffInput>, rolesUncheckedUpdateWithoutStaffInput>
  }

  export type stage_checklistsUpdateManyWithoutStaffNestedInput = {
    create?: XOR<stage_checklistsCreateWithoutStaffInput, stage_checklistsUncheckedCreateWithoutStaffInput> | stage_checklistsCreateWithoutStaffInput[] | stage_checklistsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutStaffInput | stage_checklistsCreateOrConnectWithoutStaffInput[]
    upsert?: stage_checklistsUpsertWithWhereUniqueWithoutStaffInput | stage_checklistsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: stage_checklistsCreateManyStaffInputEnvelope
    set?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    disconnect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    delete?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    update?: stage_checklistsUpdateWithWhereUniqueWithoutStaffInput | stage_checklistsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: stage_checklistsUpdateManyWithWhereWithoutStaffInput | stage_checklistsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: stage_checklistsScalarWhereInput | stage_checklistsScalarWhereInput[]
  }

  export type tasksUpdateManyWithoutStaffNestedInput = {
    create?: XOR<tasksCreateWithoutStaffInput, tasksUncheckedCreateWithoutStaffInput> | tasksCreateWithoutStaffInput[] | tasksUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutStaffInput | tasksCreateOrConnectWithoutStaffInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutStaffInput | tasksUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: tasksCreateManyStaffInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutStaffInput | tasksUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutStaffInput | tasksUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type time_logsUpdateManyWithoutStaffNestedInput = {
    create?: XOR<time_logsCreateWithoutStaffInput, time_logsUncheckedCreateWithoutStaffInput> | time_logsCreateWithoutStaffInput[] | time_logsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutStaffInput | time_logsCreateOrConnectWithoutStaffInput[]
    upsert?: time_logsUpsertWithWhereUniqueWithoutStaffInput | time_logsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: time_logsCreateManyStaffInputEnvelope
    set?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    disconnect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    delete?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    update?: time_logsUpdateWithWhereUniqueWithoutStaffInput | time_logsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: time_logsUpdateManyWithWhereWithoutStaffInput | time_logsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
  }

  export type eventsUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<eventsCreateWithoutStaffInput, eventsUncheckedCreateWithoutStaffInput> | eventsCreateWithoutStaffInput[] | eventsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: eventsCreateOrConnectWithoutStaffInput | eventsCreateOrConnectWithoutStaffInput[]
    upsert?: eventsUpsertWithWhereUniqueWithoutStaffInput | eventsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: eventsCreateManyStaffInputEnvelope
    set?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    disconnect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    delete?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    connect?: eventsWhereUniqueInput | eventsWhereUniqueInput[]
    update?: eventsUpdateWithWhereUniqueWithoutStaffInput | eventsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: eventsUpdateManyWithWhereWithoutStaffInput | eventsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: eventsScalarWhereInput | eventsScalarWhereInput[]
  }

  export type project_mediaUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<project_mediaCreateWithoutStaffInput, project_mediaUncheckedCreateWithoutStaffInput> | project_mediaCreateWithoutStaffInput[] | project_mediaUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_mediaCreateOrConnectWithoutStaffInput | project_mediaCreateOrConnectWithoutStaffInput[]
    upsert?: project_mediaUpsertWithWhereUniqueWithoutStaffInput | project_mediaUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: project_mediaCreateManyStaffInputEnvelope
    set?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    disconnect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    delete?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    connect?: project_mediaWhereUniqueInput | project_mediaWhereUniqueInput[]
    update?: project_mediaUpdateWithWhereUniqueWithoutStaffInput | project_mediaUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: project_mediaUpdateManyWithWhereWithoutStaffInput | project_mediaUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
  }

  export type project_staffUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<project_staffCreateWithoutStaffInput, project_staffUncheckedCreateWithoutStaffInput> | project_staffCreateWithoutStaffInput[] | project_staffUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: project_staffCreateOrConnectWithoutStaffInput | project_staffCreateOrConnectWithoutStaffInput[]
    upsert?: project_staffUpsertWithWhereUniqueWithoutStaffInput | project_staffUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: project_staffCreateManyStaffInputEnvelope
    set?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    disconnect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    delete?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    connect?: project_staffWhereUniqueInput | project_staffWhereUniqueInput[]
    update?: project_staffUpdateWithWhereUniqueWithoutStaffInput | project_staffUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: project_staffUpdateManyWithWhereWithoutStaffInput | project_staffUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
  }

  export type site_reportsUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<site_reportsCreateWithoutStaffInput, site_reportsUncheckedCreateWithoutStaffInput> | site_reportsCreateWithoutStaffInput[] | site_reportsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: site_reportsCreateOrConnectWithoutStaffInput | site_reportsCreateOrConnectWithoutStaffInput[]
    upsert?: site_reportsUpsertWithWhereUniqueWithoutStaffInput | site_reportsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: site_reportsCreateManyStaffInputEnvelope
    set?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    disconnect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    delete?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    connect?: site_reportsWhereUniqueInput | site_reportsWhereUniqueInput[]
    update?: site_reportsUpdateWithWhereUniqueWithoutStaffInput | site_reportsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: site_reportsUpdateManyWithWhereWithoutStaffInput | site_reportsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
  }

  export type stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<stage_checklistsCreateWithoutStaffInput, stage_checklistsUncheckedCreateWithoutStaffInput> | stage_checklistsCreateWithoutStaffInput[] | stage_checklistsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: stage_checklistsCreateOrConnectWithoutStaffInput | stage_checklistsCreateOrConnectWithoutStaffInput[]
    upsert?: stage_checklistsUpsertWithWhereUniqueWithoutStaffInput | stage_checklistsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: stage_checklistsCreateManyStaffInputEnvelope
    set?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    disconnect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    delete?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    connect?: stage_checklistsWhereUniqueInput | stage_checklistsWhereUniqueInput[]
    update?: stage_checklistsUpdateWithWhereUniqueWithoutStaffInput | stage_checklistsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: stage_checklistsUpdateManyWithWhereWithoutStaffInput | stage_checklistsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: stage_checklistsScalarWhereInput | stage_checklistsScalarWhereInput[]
  }

  export type tasksUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<tasksCreateWithoutStaffInput, tasksUncheckedCreateWithoutStaffInput> | tasksCreateWithoutStaffInput[] | tasksUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutStaffInput | tasksCreateOrConnectWithoutStaffInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutStaffInput | tasksUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: tasksCreateManyStaffInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutStaffInput | tasksUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutStaffInput | tasksUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type time_logsUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<time_logsCreateWithoutStaffInput, time_logsUncheckedCreateWithoutStaffInput> | time_logsCreateWithoutStaffInput[] | time_logsUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: time_logsCreateOrConnectWithoutStaffInput | time_logsCreateOrConnectWithoutStaffInput[]
    upsert?: time_logsUpsertWithWhereUniqueWithoutStaffInput | time_logsUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: time_logsCreateManyStaffInputEnvelope
    set?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    disconnect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    delete?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    connect?: time_logsWhereUniqueInput | time_logsWhereUniqueInput[]
    update?: time_logsUpdateWithWhereUniqueWithoutStaffInput | time_logsUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: time_logsUpdateManyWithWhereWithoutStaffInput | time_logsUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
  }

  export type staffCreateNestedOneWithoutStage_checklistsInput = {
    create?: XOR<staffCreateWithoutStage_checklistsInput, staffUncheckedCreateWithoutStage_checklistsInput>
    connectOrCreate?: staffCreateOrConnectWithoutStage_checklistsInput
    connect?: staffWhereUniqueInput
  }

  export type project_stagesCreateNestedOneWithoutStage_checklistsInput = {
    create?: XOR<project_stagesCreateWithoutStage_checklistsInput, project_stagesUncheckedCreateWithoutStage_checklistsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutStage_checklistsInput
    connect?: project_stagesWhereUniqueInput
  }

  export type staffUpdateOneWithoutStage_checklistsNestedInput = {
    create?: XOR<staffCreateWithoutStage_checklistsInput, staffUncheckedCreateWithoutStage_checklistsInput>
    connectOrCreate?: staffCreateOrConnectWithoutStage_checklistsInput
    upsert?: staffUpsertWithoutStage_checklistsInput
    disconnect?: staffWhereInput | boolean
    delete?: staffWhereInput | boolean
    connect?: staffWhereUniqueInput
    update?: XOR<XOR<staffUpdateToOneWithWhereWithoutStage_checklistsInput, staffUpdateWithoutStage_checklistsInput>, staffUncheckedUpdateWithoutStage_checklistsInput>
  }

  export type project_stagesUpdateOneRequiredWithoutStage_checklistsNestedInput = {
    create?: XOR<project_stagesCreateWithoutStage_checklistsInput, project_stagesUncheckedCreateWithoutStage_checklistsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutStage_checklistsInput
    upsert?: project_stagesUpsertWithoutStage_checklistsInput
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutStage_checklistsInput, project_stagesUpdateWithoutStage_checklistsInput>, project_stagesUncheckedUpdateWithoutStage_checklistsInput>
  }

  export type project_stagesCreateNestedOneWithoutStage_tagsInput = {
    create?: XOR<project_stagesCreateWithoutStage_tagsInput, project_stagesUncheckedCreateWithoutStage_tagsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutStage_tagsInput
    connect?: project_stagesWhereUniqueInput
  }

  export type tagsCreateNestedOneWithoutStage_tagsInput = {
    create?: XOR<tagsCreateWithoutStage_tagsInput, tagsUncheckedCreateWithoutStage_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutStage_tagsInput
    connect?: tagsWhereUniqueInput
  }

  export type project_stagesUpdateOneRequiredWithoutStage_tagsNestedInput = {
    create?: XOR<project_stagesCreateWithoutStage_tagsInput, project_stagesUncheckedCreateWithoutStage_tagsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutStage_tagsInput
    upsert?: project_stagesUpsertWithoutStage_tagsInput
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutStage_tagsInput, project_stagesUpdateWithoutStage_tagsInput>, project_stagesUncheckedUpdateWithoutStage_tagsInput>
  }

  export type tagsUpdateOneRequiredWithoutStage_tagsNestedInput = {
    create?: XOR<tagsCreateWithoutStage_tagsInput, tagsUncheckedCreateWithoutStage_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutStage_tagsInput
    upsert?: tagsUpsertWithoutStage_tagsInput
    connect?: tagsWhereUniqueInput
    update?: XOR<XOR<tagsUpdateToOneWithWhereWithoutStage_tagsInput, tagsUpdateWithoutStage_tagsInput>, tagsUncheckedUpdateWithoutStage_tagsInput>
  }

  export type document_tagsCreateNestedManyWithoutTagsInput = {
    create?: XOR<document_tagsCreateWithoutTagsInput, document_tagsUncheckedCreateWithoutTagsInput> | document_tagsCreateWithoutTagsInput[] | document_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutTagsInput | document_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: document_tagsCreateManyTagsInputEnvelope
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
  }

  export type project_tagsCreateNestedManyWithoutTagsInput = {
    create?: XOR<project_tagsCreateWithoutTagsInput, project_tagsUncheckedCreateWithoutTagsInput> | project_tagsCreateWithoutTagsInput[] | project_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutTagsInput | project_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: project_tagsCreateManyTagsInputEnvelope
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
  }

  export type stage_tagsCreateNestedManyWithoutTagsInput = {
    create?: XOR<stage_tagsCreateWithoutTagsInput, stage_tagsUncheckedCreateWithoutTagsInput> | stage_tagsCreateWithoutTagsInput[] | stage_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutTagsInput | stage_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: stage_tagsCreateManyTagsInputEnvelope
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
  }

  export type document_tagsUncheckedCreateNestedManyWithoutTagsInput = {
    create?: XOR<document_tagsCreateWithoutTagsInput, document_tagsUncheckedCreateWithoutTagsInput> | document_tagsCreateWithoutTagsInput[] | document_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutTagsInput | document_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: document_tagsCreateManyTagsInputEnvelope
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
  }

  export type project_tagsUncheckedCreateNestedManyWithoutTagsInput = {
    create?: XOR<project_tagsCreateWithoutTagsInput, project_tagsUncheckedCreateWithoutTagsInput> | project_tagsCreateWithoutTagsInput[] | project_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutTagsInput | project_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: project_tagsCreateManyTagsInputEnvelope
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
  }

  export type stage_tagsUncheckedCreateNestedManyWithoutTagsInput = {
    create?: XOR<stage_tagsCreateWithoutTagsInput, stage_tagsUncheckedCreateWithoutTagsInput> | stage_tagsCreateWithoutTagsInput[] | stage_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutTagsInput | stage_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: stage_tagsCreateManyTagsInputEnvelope
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
  }

  export type document_tagsUpdateManyWithoutTagsNestedInput = {
    create?: XOR<document_tagsCreateWithoutTagsInput, document_tagsUncheckedCreateWithoutTagsInput> | document_tagsCreateWithoutTagsInput[] | document_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutTagsInput | document_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: document_tagsUpsertWithWhereUniqueWithoutTagsInput | document_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: document_tagsCreateManyTagsInputEnvelope
    set?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    disconnect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    delete?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    update?: document_tagsUpdateWithWhereUniqueWithoutTagsInput | document_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: document_tagsUpdateManyWithWhereWithoutTagsInput | document_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: document_tagsScalarWhereInput | document_tagsScalarWhereInput[]
  }

  export type project_tagsUpdateManyWithoutTagsNestedInput = {
    create?: XOR<project_tagsCreateWithoutTagsInput, project_tagsUncheckedCreateWithoutTagsInput> | project_tagsCreateWithoutTagsInput[] | project_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutTagsInput | project_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: project_tagsUpsertWithWhereUniqueWithoutTagsInput | project_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: project_tagsCreateManyTagsInputEnvelope
    set?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    disconnect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    delete?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    update?: project_tagsUpdateWithWhereUniqueWithoutTagsInput | project_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: project_tagsUpdateManyWithWhereWithoutTagsInput | project_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: project_tagsScalarWhereInput | project_tagsScalarWhereInput[]
  }

  export type stage_tagsUpdateManyWithoutTagsNestedInput = {
    create?: XOR<stage_tagsCreateWithoutTagsInput, stage_tagsUncheckedCreateWithoutTagsInput> | stage_tagsCreateWithoutTagsInput[] | stage_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutTagsInput | stage_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: stage_tagsUpsertWithWhereUniqueWithoutTagsInput | stage_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: stage_tagsCreateManyTagsInputEnvelope
    set?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    disconnect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    delete?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    update?: stage_tagsUpdateWithWhereUniqueWithoutTagsInput | stage_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: stage_tagsUpdateManyWithWhereWithoutTagsInput | stage_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: stage_tagsScalarWhereInput | stage_tagsScalarWhereInput[]
  }

  export type document_tagsUncheckedUpdateManyWithoutTagsNestedInput = {
    create?: XOR<document_tagsCreateWithoutTagsInput, document_tagsUncheckedCreateWithoutTagsInput> | document_tagsCreateWithoutTagsInput[] | document_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: document_tagsCreateOrConnectWithoutTagsInput | document_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: document_tagsUpsertWithWhereUniqueWithoutTagsInput | document_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: document_tagsCreateManyTagsInputEnvelope
    set?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    disconnect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    delete?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    connect?: document_tagsWhereUniqueInput | document_tagsWhereUniqueInput[]
    update?: document_tagsUpdateWithWhereUniqueWithoutTagsInput | document_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: document_tagsUpdateManyWithWhereWithoutTagsInput | document_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: document_tagsScalarWhereInput | document_tagsScalarWhereInput[]
  }

  export type project_tagsUncheckedUpdateManyWithoutTagsNestedInput = {
    create?: XOR<project_tagsCreateWithoutTagsInput, project_tagsUncheckedCreateWithoutTagsInput> | project_tagsCreateWithoutTagsInput[] | project_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: project_tagsCreateOrConnectWithoutTagsInput | project_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: project_tagsUpsertWithWhereUniqueWithoutTagsInput | project_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: project_tagsCreateManyTagsInputEnvelope
    set?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    disconnect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    delete?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    connect?: project_tagsWhereUniqueInput | project_tagsWhereUniqueInput[]
    update?: project_tagsUpdateWithWhereUniqueWithoutTagsInput | project_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: project_tagsUpdateManyWithWhereWithoutTagsInput | project_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: project_tagsScalarWhereInput | project_tagsScalarWhereInput[]
  }

  export type stage_tagsUncheckedUpdateManyWithoutTagsNestedInput = {
    create?: XOR<stage_tagsCreateWithoutTagsInput, stage_tagsUncheckedCreateWithoutTagsInput> | stage_tagsCreateWithoutTagsInput[] | stage_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: stage_tagsCreateOrConnectWithoutTagsInput | stage_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: stage_tagsUpsertWithWhereUniqueWithoutTagsInput | stage_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: stage_tagsCreateManyTagsInputEnvelope
    set?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    disconnect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    delete?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    connect?: stage_tagsWhereUniqueInput | stage_tagsWhereUniqueInput[]
    update?: stage_tagsUpdateWithWhereUniqueWithoutTagsInput | stage_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: stage_tagsUpdateManyWithWhereWithoutTagsInput | stage_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: stage_tagsScalarWhereInput | stage_tagsScalarWhereInput[]
  }

  export type staffCreateNestedOneWithoutTasksInput = {
    create?: XOR<staffCreateWithoutTasksInput, staffUncheckedCreateWithoutTasksInput>
    connectOrCreate?: staffCreateOrConnectWithoutTasksInput
    connect?: staffWhereUniqueInput
  }

  export type project_stagesCreateNestedOneWithoutTasksInput = {
    create?: XOR<project_stagesCreateWithoutTasksInput, project_stagesUncheckedCreateWithoutTasksInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutTasksInput
    connect?: project_stagesWhereUniqueInput
  }

  export type staffUpdateOneWithoutTasksNestedInput = {
    create?: XOR<staffCreateWithoutTasksInput, staffUncheckedCreateWithoutTasksInput>
    connectOrCreate?: staffCreateOrConnectWithoutTasksInput
    upsert?: staffUpsertWithoutTasksInput
    disconnect?: staffWhereInput | boolean
    delete?: staffWhereInput | boolean
    connect?: staffWhereUniqueInput
    update?: XOR<XOR<staffUpdateToOneWithWhereWithoutTasksInput, staffUpdateWithoutTasksInput>, staffUncheckedUpdateWithoutTasksInput>
  }

  export type project_stagesUpdateOneRequiredWithoutTasksNestedInput = {
    create?: XOR<project_stagesCreateWithoutTasksInput, project_stagesUncheckedCreateWithoutTasksInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutTasksInput
    upsert?: project_stagesUpsertWithoutTasksInput
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutTasksInput, project_stagesUpdateWithoutTasksInput>, project_stagesUncheckedUpdateWithoutTasksInput>
  }

  export type projectsCreateNestedOneWithoutTime_logsInput = {
    create?: XOR<projectsCreateWithoutTime_logsInput, projectsUncheckedCreateWithoutTime_logsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutTime_logsInput
    connect?: projectsWhereUniqueInput
  }

  export type staffCreateNestedOneWithoutTime_logsInput = {
    create?: XOR<staffCreateWithoutTime_logsInput, staffUncheckedCreateWithoutTime_logsInput>
    connectOrCreate?: staffCreateOrConnectWithoutTime_logsInput
    connect?: staffWhereUniqueInput
  }

  export type project_stagesCreateNestedOneWithoutTime_logsInput = {
    create?: XOR<project_stagesCreateWithoutTime_logsInput, project_stagesUncheckedCreateWithoutTime_logsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutTime_logsInput
    connect?: project_stagesWhereUniqueInput
  }

  export type projectsUpdateOneRequiredWithoutTime_logsNestedInput = {
    create?: XOR<projectsCreateWithoutTime_logsInput, projectsUncheckedCreateWithoutTime_logsInput>
    connectOrCreate?: projectsCreateOrConnectWithoutTime_logsInput
    upsert?: projectsUpsertWithoutTime_logsInput
    connect?: projectsWhereUniqueInput
    update?: XOR<XOR<projectsUpdateToOneWithWhereWithoutTime_logsInput, projectsUpdateWithoutTime_logsInput>, projectsUncheckedUpdateWithoutTime_logsInput>
  }

  export type staffUpdateOneRequiredWithoutTime_logsNestedInput = {
    create?: XOR<staffCreateWithoutTime_logsInput, staffUncheckedCreateWithoutTime_logsInput>
    connectOrCreate?: staffCreateOrConnectWithoutTime_logsInput
    upsert?: staffUpsertWithoutTime_logsInput
    connect?: staffWhereUniqueInput
    update?: XOR<XOR<staffUpdateToOneWithWhereWithoutTime_logsInput, staffUpdateWithoutTime_logsInput>, staffUncheckedUpdateWithoutTime_logsInput>
  }

  export type project_stagesUpdateOneWithoutTime_logsNestedInput = {
    create?: XOR<project_stagesCreateWithoutTime_logsInput, project_stagesUncheckedCreateWithoutTime_logsInput>
    connectOrCreate?: project_stagesCreateOrConnectWithoutTime_logsInput
    upsert?: project_stagesUpsertWithoutTime_logsInput
    disconnect?: project_stagesWhereInput | boolean
    delete?: project_stagesWhereInput | boolean
    connect?: project_stagesWhereUniqueInput
    update?: XOR<XOR<project_stagesUpdateToOneWithWhereWithoutTime_logsInput, project_stagesUpdateWithoutTime_logsInput>, project_stagesUncheckedUpdateWithoutTime_logsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumdocument_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.document_type | Enumdocument_typeFieldRefInput<$PrismaModel>
    in?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumdocument_typeFilter<$PrismaModel> | $Enums.document_type
  }

  export type NestedEnumdocument_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.document_status | Enumdocument_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumdocument_statusNullableFilter<$PrismaModel> | $Enums.document_status | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumdocument_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.document_type | Enumdocument_typeFieldRefInput<$PrismaModel>
    in?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.document_type[] | ListEnumdocument_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumdocument_typeWithAggregatesFilter<$PrismaModel> | $Enums.document_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumdocument_typeFilter<$PrismaModel>
    _max?: NestedEnumdocument_typeFilter<$PrismaModel>
  }

  export type NestedEnumdocument_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.document_status | Enumdocument_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.document_status[] | ListEnumdocument_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumdocument_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.document_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdocument_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumdocument_statusNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumevent_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.event_type | Enumevent_typeFieldRefInput<$PrismaModel>
    in?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumevent_typeFilter<$PrismaModel> | $Enums.event_type
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumevent_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.event_type | Enumevent_typeFieldRefInput<$PrismaModel>
    in?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.event_type[] | ListEnumevent_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumevent_typeWithAggregatesFilter<$PrismaModel> | $Enums.event_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumevent_typeFilter<$PrismaModel>
    _max?: NestedEnumevent_typeFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumproject_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.project_status | Enumproject_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_statusNullableFilter<$PrismaModel> | $Enums.project_status | null
  }

  export type NestedEnumproject_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.project_status | Enumproject_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.project_status[] | ListEnumproject_statusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.project_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumproject_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumproject_statusNullableFilter<$PrismaModel>
  }

  export type clientsCreateWithoutAddressesInput = {
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutClientsInput
    events?: eventsCreateNestedManyWithoutClientsInput
    projects?: projectsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutAddressesInput = {
    id?: number
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutClientsInput
    events?: eventsUncheckedCreateNestedManyWithoutClientsInput
    projects?: projectsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutAddressesInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutAddressesInput, clientsUncheckedCreateWithoutAddressesInput>
  }

  export type clientsCreateManyAddressesInputEnvelope = {
    data: clientsCreateManyAddressesInput | clientsCreateManyAddressesInput[]
    skipDuplicates?: boolean
  }

  export type projectsCreateWithoutAddressesInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutAddressesInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutAddressesInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutAddressesInput, projectsUncheckedCreateWithoutAddressesInput>
  }

  export type projectsCreateManyAddressesInputEnvelope = {
    data: projectsCreateManyAddressesInput | projectsCreateManyAddressesInput[]
    skipDuplicates?: boolean
  }

  export type staffCreateWithoutAddressesInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutAddressesInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutAddressesInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutAddressesInput, staffUncheckedCreateWithoutAddressesInput>
  }

  export type staffCreateManyAddressesInputEnvelope = {
    data: staffCreateManyAddressesInput | staffCreateManyAddressesInput[]
    skipDuplicates?: boolean
  }

  export type clientsUpsertWithWhereUniqueWithoutAddressesInput = {
    where: clientsWhereUniqueInput
    update: XOR<clientsUpdateWithoutAddressesInput, clientsUncheckedUpdateWithoutAddressesInput>
    create: XOR<clientsCreateWithoutAddressesInput, clientsUncheckedCreateWithoutAddressesInput>
  }

  export type clientsUpdateWithWhereUniqueWithoutAddressesInput = {
    where: clientsWhereUniqueInput
    data: XOR<clientsUpdateWithoutAddressesInput, clientsUncheckedUpdateWithoutAddressesInput>
  }

  export type clientsUpdateManyWithWhereWithoutAddressesInput = {
    where: clientsScalarWhereInput
    data: XOR<clientsUpdateManyMutationInput, clientsUncheckedUpdateManyWithoutAddressesInput>
  }

  export type clientsScalarWhereInput = {
    AND?: clientsScalarWhereInput | clientsScalarWhereInput[]
    OR?: clientsScalarWhereInput[]
    NOT?: clientsScalarWhereInput | clientsScalarWhereInput[]
    id?: IntFilter<"clients"> | number
    company_name?: StringNullableFilter<"clients"> | string | null
    firstname?: StringFilter<"clients"> | string
    lastname?: StringFilter<"clients"> | string
    email?: StringFilter<"clients"> | string
    phone?: StringNullableFilter<"clients"> | string | null
    mobile?: StringNullableFilter<"clients"> | string | null
    address_id?: IntNullableFilter<"clients"> | number | null
    siret?: StringNullableFilter<"clients"> | string | null
    notes?: StringNullableFilter<"clients"> | string | null
    created_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"clients"> | Date | string | null
  }

  export type projectsUpsertWithWhereUniqueWithoutAddressesInput = {
    where: projectsWhereUniqueInput
    update: XOR<projectsUpdateWithoutAddressesInput, projectsUncheckedUpdateWithoutAddressesInput>
    create: XOR<projectsCreateWithoutAddressesInput, projectsUncheckedCreateWithoutAddressesInput>
  }

  export type projectsUpdateWithWhereUniqueWithoutAddressesInput = {
    where: projectsWhereUniqueInput
    data: XOR<projectsUpdateWithoutAddressesInput, projectsUncheckedUpdateWithoutAddressesInput>
  }

  export type projectsUpdateManyWithWhereWithoutAddressesInput = {
    where: projectsScalarWhereInput
    data: XOR<projectsUpdateManyMutationInput, projectsUncheckedUpdateManyWithoutAddressesInput>
  }

  export type projectsScalarWhereInput = {
    AND?: projectsScalarWhereInput | projectsScalarWhereInput[]
    OR?: projectsScalarWhereInput[]
    NOT?: projectsScalarWhereInput | projectsScalarWhereInput[]
    id?: IntFilter<"projects"> | number
    reference?: StringFilter<"projects"> | string
    name?: StringFilter<"projects"> | string
    description?: StringNullableFilter<"projects"> | string | null
    client_id?: IntFilter<"projects"> | number
    address_id?: IntNullableFilter<"projects"> | number | null
    status?: Enumproject_statusNullableFilter<"projects"> | $Enums.project_status | null
    start_date?: DateTimeNullableFilter<"projects"> | Date | string | null
    end_date?: DateTimeNullableFilter<"projects"> | Date | string | null
    estimated_duration?: IntNullableFilter<"projects"> | number | null
    budget?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    actual_cost?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    margin?: DecimalNullableFilter<"projects"> | Decimal | DecimalJsLike | number | string | null
    priority?: IntNullableFilter<"projects"> | number | null
    notes?: StringNullableFilter<"projects"> | string | null
    created_at?: DateTimeNullableFilter<"projects"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"projects"> | Date | string | null
  }

  export type staffUpsertWithWhereUniqueWithoutAddressesInput = {
    where: staffWhereUniqueInput
    update: XOR<staffUpdateWithoutAddressesInput, staffUncheckedUpdateWithoutAddressesInput>
    create: XOR<staffCreateWithoutAddressesInput, staffUncheckedCreateWithoutAddressesInput>
  }

  export type staffUpdateWithWhereUniqueWithoutAddressesInput = {
    where: staffWhereUniqueInput
    data: XOR<staffUpdateWithoutAddressesInput, staffUncheckedUpdateWithoutAddressesInput>
  }

  export type staffUpdateManyWithWhereWithoutAddressesInput = {
    where: staffScalarWhereInput
    data: XOR<staffUpdateManyMutationInput, staffUncheckedUpdateManyWithoutAddressesInput>
  }

  export type staffScalarWhereInput = {
    AND?: staffScalarWhereInput | staffScalarWhereInput[]
    OR?: staffScalarWhereInput[]
    NOT?: staffScalarWhereInput | staffScalarWhereInput[]
    id?: IntFilter<"staff"> | number
    firstname?: StringFilter<"staff"> | string
    lastname?: StringFilter<"staff"> | string
    email?: StringFilter<"staff"> | string
    role_id?: IntFilter<"staff"> | number
    phone?: StringNullableFilter<"staff"> | string | null
    mobile?: StringNullableFilter<"staff"> | string | null
    address_id?: IntNullableFilter<"staff"> | number | null
    hire_date?: DateTimeFilter<"staff"> | Date | string
    is_available?: BoolNullableFilter<"staff"> | boolean | null
    created_at?: DateTimeNullableFilter<"staff"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"staff"> | Date | string | null
  }

  export type addressesCreateWithoutClientsInput = {
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    projects?: projectsCreateNestedManyWithoutAddressesInput
    staff?: staffCreateNestedManyWithoutAddressesInput
  }

  export type addressesUncheckedCreateWithoutClientsInput = {
    id?: number
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    projects?: projectsUncheckedCreateNestedManyWithoutAddressesInput
    staff?: staffUncheckedCreateNestedManyWithoutAddressesInput
  }

  export type addressesCreateOrConnectWithoutClientsInput = {
    where: addressesWhereUniqueInput
    create: XOR<addressesCreateWithoutClientsInput, addressesUncheckedCreateWithoutClientsInput>
  }

  export type documentsCreateWithoutClientsInput = {
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsCreateNestedManyWithoutDocumentsInput
    projects: projectsCreateNestedOneWithoutDocumentsInput
  }

  export type documentsUncheckedCreateWithoutClientsInput = {
    id?: number
    project_id: number
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsUncheckedCreateNestedManyWithoutDocumentsInput
  }

  export type documentsCreateOrConnectWithoutClientsInput = {
    where: documentsWhereUniqueInput
    create: XOR<documentsCreateWithoutClientsInput, documentsUncheckedCreateWithoutClientsInput>
  }

  export type documentsCreateManyClientsInputEnvelope = {
    data: documentsCreateManyClientsInput | documentsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type eventsCreateWithoutClientsInput = {
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    projects?: projectsCreateNestedOneWithoutEventsInput
    staff?: staffCreateNestedOneWithoutEventsInput
  }

  export type eventsUncheckedCreateWithoutClientsInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    project_id?: number | null
    staff_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type eventsCreateOrConnectWithoutClientsInput = {
    where: eventsWhereUniqueInput
    create: XOR<eventsCreateWithoutClientsInput, eventsUncheckedCreateWithoutClientsInput>
  }

  export type eventsCreateManyClientsInputEnvelope = {
    data: eventsCreateManyClientsInput | eventsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type projectsCreateWithoutClientsInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutClientsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutClientsInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutClientsInput, projectsUncheckedCreateWithoutClientsInput>
  }

  export type projectsCreateManyClientsInputEnvelope = {
    data: projectsCreateManyClientsInput | projectsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type addressesUpsertWithoutClientsInput = {
    update: XOR<addressesUpdateWithoutClientsInput, addressesUncheckedUpdateWithoutClientsInput>
    create: XOR<addressesCreateWithoutClientsInput, addressesUncheckedCreateWithoutClientsInput>
    where?: addressesWhereInput
  }

  export type addressesUpdateToOneWithWhereWithoutClientsInput = {
    where?: addressesWhereInput
    data: XOR<addressesUpdateWithoutClientsInput, addressesUncheckedUpdateWithoutClientsInput>
  }

  export type addressesUpdateWithoutClientsInput = {
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects?: projectsUpdateManyWithoutAddressesNestedInput
    staff?: staffUpdateManyWithoutAddressesNestedInput
  }

  export type addressesUncheckedUpdateWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects?: projectsUncheckedUpdateManyWithoutAddressesNestedInput
    staff?: staffUncheckedUpdateManyWithoutAddressesNestedInput
  }

  export type documentsUpsertWithWhereUniqueWithoutClientsInput = {
    where: documentsWhereUniqueInput
    update: XOR<documentsUpdateWithoutClientsInput, documentsUncheckedUpdateWithoutClientsInput>
    create: XOR<documentsCreateWithoutClientsInput, documentsUncheckedCreateWithoutClientsInput>
  }

  export type documentsUpdateWithWhereUniqueWithoutClientsInput = {
    where: documentsWhereUniqueInput
    data: XOR<documentsUpdateWithoutClientsInput, documentsUncheckedUpdateWithoutClientsInput>
  }

  export type documentsUpdateManyWithWhereWithoutClientsInput = {
    where: documentsScalarWhereInput
    data: XOR<documentsUpdateManyMutationInput, documentsUncheckedUpdateManyWithoutClientsInput>
  }

  export type documentsScalarWhereInput = {
    AND?: documentsScalarWhereInput | documentsScalarWhereInput[]
    OR?: documentsScalarWhereInput[]
    NOT?: documentsScalarWhereInput | documentsScalarWhereInput[]
    id?: IntFilter<"documents"> | number
    project_id?: IntFilter<"documents"> | number
    client_id?: IntNullableFilter<"documents"> | number | null
    type?: Enumdocument_typeFilter<"documents"> | $Enums.document_type
    reference?: StringFilter<"documents"> | string
    status?: Enumdocument_statusNullableFilter<"documents"> | $Enums.document_status | null
    amount?: DecimalNullableFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    tva_rate?: DecimalNullableFilter<"documents"> | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFilter<"documents"> | Date | string
    due_date?: DateTimeNullableFilter<"documents"> | Date | string | null
    payment_date?: DateTimeNullableFilter<"documents"> | Date | string | null
    payment_method?: StringNullableFilter<"documents"> | string | null
    notes?: StringNullableFilter<"documents"> | string | null
    file_path?: StringNullableFilter<"documents"> | string | null
    created_at?: DateTimeNullableFilter<"documents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"documents"> | Date | string | null
  }

  export type eventsUpsertWithWhereUniqueWithoutClientsInput = {
    where: eventsWhereUniqueInput
    update: XOR<eventsUpdateWithoutClientsInput, eventsUncheckedUpdateWithoutClientsInput>
    create: XOR<eventsCreateWithoutClientsInput, eventsUncheckedCreateWithoutClientsInput>
  }

  export type eventsUpdateWithWhereUniqueWithoutClientsInput = {
    where: eventsWhereUniqueInput
    data: XOR<eventsUpdateWithoutClientsInput, eventsUncheckedUpdateWithoutClientsInput>
  }

  export type eventsUpdateManyWithWhereWithoutClientsInput = {
    where: eventsScalarWhereInput
    data: XOR<eventsUpdateManyMutationInput, eventsUncheckedUpdateManyWithoutClientsInput>
  }

  export type eventsScalarWhereInput = {
    AND?: eventsScalarWhereInput | eventsScalarWhereInput[]
    OR?: eventsScalarWhereInput[]
    NOT?: eventsScalarWhereInput | eventsScalarWhereInput[]
    id?: IntFilter<"events"> | number
    title?: StringFilter<"events"> | string
    description?: StringNullableFilter<"events"> | string | null
    event_type?: Enumevent_typeFilter<"events"> | $Enums.event_type
    start_date?: DateTimeFilter<"events"> | Date | string
    end_date?: DateTimeFilter<"events"> | Date | string
    all_day?: BoolNullableFilter<"events"> | boolean | null
    location?: StringNullableFilter<"events"> | string | null
    project_id?: IntNullableFilter<"events"> | number | null
    staff_id?: IntNullableFilter<"events"> | number | null
    client_id?: IntNullableFilter<"events"> | number | null
    status?: StringNullableFilter<"events"> | string | null
    color?: StringNullableFilter<"events"> | string | null
    created_at?: DateTimeNullableFilter<"events"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"events"> | Date | string | null
  }

  export type projectsUpsertWithWhereUniqueWithoutClientsInput = {
    where: projectsWhereUniqueInput
    update: XOR<projectsUpdateWithoutClientsInput, projectsUncheckedUpdateWithoutClientsInput>
    create: XOR<projectsCreateWithoutClientsInput, projectsUncheckedCreateWithoutClientsInput>
  }

  export type projectsUpdateWithWhereUniqueWithoutClientsInput = {
    where: projectsWhereUniqueInput
    data: XOR<projectsUpdateWithoutClientsInput, projectsUncheckedUpdateWithoutClientsInput>
  }

  export type projectsUpdateManyWithWhereWithoutClientsInput = {
    where: projectsScalarWhereInput
    data: XOR<projectsUpdateManyMutationInput, projectsUncheckedUpdateManyWithoutClientsInput>
  }

  export type documentsCreateWithoutDocument_tagsInput = {
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutDocumentsInput
    projects: projectsCreateNestedOneWithoutDocumentsInput
  }

  export type documentsUncheckedCreateWithoutDocument_tagsInput = {
    id?: number
    project_id: number
    client_id?: number | null
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type documentsCreateOrConnectWithoutDocument_tagsInput = {
    where: documentsWhereUniqueInput
    create: XOR<documentsCreateWithoutDocument_tagsInput, documentsUncheckedCreateWithoutDocument_tagsInput>
  }

  export type tagsCreateWithoutDocument_tagsInput = {
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    project_tags?: project_tagsCreateNestedManyWithoutTagsInput
    stage_tags?: stage_tagsCreateNestedManyWithoutTagsInput
  }

  export type tagsUncheckedCreateWithoutDocument_tagsInput = {
    id?: number
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutTagsInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutTagsInput
  }

  export type tagsCreateOrConnectWithoutDocument_tagsInput = {
    where: tagsWhereUniqueInput
    create: XOR<tagsCreateWithoutDocument_tagsInput, tagsUncheckedCreateWithoutDocument_tagsInput>
  }

  export type documentsUpsertWithoutDocument_tagsInput = {
    update: XOR<documentsUpdateWithoutDocument_tagsInput, documentsUncheckedUpdateWithoutDocument_tagsInput>
    create: XOR<documentsCreateWithoutDocument_tagsInput, documentsUncheckedCreateWithoutDocument_tagsInput>
    where?: documentsWhereInput
  }

  export type documentsUpdateToOneWithWhereWithoutDocument_tagsInput = {
    where?: documentsWhereInput
    data: XOR<documentsUpdateWithoutDocument_tagsInput, documentsUncheckedUpdateWithoutDocument_tagsInput>
  }

  export type documentsUpdateWithoutDocument_tagsInput = {
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutDocumentsNestedInput
    projects?: projectsUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type documentsUncheckedUpdateWithoutDocument_tagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tagsUpsertWithoutDocument_tagsInput = {
    update: XOR<tagsUpdateWithoutDocument_tagsInput, tagsUncheckedUpdateWithoutDocument_tagsInput>
    create: XOR<tagsCreateWithoutDocument_tagsInput, tagsUncheckedCreateWithoutDocument_tagsInput>
    where?: tagsWhereInput
  }

  export type tagsUpdateToOneWithWhereWithoutDocument_tagsInput = {
    where?: tagsWhereInput
    data: XOR<tagsUpdateWithoutDocument_tagsInput, tagsUncheckedUpdateWithoutDocument_tagsInput>
  }

  export type tagsUpdateWithoutDocument_tagsInput = {
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_tags?: project_tagsUpdateManyWithoutTagsNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutTagsNestedInput
  }

  export type tagsUncheckedUpdateWithoutDocument_tagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_tags?: project_tagsUncheckedUpdateManyWithoutTagsNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type document_tagsCreateWithoutDocumentsInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    tags: tagsCreateNestedOneWithoutDocument_tagsInput
  }

  export type document_tagsUncheckedCreateWithoutDocumentsInput = {
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type document_tagsCreateOrConnectWithoutDocumentsInput = {
    where: document_tagsWhereUniqueInput
    create: XOR<document_tagsCreateWithoutDocumentsInput, document_tagsUncheckedCreateWithoutDocumentsInput>
  }

  export type document_tagsCreateManyDocumentsInputEnvelope = {
    data: document_tagsCreateManyDocumentsInput | document_tagsCreateManyDocumentsInput[]
    skipDuplicates?: boolean
  }

  export type clientsCreateWithoutDocumentsInput = {
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    addresses?: addressesCreateNestedOneWithoutClientsInput
    events?: eventsCreateNestedManyWithoutClientsInput
    projects?: projectsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutDocumentsInput = {
    id?: number
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutClientsInput
    projects?: projectsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutDocumentsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutDocumentsInput, clientsUncheckedCreateWithoutDocumentsInput>
  }

  export type projectsCreateWithoutDocumentsInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutDocumentsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutDocumentsInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutDocumentsInput, projectsUncheckedCreateWithoutDocumentsInput>
  }

  export type document_tagsUpsertWithWhereUniqueWithoutDocumentsInput = {
    where: document_tagsWhereUniqueInput
    update: XOR<document_tagsUpdateWithoutDocumentsInput, document_tagsUncheckedUpdateWithoutDocumentsInput>
    create: XOR<document_tagsCreateWithoutDocumentsInput, document_tagsUncheckedCreateWithoutDocumentsInput>
  }

  export type document_tagsUpdateWithWhereUniqueWithoutDocumentsInput = {
    where: document_tagsWhereUniqueInput
    data: XOR<document_tagsUpdateWithoutDocumentsInput, document_tagsUncheckedUpdateWithoutDocumentsInput>
  }

  export type document_tagsUpdateManyWithWhereWithoutDocumentsInput = {
    where: document_tagsScalarWhereInput
    data: XOR<document_tagsUpdateManyMutationInput, document_tagsUncheckedUpdateManyWithoutDocumentsInput>
  }

  export type document_tagsScalarWhereInput = {
    AND?: document_tagsScalarWhereInput | document_tagsScalarWhereInput[]
    OR?: document_tagsScalarWhereInput[]
    NOT?: document_tagsScalarWhereInput | document_tagsScalarWhereInput[]
    document_id?: IntFilter<"document_tags"> | number
    tag_id?: IntFilter<"document_tags"> | number
    created_at?: DateTimeNullableFilter<"document_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"document_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"document_tags"> | string | null
  }

  export type clientsUpsertWithoutDocumentsInput = {
    update: XOR<clientsUpdateWithoutDocumentsInput, clientsUncheckedUpdateWithoutDocumentsInput>
    create: XOR<clientsCreateWithoutDocumentsInput, clientsUncheckedCreateWithoutDocumentsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutDocumentsInput, clientsUncheckedUpdateWithoutDocumentsInput>
  }

  export type clientsUpdateWithoutDocumentsInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    addresses?: addressesUpdateOneWithoutClientsNestedInput
    events?: eventsUpdateManyWithoutClientsNestedInput
    projects?: projectsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutDocumentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutClientsNestedInput
    projects?: projectsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type projectsUpsertWithoutDocumentsInput = {
    update: XOR<projectsUpdateWithoutDocumentsInput, projectsUncheckedUpdateWithoutDocumentsInput>
    create: XOR<projectsCreateWithoutDocumentsInput, projectsUncheckedCreateWithoutDocumentsInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutDocumentsInput, projectsUncheckedUpdateWithoutDocumentsInput>
  }

  export type projectsUpdateWithoutDocumentsInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutDocumentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type clientsCreateWithoutEventsInput = {
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    addresses?: addressesCreateNestedOneWithoutClientsInput
    documents?: documentsCreateNestedManyWithoutClientsInput
    projects?: projectsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutEventsInput = {
    id?: number
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutClientsInput
    projects?: projectsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutEventsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutEventsInput, clientsUncheckedCreateWithoutEventsInput>
  }

  export type projectsCreateWithoutEventsInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutEventsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutEventsInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutEventsInput, projectsUncheckedCreateWithoutEventsInput>
  }

  export type staffCreateWithoutEventsInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutEventsInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutEventsInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutEventsInput, staffUncheckedCreateWithoutEventsInput>
  }

  export type clientsUpsertWithoutEventsInput = {
    update: XOR<clientsUpdateWithoutEventsInput, clientsUncheckedUpdateWithoutEventsInput>
    create: XOR<clientsCreateWithoutEventsInput, clientsUncheckedCreateWithoutEventsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutEventsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutEventsInput, clientsUncheckedUpdateWithoutEventsInput>
  }

  export type clientsUpdateWithoutEventsInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    addresses?: addressesUpdateOneWithoutClientsNestedInput
    documents?: documentsUpdateManyWithoutClientsNestedInput
    projects?: projectsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutClientsNestedInput
    projects?: projectsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type projectsUpsertWithoutEventsInput = {
    update: XOR<projectsUpdateWithoutEventsInput, projectsUncheckedUpdateWithoutEventsInput>
    create: XOR<projectsCreateWithoutEventsInput, projectsUncheckedCreateWithoutEventsInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutEventsInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutEventsInput, projectsUncheckedUpdateWithoutEventsInput>
  }

  export type projectsUpdateWithoutEventsInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type staffUpsertWithoutEventsInput = {
    update: XOR<staffUpdateWithoutEventsInput, staffUncheckedUpdateWithoutEventsInput>
    create: XOR<staffCreateWithoutEventsInput, staffUncheckedCreateWithoutEventsInput>
    where?: staffWhereInput
  }

  export type staffUpdateToOneWithWhereWithoutEventsInput = {
    where?: staffWhereInput
    data: XOR<staffUpdateWithoutEventsInput, staffUncheckedUpdateWithoutEventsInput>
  }

  export type staffUpdateWithoutEventsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type project_materialsCreateWithoutMaterialsInput = {
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    projects: projectsCreateNestedOneWithoutProject_materialsInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_materialsInput
  }

  export type project_materialsUncheckedCreateWithoutMaterialsInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_materialsCreateOrConnectWithoutMaterialsInput = {
    where: project_materialsWhereUniqueInput
    create: XOR<project_materialsCreateWithoutMaterialsInput, project_materialsUncheckedCreateWithoutMaterialsInput>
  }

  export type project_materialsCreateManyMaterialsInputEnvelope = {
    data: project_materialsCreateManyMaterialsInput | project_materialsCreateManyMaterialsInput[]
    skipDuplicates?: boolean
  }

  export type project_materialsUpsertWithWhereUniqueWithoutMaterialsInput = {
    where: project_materialsWhereUniqueInput
    update: XOR<project_materialsUpdateWithoutMaterialsInput, project_materialsUncheckedUpdateWithoutMaterialsInput>
    create: XOR<project_materialsCreateWithoutMaterialsInput, project_materialsUncheckedCreateWithoutMaterialsInput>
  }

  export type project_materialsUpdateWithWhereUniqueWithoutMaterialsInput = {
    where: project_materialsWhereUniqueInput
    data: XOR<project_materialsUpdateWithoutMaterialsInput, project_materialsUncheckedUpdateWithoutMaterialsInput>
  }

  export type project_materialsUpdateManyWithWhereWithoutMaterialsInput = {
    where: project_materialsScalarWhereInput
    data: XOR<project_materialsUpdateManyMutationInput, project_materialsUncheckedUpdateManyWithoutMaterialsInput>
  }

  export type project_materialsScalarWhereInput = {
    AND?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
    OR?: project_materialsScalarWhereInput[]
    NOT?: project_materialsScalarWhereInput | project_materialsScalarWhereInput[]
    id?: IntFilter<"project_materials"> | number
    project_id?: IntFilter<"project_materials"> | number
    material_id?: IntFilter<"project_materials"> | number
    stage_id?: IntNullableFilter<"project_materials"> | number | null
    quantity_planned?: IntFilter<"project_materials"> | number
    quantity_used?: IntNullableFilter<"project_materials"> | number | null
    unit_price?: DecimalFilter<"project_materials"> | Decimal | DecimalJsLike | number | string
    notes?: StringNullableFilter<"project_materials"> | string | null
    created_at?: DateTimeNullableFilter<"project_materials"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_materials"> | Date | string | null
  }

  export type materialsCreateWithoutProject_materialsInput = {
    name: string
    description?: string | null
    reference?: string | null
    unit: string
    price?: Decimal | DecimalJsLike | number | string | null
    stock_quantity?: number | null
    minimum_stock?: number | null
    supplier?: string | null
    supplier_reference?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type materialsUncheckedCreateWithoutProject_materialsInput = {
    id?: number
    name: string
    description?: string | null
    reference?: string | null
    unit: string
    price?: Decimal | DecimalJsLike | number | string | null
    stock_quantity?: number | null
    minimum_stock?: number | null
    supplier?: string | null
    supplier_reference?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type materialsCreateOrConnectWithoutProject_materialsInput = {
    where: materialsWhereUniqueInput
    create: XOR<materialsCreateWithoutProject_materialsInput, materialsUncheckedCreateWithoutProject_materialsInput>
  }

  export type projectsCreateWithoutProject_materialsInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutProject_materialsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutProject_materialsInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutProject_materialsInput, projectsUncheckedCreateWithoutProject_materialsInput>
  }

  export type project_stagesCreateWithoutProject_materialsInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutProject_materialsInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutProject_materialsInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutProject_materialsInput, project_stagesUncheckedCreateWithoutProject_materialsInput>
  }

  export type materialsUpsertWithoutProject_materialsInput = {
    update: XOR<materialsUpdateWithoutProject_materialsInput, materialsUncheckedUpdateWithoutProject_materialsInput>
    create: XOR<materialsCreateWithoutProject_materialsInput, materialsUncheckedCreateWithoutProject_materialsInput>
    where?: materialsWhereInput
  }

  export type materialsUpdateToOneWithWhereWithoutProject_materialsInput = {
    where?: materialsWhereInput
    data: XOR<materialsUpdateWithoutProject_materialsInput, materialsUncheckedUpdateWithoutProject_materialsInput>
  }

  export type materialsUpdateWithoutProject_materialsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: NullableIntFieldUpdateOperationsInput | number | null
    minimum_stock?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_reference?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type materialsUncheckedUpdateWithoutProject_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_quantity?: NullableIntFieldUpdateOperationsInput | number | null
    minimum_stock?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_reference?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type projectsUpsertWithoutProject_materialsInput = {
    update: XOR<projectsUpdateWithoutProject_materialsInput, projectsUncheckedUpdateWithoutProject_materialsInput>
    create: XOR<projectsCreateWithoutProject_materialsInput, projectsUncheckedCreateWithoutProject_materialsInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutProject_materialsInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutProject_materialsInput, projectsUncheckedUpdateWithoutProject_materialsInput>
  }

  export type projectsUpdateWithoutProject_materialsInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutProject_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type project_stagesUpsertWithoutProject_materialsInput = {
    update: XOR<project_stagesUpdateWithoutProject_materialsInput, project_stagesUncheckedUpdateWithoutProject_materialsInput>
    create: XOR<project_stagesCreateWithoutProject_materialsInput, project_stagesUncheckedCreateWithoutProject_materialsInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutProject_materialsInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutProject_materialsInput, project_stagesUncheckedUpdateWithoutProject_materialsInput>
  }

  export type project_stagesUpdateWithoutProject_materialsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutProject_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type projectsCreateWithoutProject_mediaInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutProject_mediaInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutProject_mediaInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutProject_mediaInput, projectsUncheckedCreateWithoutProject_mediaInput>
  }

  export type staffCreateWithoutProject_mediaInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutProject_mediaInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutProject_mediaInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutProject_mediaInput, staffUncheckedCreateWithoutProject_mediaInput>
  }

  export type project_stagesCreateWithoutProject_mediaInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutProject_mediaInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutProject_mediaInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutProject_mediaInput, project_stagesUncheckedCreateWithoutProject_mediaInput>
  }

  export type projectsUpsertWithoutProject_mediaInput = {
    update: XOR<projectsUpdateWithoutProject_mediaInput, projectsUncheckedUpdateWithoutProject_mediaInput>
    create: XOR<projectsCreateWithoutProject_mediaInput, projectsUncheckedCreateWithoutProject_mediaInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutProject_mediaInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutProject_mediaInput, projectsUncheckedUpdateWithoutProject_mediaInput>
  }

  export type projectsUpdateWithoutProject_mediaInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutProject_mediaInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type staffUpsertWithoutProject_mediaInput = {
    update: XOR<staffUpdateWithoutProject_mediaInput, staffUncheckedUpdateWithoutProject_mediaInput>
    create: XOR<staffCreateWithoutProject_mediaInput, staffUncheckedCreateWithoutProject_mediaInput>
    where?: staffWhereInput
  }

  export type staffUpdateToOneWithWhereWithoutProject_mediaInput = {
    where?: staffWhereInput
    data: XOR<staffUpdateWithoutProject_mediaInput, staffUncheckedUpdateWithoutProject_mediaInput>
  }

  export type staffUpdateWithoutProject_mediaInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutProject_mediaInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type project_stagesUpsertWithoutProject_mediaInput = {
    update: XOR<project_stagesUpdateWithoutProject_mediaInput, project_stagesUncheckedUpdateWithoutProject_mediaInput>
    create: XOR<project_stagesCreateWithoutProject_mediaInput, project_stagesUncheckedCreateWithoutProject_mediaInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutProject_mediaInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutProject_mediaInput, project_stagesUncheckedUpdateWithoutProject_mediaInput>
  }

  export type project_stagesUpdateWithoutProject_mediaInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutProject_mediaInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type projectsCreateWithoutProject_staffInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutProject_staffInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutProject_staffInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutProject_staffInput, projectsUncheckedCreateWithoutProject_staffInput>
  }

  export type staffCreateWithoutProject_staffInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutProject_staffInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutProject_staffInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutProject_staffInput, staffUncheckedCreateWithoutProject_staffInput>
  }

  export type project_stagesCreateWithoutProject_staffInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutProject_staffInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutProject_staffInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutProject_staffInput, project_stagesUncheckedCreateWithoutProject_staffInput>
  }

  export type projectsUpsertWithoutProject_staffInput = {
    update: XOR<projectsUpdateWithoutProject_staffInput, projectsUncheckedUpdateWithoutProject_staffInput>
    create: XOR<projectsCreateWithoutProject_staffInput, projectsUncheckedCreateWithoutProject_staffInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutProject_staffInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutProject_staffInput, projectsUncheckedUpdateWithoutProject_staffInput>
  }

  export type projectsUpdateWithoutProject_staffInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutProject_staffInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type staffUpsertWithoutProject_staffInput = {
    update: XOR<staffUpdateWithoutProject_staffInput, staffUncheckedUpdateWithoutProject_staffInput>
    create: XOR<staffCreateWithoutProject_staffInput, staffUncheckedCreateWithoutProject_staffInput>
    where?: staffWhereInput
  }

  export type staffUpdateToOneWithWhereWithoutProject_staffInput = {
    where?: staffWhereInput
    data: XOR<staffUpdateWithoutProject_staffInput, staffUncheckedUpdateWithoutProject_staffInput>
  }

  export type staffUpdateWithoutProject_staffInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutProject_staffInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type project_stagesUpsertWithoutProject_staffInput = {
    update: XOR<project_stagesUpdateWithoutProject_staffInput, project_stagesUncheckedUpdateWithoutProject_staffInput>
    create: XOR<project_stagesCreateWithoutProject_staffInput, project_stagesUncheckedCreateWithoutProject_staffInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutProject_staffInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutProject_staffInput, project_stagesUncheckedUpdateWithoutProject_staffInput>
  }

  export type project_stagesUpdateWithoutProject_staffInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutProject_staffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_materialsCreateWithoutProject_stagesInput = {
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    materials: materialsCreateNestedOneWithoutProject_materialsInput
    projects: projectsCreateNestedOneWithoutProject_materialsInput
  }

  export type project_materialsUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    project_id: number
    material_id: number
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_materialsCreateOrConnectWithoutProject_stagesInput = {
    where: project_materialsWhereUniqueInput
    create: XOR<project_materialsCreateWithoutProject_stagesInput, project_materialsUncheckedCreateWithoutProject_stagesInput>
  }

  export type project_materialsCreateManyProject_stagesInputEnvelope = {
    data: project_materialsCreateManyProject_stagesInput | project_materialsCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type project_mediaCreateWithoutProject_stagesInput = {
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects?: projectsCreateNestedOneWithoutProject_mediaInput
    staff?: staffCreateNestedOneWithoutProject_mediaInput
  }

  export type project_mediaUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    project_id?: number | null
    staff_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_mediaCreateOrConnectWithoutProject_stagesInput = {
    where: project_mediaWhereUniqueInput
    create: XOR<project_mediaCreateWithoutProject_stagesInput, project_mediaUncheckedCreateWithoutProject_stagesInput>
  }

  export type project_mediaCreateManyProject_stagesInputEnvelope = {
    data: project_mediaCreateManyProject_stagesInput | project_mediaCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type project_staffCreateWithoutProject_stagesInput = {
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    projects: projectsCreateNestedOneWithoutProject_staffInput
    staff: staffCreateNestedOneWithoutProject_staffInput
  }

  export type project_staffUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    project_id: number
    staff_id: number
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_staffCreateOrConnectWithoutProject_stagesInput = {
    where: project_staffWhereUniqueInput
    create: XOR<project_staffCreateWithoutProject_stagesInput, project_staffUncheckedCreateWithoutProject_stagesInput>
  }

  export type project_staffCreateManyProject_stagesInputEnvelope = {
    data: project_staffCreateManyProject_stagesInput | project_staffCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type projectsCreateWithoutProject_stagesInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutProject_stagesInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutProject_stagesInput, projectsUncheckedCreateWithoutProject_stagesInput>
  }

  export type site_reportsCreateWithoutProject_stagesInput = {
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutSite_reportsInput
    staff?: staffCreateNestedOneWithoutSite_reportsInput
  }

  export type site_reportsUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    project_id: number
    staff_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type site_reportsCreateOrConnectWithoutProject_stagesInput = {
    where: site_reportsWhereUniqueInput
    create: XOR<site_reportsCreateWithoutProject_stagesInput, site_reportsUncheckedCreateWithoutProject_stagesInput>
  }

  export type site_reportsCreateManyProject_stagesInputEnvelope = {
    data: site_reportsCreateManyProject_stagesInput | site_reportsCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type stage_checklistsCreateWithoutProject_stagesInput = {
    label: string
    is_done?: boolean | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    staff?: staffCreateNestedOneWithoutStage_checklistsInput
  }

  export type stage_checklistsUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    label: string
    is_done?: boolean | null
    staff_id?: number | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_checklistsCreateOrConnectWithoutProject_stagesInput = {
    where: stage_checklistsWhereUniqueInput
    create: XOR<stage_checklistsCreateWithoutProject_stagesInput, stage_checklistsUncheckedCreateWithoutProject_stagesInput>
  }

  export type stage_checklistsCreateManyProject_stagesInputEnvelope = {
    data: stage_checklistsCreateManyProject_stagesInput | stage_checklistsCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type stage_tagsCreateWithoutProject_stagesInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    tags: tagsCreateNestedOneWithoutStage_tagsInput
  }

  export type stage_tagsUncheckedCreateWithoutProject_stagesInput = {
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_tagsCreateOrConnectWithoutProject_stagesInput = {
    where: stage_tagsWhereUniqueInput
    create: XOR<stage_tagsCreateWithoutProject_stagesInput, stage_tagsUncheckedCreateWithoutProject_stagesInput>
  }

  export type stage_tagsCreateManyProject_stagesInputEnvelope = {
    data: stage_tagsCreateManyProject_stagesInput | stage_tagsCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type tasksCreateWithoutProject_stagesInput = {
    label: string
    description?: string | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    staff?: staffCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    label: string
    description?: string | null
    assigned_to?: number | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type tasksCreateOrConnectWithoutProject_stagesInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutProject_stagesInput, tasksUncheckedCreateWithoutProject_stagesInput>
  }

  export type tasksCreateManyProject_stagesInputEnvelope = {
    data: tasksCreateManyProject_stagesInput | tasksCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type time_logsCreateWithoutProject_stagesInput = {
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutTime_logsInput
    staff: staffCreateNestedOneWithoutTime_logsInput
  }

  export type time_logsUncheckedCreateWithoutProject_stagesInput = {
    id?: number
    staff_id: number
    project_id: number
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsCreateOrConnectWithoutProject_stagesInput = {
    where: time_logsWhereUniqueInput
    create: XOR<time_logsCreateWithoutProject_stagesInput, time_logsUncheckedCreateWithoutProject_stagesInput>
  }

  export type time_logsCreateManyProject_stagesInputEnvelope = {
    data: time_logsCreateManyProject_stagesInput | time_logsCreateManyProject_stagesInput[]
    skipDuplicates?: boolean
  }

  export type project_materialsUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: project_materialsWhereUniqueInput
    update: XOR<project_materialsUpdateWithoutProject_stagesInput, project_materialsUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<project_materialsCreateWithoutProject_stagesInput, project_materialsUncheckedCreateWithoutProject_stagesInput>
  }

  export type project_materialsUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: project_materialsWhereUniqueInput
    data: XOR<project_materialsUpdateWithoutProject_stagesInput, project_materialsUncheckedUpdateWithoutProject_stagesInput>
  }

  export type project_materialsUpdateManyWithWhereWithoutProject_stagesInput = {
    where: project_materialsScalarWhereInput
    data: XOR<project_materialsUpdateManyMutationInput, project_materialsUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type project_mediaUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: project_mediaWhereUniqueInput
    update: XOR<project_mediaUpdateWithoutProject_stagesInput, project_mediaUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<project_mediaCreateWithoutProject_stagesInput, project_mediaUncheckedCreateWithoutProject_stagesInput>
  }

  export type project_mediaUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: project_mediaWhereUniqueInput
    data: XOR<project_mediaUpdateWithoutProject_stagesInput, project_mediaUncheckedUpdateWithoutProject_stagesInput>
  }

  export type project_mediaUpdateManyWithWhereWithoutProject_stagesInput = {
    where: project_mediaScalarWhereInput
    data: XOR<project_mediaUpdateManyMutationInput, project_mediaUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type project_mediaScalarWhereInput = {
    AND?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
    OR?: project_mediaScalarWhereInput[]
    NOT?: project_mediaScalarWhereInput | project_mediaScalarWhereInput[]
    id?: IntFilter<"project_media"> | number
    project_id?: IntNullableFilter<"project_media"> | number | null
    stage_id?: IntNullableFilter<"project_media"> | number | null
    staff_id?: IntNullableFilter<"project_media"> | number | null
    media_type?: StringNullableFilter<"project_media"> | string | null
    file_path?: StringFilter<"project_media"> | string
    description?: StringNullableFilter<"project_media"> | string | null
    created_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_media"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_media"> | string | null
  }

  export type project_staffUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: project_staffWhereUniqueInput
    update: XOR<project_staffUpdateWithoutProject_stagesInput, project_staffUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<project_staffCreateWithoutProject_stagesInput, project_staffUncheckedCreateWithoutProject_stagesInput>
  }

  export type project_staffUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: project_staffWhereUniqueInput
    data: XOR<project_staffUpdateWithoutProject_stagesInput, project_staffUncheckedUpdateWithoutProject_stagesInput>
  }

  export type project_staffUpdateManyWithWhereWithoutProject_stagesInput = {
    where: project_staffScalarWhereInput
    data: XOR<project_staffUpdateManyMutationInput, project_staffUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type project_staffScalarWhereInput = {
    AND?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
    OR?: project_staffScalarWhereInput[]
    NOT?: project_staffScalarWhereInput | project_staffScalarWhereInput[]
    id?: IntFilter<"project_staff"> | number
    project_id?: IntFilter<"project_staff"> | number
    staff_id?: IntFilter<"project_staff"> | number
    stage_id?: IntNullableFilter<"project_staff"> | number | null
    role_description?: StringNullableFilter<"project_staff"> | string | null
    start_date?: DateTimeFilter<"project_staff"> | Date | string
    end_date?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    hours_planned?: IntNullableFilter<"project_staff"> | number | null
    hours_worked?: IntNullableFilter<"project_staff"> | number | null
    created_at?: DateTimeNullableFilter<"project_staff"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_staff"> | Date | string | null
  }

  export type projectsUpsertWithoutProject_stagesInput = {
    update: XOR<projectsUpdateWithoutProject_stagesInput, projectsUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<projectsCreateWithoutProject_stagesInput, projectsUncheckedCreateWithoutProject_stagesInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutProject_stagesInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutProject_stagesInput, projectsUncheckedUpdateWithoutProject_stagesInput>
  }

  export type projectsUpdateWithoutProject_stagesInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type site_reportsUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: site_reportsWhereUniqueInput
    update: XOR<site_reportsUpdateWithoutProject_stagesInput, site_reportsUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<site_reportsCreateWithoutProject_stagesInput, site_reportsUncheckedCreateWithoutProject_stagesInput>
  }

  export type site_reportsUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: site_reportsWhereUniqueInput
    data: XOR<site_reportsUpdateWithoutProject_stagesInput, site_reportsUncheckedUpdateWithoutProject_stagesInput>
  }

  export type site_reportsUpdateManyWithWhereWithoutProject_stagesInput = {
    where: site_reportsScalarWhereInput
    data: XOR<site_reportsUpdateManyMutationInput, site_reportsUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type site_reportsScalarWhereInput = {
    AND?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
    OR?: site_reportsScalarWhereInput[]
    NOT?: site_reportsScalarWhereInput | site_reportsScalarWhereInput[]
    id?: IntFilter<"site_reports"> | number
    project_id?: IntFilter<"site_reports"> | number
    staff_id?: IntNullableFilter<"site_reports"> | number | null
    stage_id?: IntNullableFilter<"site_reports"> | number | null
    report_type?: StringNullableFilter<"site_reports"> | string | null
    description?: StringFilter<"site_reports"> | string
    status?: StringNullableFilter<"site_reports"> | string | null
    created_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"site_reports"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"site_reports"> | string | null
  }

  export type stage_checklistsUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: stage_checklistsWhereUniqueInput
    update: XOR<stage_checklistsUpdateWithoutProject_stagesInput, stage_checklistsUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<stage_checklistsCreateWithoutProject_stagesInput, stage_checklistsUncheckedCreateWithoutProject_stagesInput>
  }

  export type stage_checklistsUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: stage_checklistsWhereUniqueInput
    data: XOR<stage_checklistsUpdateWithoutProject_stagesInput, stage_checklistsUncheckedUpdateWithoutProject_stagesInput>
  }

  export type stage_checklistsUpdateManyWithWhereWithoutProject_stagesInput = {
    where: stage_checklistsScalarWhereInput
    data: XOR<stage_checklistsUpdateManyMutationInput, stage_checklistsUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type stage_checklistsScalarWhereInput = {
    AND?: stage_checklistsScalarWhereInput | stage_checklistsScalarWhereInput[]
    OR?: stage_checklistsScalarWhereInput[]
    NOT?: stage_checklistsScalarWhereInput | stage_checklistsScalarWhereInput[]
    id?: IntFilter<"stage_checklists"> | number
    stage_id?: IntFilter<"stage_checklists"> | number
    label?: StringFilter<"stage_checklists"> | string
    is_done?: BoolNullableFilter<"stage_checklists"> | boolean | null
    staff_id?: IntNullableFilter<"stage_checklists"> | number | null
    comment?: StringNullableFilter<"stage_checklists"> | string | null
    created_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"stage_checklists"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"stage_checklists"> | string | null
  }

  export type stage_tagsUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: stage_tagsWhereUniqueInput
    update: XOR<stage_tagsUpdateWithoutProject_stagesInput, stage_tagsUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<stage_tagsCreateWithoutProject_stagesInput, stage_tagsUncheckedCreateWithoutProject_stagesInput>
  }

  export type stage_tagsUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: stage_tagsWhereUniqueInput
    data: XOR<stage_tagsUpdateWithoutProject_stagesInput, stage_tagsUncheckedUpdateWithoutProject_stagesInput>
  }

  export type stage_tagsUpdateManyWithWhereWithoutProject_stagesInput = {
    where: stage_tagsScalarWhereInput
    data: XOR<stage_tagsUpdateManyMutationInput, stage_tagsUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type stage_tagsScalarWhereInput = {
    AND?: stage_tagsScalarWhereInput | stage_tagsScalarWhereInput[]
    OR?: stage_tagsScalarWhereInput[]
    NOT?: stage_tagsScalarWhereInput | stage_tagsScalarWhereInput[]
    stage_id?: IntFilter<"stage_tags"> | number
    tag_id?: IntFilter<"stage_tags"> | number
    created_at?: DateTimeNullableFilter<"stage_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"stage_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"stage_tags"> | string | null
  }

  export type tasksUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: tasksWhereUniqueInput
    update: XOR<tasksUpdateWithoutProject_stagesInput, tasksUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<tasksCreateWithoutProject_stagesInput, tasksUncheckedCreateWithoutProject_stagesInput>
  }

  export type tasksUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: tasksWhereUniqueInput
    data: XOR<tasksUpdateWithoutProject_stagesInput, tasksUncheckedUpdateWithoutProject_stagesInput>
  }

  export type tasksUpdateManyWithWhereWithoutProject_stagesInput = {
    where: tasksScalarWhereInput
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type tasksScalarWhereInput = {
    AND?: tasksScalarWhereInput | tasksScalarWhereInput[]
    OR?: tasksScalarWhereInput[]
    NOT?: tasksScalarWhereInput | tasksScalarWhereInput[]
    id?: IntFilter<"tasks"> | number
    stage_id?: IntFilter<"tasks"> | number
    label?: StringFilter<"tasks"> | string
    description?: StringNullableFilter<"tasks"> | string | null
    assigned_to?: IntNullableFilter<"tasks"> | number | null
    due_date?: DateTimeNullableFilter<"tasks"> | Date | string | null
    status?: StringNullableFilter<"tasks"> | string | null
    priority?: IntNullableFilter<"tasks"> | number | null
    created_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"tasks"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"tasks"> | string | null
  }

  export type time_logsUpsertWithWhereUniqueWithoutProject_stagesInput = {
    where: time_logsWhereUniqueInput
    update: XOR<time_logsUpdateWithoutProject_stagesInput, time_logsUncheckedUpdateWithoutProject_stagesInput>
    create: XOR<time_logsCreateWithoutProject_stagesInput, time_logsUncheckedCreateWithoutProject_stagesInput>
  }

  export type time_logsUpdateWithWhereUniqueWithoutProject_stagesInput = {
    where: time_logsWhereUniqueInput
    data: XOR<time_logsUpdateWithoutProject_stagesInput, time_logsUncheckedUpdateWithoutProject_stagesInput>
  }

  export type time_logsUpdateManyWithWhereWithoutProject_stagesInput = {
    where: time_logsScalarWhereInput
    data: XOR<time_logsUpdateManyMutationInput, time_logsUncheckedUpdateManyWithoutProject_stagesInput>
  }

  export type time_logsScalarWhereInput = {
    AND?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
    OR?: time_logsScalarWhereInput[]
    NOT?: time_logsScalarWhereInput | time_logsScalarWhereInput[]
    id?: IntFilter<"time_logs"> | number
    staff_id?: IntFilter<"time_logs"> | number
    project_id?: IntFilter<"time_logs"> | number
    stage_id?: IntNullableFilter<"time_logs"> | number | null
    check_in?: DateTimeFilter<"time_logs"> | Date | string
    check_out?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    comment?: StringNullableFilter<"time_logs"> | string | null
    gps_lat?: DecimalNullableFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    gps_long?: DecimalNullableFilter<"time_logs"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"time_logs"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"time_logs"> | string | null
  }

  export type projectsCreateWithoutProject_tagsInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutProject_tagsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutProject_tagsInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutProject_tagsInput, projectsUncheckedCreateWithoutProject_tagsInput>
  }

  export type tagsCreateWithoutProject_tagsInput = {
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsCreateNestedManyWithoutTagsInput
    stage_tags?: stage_tagsCreateNestedManyWithoutTagsInput
  }

  export type tagsUncheckedCreateWithoutProject_tagsInput = {
    id?: number
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsUncheckedCreateNestedManyWithoutTagsInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutTagsInput
  }

  export type tagsCreateOrConnectWithoutProject_tagsInput = {
    where: tagsWhereUniqueInput
    create: XOR<tagsCreateWithoutProject_tagsInput, tagsUncheckedCreateWithoutProject_tagsInput>
  }

  export type projectsUpsertWithoutProject_tagsInput = {
    update: XOR<projectsUpdateWithoutProject_tagsInput, projectsUncheckedUpdateWithoutProject_tagsInput>
    create: XOR<projectsCreateWithoutProject_tagsInput, projectsUncheckedCreateWithoutProject_tagsInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutProject_tagsInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutProject_tagsInput, projectsUncheckedUpdateWithoutProject_tagsInput>
  }

  export type projectsUpdateWithoutProject_tagsInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutProject_tagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type tagsUpsertWithoutProject_tagsInput = {
    update: XOR<tagsUpdateWithoutProject_tagsInput, tagsUncheckedUpdateWithoutProject_tagsInput>
    create: XOR<tagsCreateWithoutProject_tagsInput, tagsUncheckedCreateWithoutProject_tagsInput>
    where?: tagsWhereInput
  }

  export type tagsUpdateToOneWithWhereWithoutProject_tagsInput = {
    where?: tagsWhereInput
    data: XOR<tagsUpdateWithoutProject_tagsInput, tagsUncheckedUpdateWithoutProject_tagsInput>
  }

  export type tagsUpdateWithoutProject_tagsInput = {
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUpdateManyWithoutTagsNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutTagsNestedInput
  }

  export type tagsUncheckedUpdateWithoutProject_tagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUncheckedUpdateManyWithoutTagsNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type documentsCreateWithoutProjectsInput = {
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsCreateNestedManyWithoutDocumentsInput
    clients?: clientsCreateNestedOneWithoutDocumentsInput
  }

  export type documentsUncheckedCreateWithoutProjectsInput = {
    id?: number
    client_id?: number | null
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsUncheckedCreateNestedManyWithoutDocumentsInput
  }

  export type documentsCreateOrConnectWithoutProjectsInput = {
    where: documentsWhereUniqueInput
    create: XOR<documentsCreateWithoutProjectsInput, documentsUncheckedCreateWithoutProjectsInput>
  }

  export type documentsCreateManyProjectsInputEnvelope = {
    data: documentsCreateManyProjectsInput | documentsCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type eventsCreateWithoutProjectsInput = {
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutEventsInput
    staff?: staffCreateNestedOneWithoutEventsInput
  }

  export type eventsUncheckedCreateWithoutProjectsInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    staff_id?: number | null
    client_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type eventsCreateOrConnectWithoutProjectsInput = {
    where: eventsWhereUniqueInput
    create: XOR<eventsCreateWithoutProjectsInput, eventsUncheckedCreateWithoutProjectsInput>
  }

  export type eventsCreateManyProjectsInputEnvelope = {
    data: eventsCreateManyProjectsInput | eventsCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type project_materialsCreateWithoutProjectsInput = {
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    materials: materialsCreateNestedOneWithoutProject_materialsInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_materialsInput
  }

  export type project_materialsUncheckedCreateWithoutProjectsInput = {
    id?: number
    material_id: number
    stage_id?: number | null
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_materialsCreateOrConnectWithoutProjectsInput = {
    where: project_materialsWhereUniqueInput
    create: XOR<project_materialsCreateWithoutProjectsInput, project_materialsUncheckedCreateWithoutProjectsInput>
  }

  export type project_materialsCreateManyProjectsInputEnvelope = {
    data: project_materialsCreateManyProjectsInput | project_materialsCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type project_mediaCreateWithoutProjectsInput = {
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    staff?: staffCreateNestedOneWithoutProject_mediaInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_mediaInput
  }

  export type project_mediaUncheckedCreateWithoutProjectsInput = {
    id?: number
    stage_id?: number | null
    staff_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_mediaCreateOrConnectWithoutProjectsInput = {
    where: project_mediaWhereUniqueInput
    create: XOR<project_mediaCreateWithoutProjectsInput, project_mediaUncheckedCreateWithoutProjectsInput>
  }

  export type project_mediaCreateManyProjectsInputEnvelope = {
    data: project_mediaCreateManyProjectsInput | project_mediaCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type project_staffCreateWithoutProjectsInput = {
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    staff: staffCreateNestedOneWithoutProject_staffInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_staffInput
  }

  export type project_staffUncheckedCreateWithoutProjectsInput = {
    id?: number
    staff_id: number
    stage_id?: number | null
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_staffCreateOrConnectWithoutProjectsInput = {
    where: project_staffWhereUniqueInput
    create: XOR<project_staffCreateWithoutProjectsInput, project_staffUncheckedCreateWithoutProjectsInput>
  }

  export type project_staffCreateManyProjectsInputEnvelope = {
    data: project_staffCreateManyProjectsInput | project_staffCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type project_stagesCreateWithoutProjectsInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutProjectsInput = {
    id?: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutProjectsInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutProjectsInput, project_stagesUncheckedCreateWithoutProjectsInput>
  }

  export type project_stagesCreateManyProjectsInputEnvelope = {
    data: project_stagesCreateManyProjectsInput | project_stagesCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type project_tagsCreateWithoutProjectsInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    tags: tagsCreateNestedOneWithoutProject_tagsInput
  }

  export type project_tagsUncheckedCreateWithoutProjectsInput = {
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_tagsCreateOrConnectWithoutProjectsInput = {
    where: project_tagsWhereUniqueInput
    create: XOR<project_tagsCreateWithoutProjectsInput, project_tagsUncheckedCreateWithoutProjectsInput>
  }

  export type project_tagsCreateManyProjectsInputEnvelope = {
    data: project_tagsCreateManyProjectsInput | project_tagsCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type addressesCreateWithoutProjectsInput = {
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedManyWithoutAddressesInput
    staff?: staffCreateNestedManyWithoutAddressesInput
  }

  export type addressesUncheckedCreateWithoutProjectsInput = {
    id?: number
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsUncheckedCreateNestedManyWithoutAddressesInput
    staff?: staffUncheckedCreateNestedManyWithoutAddressesInput
  }

  export type addressesCreateOrConnectWithoutProjectsInput = {
    where: addressesWhereUniqueInput
    create: XOR<addressesCreateWithoutProjectsInput, addressesUncheckedCreateWithoutProjectsInput>
  }

  export type clientsCreateWithoutProjectsInput = {
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    addresses?: addressesCreateNestedOneWithoutClientsInput
    documents?: documentsCreateNestedManyWithoutClientsInput
    events?: eventsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutProjectsInput = {
    id?: number
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutClientsInput
    events?: eventsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutProjectsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutProjectsInput, clientsUncheckedCreateWithoutProjectsInput>
  }

  export type site_reportsCreateWithoutProjectsInput = {
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    staff?: staffCreateNestedOneWithoutSite_reportsInput
    project_stages?: project_stagesCreateNestedOneWithoutSite_reportsInput
  }

  export type site_reportsUncheckedCreateWithoutProjectsInput = {
    id?: number
    staff_id?: number | null
    stage_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type site_reportsCreateOrConnectWithoutProjectsInput = {
    where: site_reportsWhereUniqueInput
    create: XOR<site_reportsCreateWithoutProjectsInput, site_reportsUncheckedCreateWithoutProjectsInput>
  }

  export type site_reportsCreateManyProjectsInputEnvelope = {
    data: site_reportsCreateManyProjectsInput | site_reportsCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type time_logsCreateWithoutProjectsInput = {
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    staff: staffCreateNestedOneWithoutTime_logsInput
    project_stages?: project_stagesCreateNestedOneWithoutTime_logsInput
  }

  export type time_logsUncheckedCreateWithoutProjectsInput = {
    id?: number
    staff_id: number
    stage_id?: number | null
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsCreateOrConnectWithoutProjectsInput = {
    where: time_logsWhereUniqueInput
    create: XOR<time_logsCreateWithoutProjectsInput, time_logsUncheckedCreateWithoutProjectsInput>
  }

  export type time_logsCreateManyProjectsInputEnvelope = {
    data: time_logsCreateManyProjectsInput | time_logsCreateManyProjectsInput[]
    skipDuplicates?: boolean
  }

  export type documentsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: documentsWhereUniqueInput
    update: XOR<documentsUpdateWithoutProjectsInput, documentsUncheckedUpdateWithoutProjectsInput>
    create: XOR<documentsCreateWithoutProjectsInput, documentsUncheckedCreateWithoutProjectsInput>
  }

  export type documentsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: documentsWhereUniqueInput
    data: XOR<documentsUpdateWithoutProjectsInput, documentsUncheckedUpdateWithoutProjectsInput>
  }

  export type documentsUpdateManyWithWhereWithoutProjectsInput = {
    where: documentsScalarWhereInput
    data: XOR<documentsUpdateManyMutationInput, documentsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type eventsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: eventsWhereUniqueInput
    update: XOR<eventsUpdateWithoutProjectsInput, eventsUncheckedUpdateWithoutProjectsInput>
    create: XOR<eventsCreateWithoutProjectsInput, eventsUncheckedCreateWithoutProjectsInput>
  }

  export type eventsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: eventsWhereUniqueInput
    data: XOR<eventsUpdateWithoutProjectsInput, eventsUncheckedUpdateWithoutProjectsInput>
  }

  export type eventsUpdateManyWithWhereWithoutProjectsInput = {
    where: eventsScalarWhereInput
    data: XOR<eventsUpdateManyMutationInput, eventsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type project_materialsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: project_materialsWhereUniqueInput
    update: XOR<project_materialsUpdateWithoutProjectsInput, project_materialsUncheckedUpdateWithoutProjectsInput>
    create: XOR<project_materialsCreateWithoutProjectsInput, project_materialsUncheckedCreateWithoutProjectsInput>
  }

  export type project_materialsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: project_materialsWhereUniqueInput
    data: XOR<project_materialsUpdateWithoutProjectsInput, project_materialsUncheckedUpdateWithoutProjectsInput>
  }

  export type project_materialsUpdateManyWithWhereWithoutProjectsInput = {
    where: project_materialsScalarWhereInput
    data: XOR<project_materialsUpdateManyMutationInput, project_materialsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type project_mediaUpsertWithWhereUniqueWithoutProjectsInput = {
    where: project_mediaWhereUniqueInput
    update: XOR<project_mediaUpdateWithoutProjectsInput, project_mediaUncheckedUpdateWithoutProjectsInput>
    create: XOR<project_mediaCreateWithoutProjectsInput, project_mediaUncheckedCreateWithoutProjectsInput>
  }

  export type project_mediaUpdateWithWhereUniqueWithoutProjectsInput = {
    where: project_mediaWhereUniqueInput
    data: XOR<project_mediaUpdateWithoutProjectsInput, project_mediaUncheckedUpdateWithoutProjectsInput>
  }

  export type project_mediaUpdateManyWithWhereWithoutProjectsInput = {
    where: project_mediaScalarWhereInput
    data: XOR<project_mediaUpdateManyMutationInput, project_mediaUncheckedUpdateManyWithoutProjectsInput>
  }

  export type project_staffUpsertWithWhereUniqueWithoutProjectsInput = {
    where: project_staffWhereUniqueInput
    update: XOR<project_staffUpdateWithoutProjectsInput, project_staffUncheckedUpdateWithoutProjectsInput>
    create: XOR<project_staffCreateWithoutProjectsInput, project_staffUncheckedCreateWithoutProjectsInput>
  }

  export type project_staffUpdateWithWhereUniqueWithoutProjectsInput = {
    where: project_staffWhereUniqueInput
    data: XOR<project_staffUpdateWithoutProjectsInput, project_staffUncheckedUpdateWithoutProjectsInput>
  }

  export type project_staffUpdateManyWithWhereWithoutProjectsInput = {
    where: project_staffScalarWhereInput
    data: XOR<project_staffUpdateManyMutationInput, project_staffUncheckedUpdateManyWithoutProjectsInput>
  }

  export type project_stagesUpsertWithWhereUniqueWithoutProjectsInput = {
    where: project_stagesWhereUniqueInput
    update: XOR<project_stagesUpdateWithoutProjectsInput, project_stagesUncheckedUpdateWithoutProjectsInput>
    create: XOR<project_stagesCreateWithoutProjectsInput, project_stagesUncheckedCreateWithoutProjectsInput>
  }

  export type project_stagesUpdateWithWhereUniqueWithoutProjectsInput = {
    where: project_stagesWhereUniqueInput
    data: XOR<project_stagesUpdateWithoutProjectsInput, project_stagesUncheckedUpdateWithoutProjectsInput>
  }

  export type project_stagesUpdateManyWithWhereWithoutProjectsInput = {
    where: project_stagesScalarWhereInput
    data: XOR<project_stagesUpdateManyMutationInput, project_stagesUncheckedUpdateManyWithoutProjectsInput>
  }

  export type project_stagesScalarWhereInput = {
    AND?: project_stagesScalarWhereInput | project_stagesScalarWhereInput[]
    OR?: project_stagesScalarWhereInput[]
    NOT?: project_stagesScalarWhereInput | project_stagesScalarWhereInput[]
    id?: IntFilter<"project_stages"> | number
    project_id?: IntFilter<"project_stages"> | number
    name?: StringFilter<"project_stages"> | string
    description?: StringNullableFilter<"project_stages"> | string | null
    start_date?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    end_date?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    status?: StringNullableFilter<"project_stages"> | string | null
    order_index?: IntFilter<"project_stages"> | number
    estimated_duration?: IntNullableFilter<"project_stages"> | number | null
    actual_duration?: IntNullableFilter<"project_stages"> | number | null
    completion_percentage?: IntNullableFilter<"project_stages"> | number | null
    notes?: StringNullableFilter<"project_stages"> | string | null
    created_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_stages"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_stages"> | string | null
  }

  export type project_tagsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: project_tagsWhereUniqueInput
    update: XOR<project_tagsUpdateWithoutProjectsInput, project_tagsUncheckedUpdateWithoutProjectsInput>
    create: XOR<project_tagsCreateWithoutProjectsInput, project_tagsUncheckedCreateWithoutProjectsInput>
  }

  export type project_tagsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: project_tagsWhereUniqueInput
    data: XOR<project_tagsUpdateWithoutProjectsInput, project_tagsUncheckedUpdateWithoutProjectsInput>
  }

  export type project_tagsUpdateManyWithWhereWithoutProjectsInput = {
    where: project_tagsScalarWhereInput
    data: XOR<project_tagsUpdateManyMutationInput, project_tagsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type project_tagsScalarWhereInput = {
    AND?: project_tagsScalarWhereInput | project_tagsScalarWhereInput[]
    OR?: project_tagsScalarWhereInput[]
    NOT?: project_tagsScalarWhereInput | project_tagsScalarWhereInput[]
    project_id?: IntFilter<"project_tags"> | number
    tag_id?: IntFilter<"project_tags"> | number
    created_at?: DateTimeNullableFilter<"project_tags"> | Date | string | null
    synced_at?: DateTimeNullableFilter<"project_tags"> | Date | string | null
    synced_by_device_id?: StringNullableFilter<"project_tags"> | string | null
  }

  export type addressesUpsertWithoutProjectsInput = {
    update: XOR<addressesUpdateWithoutProjectsInput, addressesUncheckedUpdateWithoutProjectsInput>
    create: XOR<addressesCreateWithoutProjectsInput, addressesUncheckedCreateWithoutProjectsInput>
    where?: addressesWhereInput
  }

  export type addressesUpdateToOneWithWhereWithoutProjectsInput = {
    where?: addressesWhereInput
    data: XOR<addressesUpdateWithoutProjectsInput, addressesUncheckedUpdateWithoutProjectsInput>
  }

  export type addressesUpdateWithoutProjectsInput = {
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateManyWithoutAddressesNestedInput
    staff?: staffUpdateManyWithoutAddressesNestedInput
  }

  export type addressesUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUncheckedUpdateManyWithoutAddressesNestedInput
    staff?: staffUncheckedUpdateManyWithoutAddressesNestedInput
  }

  export type clientsUpsertWithoutProjectsInput = {
    update: XOR<clientsUpdateWithoutProjectsInput, clientsUncheckedUpdateWithoutProjectsInput>
    create: XOR<clientsCreateWithoutProjectsInput, clientsUncheckedCreateWithoutProjectsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutProjectsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutProjectsInput, clientsUncheckedUpdateWithoutProjectsInput>
  }

  export type clientsUpdateWithoutProjectsInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    addresses?: addressesUpdateOneWithoutClientsNestedInput
    documents?: documentsUpdateManyWithoutClientsNestedInput
    events?: eventsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutClientsNestedInput
    events?: eventsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type site_reportsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: site_reportsWhereUniqueInput
    update: XOR<site_reportsUpdateWithoutProjectsInput, site_reportsUncheckedUpdateWithoutProjectsInput>
    create: XOR<site_reportsCreateWithoutProjectsInput, site_reportsUncheckedCreateWithoutProjectsInput>
  }

  export type site_reportsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: site_reportsWhereUniqueInput
    data: XOR<site_reportsUpdateWithoutProjectsInput, site_reportsUncheckedUpdateWithoutProjectsInput>
  }

  export type site_reportsUpdateManyWithWhereWithoutProjectsInput = {
    where: site_reportsScalarWhereInput
    data: XOR<site_reportsUpdateManyMutationInput, site_reportsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type time_logsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: time_logsWhereUniqueInput
    update: XOR<time_logsUpdateWithoutProjectsInput, time_logsUncheckedUpdateWithoutProjectsInput>
    create: XOR<time_logsCreateWithoutProjectsInput, time_logsUncheckedCreateWithoutProjectsInput>
  }

  export type time_logsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: time_logsWhereUniqueInput
    data: XOR<time_logsUpdateWithoutProjectsInput, time_logsUncheckedUpdateWithoutProjectsInput>
  }

  export type time_logsUpdateManyWithWhereWithoutProjectsInput = {
    where: time_logsScalarWhereInput
    data: XOR<time_logsUpdateManyMutationInput, time_logsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type staffCreateWithoutRolesInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutRolesInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutRolesInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutRolesInput, staffUncheckedCreateWithoutRolesInput>
  }

  export type staffCreateManyRolesInputEnvelope = {
    data: staffCreateManyRolesInput | staffCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type staffUpsertWithWhereUniqueWithoutRolesInput = {
    where: staffWhereUniqueInput
    update: XOR<staffUpdateWithoutRolesInput, staffUncheckedUpdateWithoutRolesInput>
    create: XOR<staffCreateWithoutRolesInput, staffUncheckedCreateWithoutRolesInput>
  }

  export type staffUpdateWithWhereUniqueWithoutRolesInput = {
    where: staffWhereUniqueInput
    data: XOR<staffUpdateWithoutRolesInput, staffUncheckedUpdateWithoutRolesInput>
  }

  export type staffUpdateManyWithWhereWithoutRolesInput = {
    where: staffScalarWhereInput
    data: XOR<staffUpdateManyMutationInput, staffUncheckedUpdateManyWithoutRolesInput>
  }

  export type projectsCreateWithoutSite_reportsInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    time_logs?: time_logsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutSite_reportsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutSite_reportsInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutSite_reportsInput, projectsUncheckedCreateWithoutSite_reportsInput>
  }

  export type staffCreateWithoutSite_reportsInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutSite_reportsInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutSite_reportsInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutSite_reportsInput, staffUncheckedCreateWithoutSite_reportsInput>
  }

  export type project_stagesCreateWithoutSite_reportsInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutSite_reportsInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutSite_reportsInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutSite_reportsInput, project_stagesUncheckedCreateWithoutSite_reportsInput>
  }

  export type projectsUpsertWithoutSite_reportsInput = {
    update: XOR<projectsUpdateWithoutSite_reportsInput, projectsUncheckedUpdateWithoutSite_reportsInput>
    create: XOR<projectsCreateWithoutSite_reportsInput, projectsUncheckedCreateWithoutSite_reportsInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutSite_reportsInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutSite_reportsInput, projectsUncheckedUpdateWithoutSite_reportsInput>
  }

  export type projectsUpdateWithoutSite_reportsInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutSite_reportsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type staffUpsertWithoutSite_reportsInput = {
    update: XOR<staffUpdateWithoutSite_reportsInput, staffUncheckedUpdateWithoutSite_reportsInput>
    create: XOR<staffCreateWithoutSite_reportsInput, staffUncheckedCreateWithoutSite_reportsInput>
    where?: staffWhereInput
  }

  export type staffUpdateToOneWithWhereWithoutSite_reportsInput = {
    where?: staffWhereInput
    data: XOR<staffUpdateWithoutSite_reportsInput, staffUncheckedUpdateWithoutSite_reportsInput>
  }

  export type staffUpdateWithoutSite_reportsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutSite_reportsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type project_stagesUpsertWithoutSite_reportsInput = {
    update: XOR<project_stagesUpdateWithoutSite_reportsInput, project_stagesUncheckedUpdateWithoutSite_reportsInput>
    create: XOR<project_stagesCreateWithoutSite_reportsInput, project_stagesUncheckedCreateWithoutSite_reportsInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutSite_reportsInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutSite_reportsInput, project_stagesUncheckedUpdateWithoutSite_reportsInput>
  }

  export type project_stagesUpdateWithoutSite_reportsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutSite_reportsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type eventsCreateWithoutStaffInput = {
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutEventsInput
    projects?: projectsCreateNestedOneWithoutEventsInput
  }

  export type eventsUncheckedCreateWithoutStaffInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    project_id?: number | null
    client_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type eventsCreateOrConnectWithoutStaffInput = {
    where: eventsWhereUniqueInput
    create: XOR<eventsCreateWithoutStaffInput, eventsUncheckedCreateWithoutStaffInput>
  }

  export type eventsCreateManyStaffInputEnvelope = {
    data: eventsCreateManyStaffInput | eventsCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type project_mediaCreateWithoutStaffInput = {
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects?: projectsCreateNestedOneWithoutProject_mediaInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_mediaInput
  }

  export type project_mediaUncheckedCreateWithoutStaffInput = {
    id?: number
    project_id?: number | null
    stage_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_mediaCreateOrConnectWithoutStaffInput = {
    where: project_mediaWhereUniqueInput
    create: XOR<project_mediaCreateWithoutStaffInput, project_mediaUncheckedCreateWithoutStaffInput>
  }

  export type project_mediaCreateManyStaffInputEnvelope = {
    data: project_mediaCreateManyStaffInput | project_mediaCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type project_staffCreateWithoutStaffInput = {
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    projects: projectsCreateNestedOneWithoutProject_staffInput
    project_stages?: project_stagesCreateNestedOneWithoutProject_staffInput
  }

  export type project_staffUncheckedCreateWithoutStaffInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_staffCreateOrConnectWithoutStaffInput = {
    where: project_staffWhereUniqueInput
    create: XOR<project_staffCreateWithoutStaffInput, project_staffUncheckedCreateWithoutStaffInput>
  }

  export type project_staffCreateManyStaffInputEnvelope = {
    data: project_staffCreateManyStaffInput | project_staffCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type site_reportsCreateWithoutStaffInput = {
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutSite_reportsInput
    project_stages?: project_stagesCreateNestedOneWithoutSite_reportsInput
  }

  export type site_reportsUncheckedCreateWithoutStaffInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type site_reportsCreateOrConnectWithoutStaffInput = {
    where: site_reportsWhereUniqueInput
    create: XOR<site_reportsCreateWithoutStaffInput, site_reportsUncheckedCreateWithoutStaffInput>
  }

  export type site_reportsCreateManyStaffInputEnvelope = {
    data: site_reportsCreateManyStaffInput | site_reportsCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type addressesCreateWithoutStaffInput = {
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedManyWithoutAddressesInput
    projects?: projectsCreateNestedManyWithoutAddressesInput
  }

  export type addressesUncheckedCreateWithoutStaffInput = {
    id?: number
    street_number?: string | null
    street_name: string
    additional_address?: string | null
    zip_code: string
    city: string
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsUncheckedCreateNestedManyWithoutAddressesInput
    projects?: projectsUncheckedCreateNestedManyWithoutAddressesInput
  }

  export type addressesCreateOrConnectWithoutStaffInput = {
    where: addressesWhereUniqueInput
    create: XOR<addressesCreateWithoutStaffInput, addressesUncheckedCreateWithoutStaffInput>
  }

  export type rolesCreateWithoutStaffInput = {
    name: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type rolesUncheckedCreateWithoutStaffInput = {
    id?: number
    name: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type rolesCreateOrConnectWithoutStaffInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutStaffInput, rolesUncheckedCreateWithoutStaffInput>
  }

  export type stage_checklistsCreateWithoutStaffInput = {
    label: string
    is_done?: boolean | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_stages: project_stagesCreateNestedOneWithoutStage_checklistsInput
  }

  export type stage_checklistsUncheckedCreateWithoutStaffInput = {
    id?: number
    stage_id: number
    label: string
    is_done?: boolean | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_checklistsCreateOrConnectWithoutStaffInput = {
    where: stage_checklistsWhereUniqueInput
    create: XOR<stage_checklistsCreateWithoutStaffInput, stage_checklistsUncheckedCreateWithoutStaffInput>
  }

  export type stage_checklistsCreateManyStaffInputEnvelope = {
    data: stage_checklistsCreateManyStaffInput | stage_checklistsCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type tasksCreateWithoutStaffInput = {
    label: string
    description?: string | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_stages: project_stagesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutStaffInput = {
    id?: number
    stage_id: number
    label: string
    description?: string | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type tasksCreateOrConnectWithoutStaffInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutStaffInput, tasksUncheckedCreateWithoutStaffInput>
  }

  export type tasksCreateManyStaffInputEnvelope = {
    data: tasksCreateManyStaffInput | tasksCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type time_logsCreateWithoutStaffInput = {
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutTime_logsInput
    project_stages?: project_stagesCreateNestedOneWithoutTime_logsInput
  }

  export type time_logsUncheckedCreateWithoutStaffInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsCreateOrConnectWithoutStaffInput = {
    where: time_logsWhereUniqueInput
    create: XOR<time_logsCreateWithoutStaffInput, time_logsUncheckedCreateWithoutStaffInput>
  }

  export type time_logsCreateManyStaffInputEnvelope = {
    data: time_logsCreateManyStaffInput | time_logsCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type eventsUpsertWithWhereUniqueWithoutStaffInput = {
    where: eventsWhereUniqueInput
    update: XOR<eventsUpdateWithoutStaffInput, eventsUncheckedUpdateWithoutStaffInput>
    create: XOR<eventsCreateWithoutStaffInput, eventsUncheckedCreateWithoutStaffInput>
  }

  export type eventsUpdateWithWhereUniqueWithoutStaffInput = {
    where: eventsWhereUniqueInput
    data: XOR<eventsUpdateWithoutStaffInput, eventsUncheckedUpdateWithoutStaffInput>
  }

  export type eventsUpdateManyWithWhereWithoutStaffInput = {
    where: eventsScalarWhereInput
    data: XOR<eventsUpdateManyMutationInput, eventsUncheckedUpdateManyWithoutStaffInput>
  }

  export type project_mediaUpsertWithWhereUniqueWithoutStaffInput = {
    where: project_mediaWhereUniqueInput
    update: XOR<project_mediaUpdateWithoutStaffInput, project_mediaUncheckedUpdateWithoutStaffInput>
    create: XOR<project_mediaCreateWithoutStaffInput, project_mediaUncheckedCreateWithoutStaffInput>
  }

  export type project_mediaUpdateWithWhereUniqueWithoutStaffInput = {
    where: project_mediaWhereUniqueInput
    data: XOR<project_mediaUpdateWithoutStaffInput, project_mediaUncheckedUpdateWithoutStaffInput>
  }

  export type project_mediaUpdateManyWithWhereWithoutStaffInput = {
    where: project_mediaScalarWhereInput
    data: XOR<project_mediaUpdateManyMutationInput, project_mediaUncheckedUpdateManyWithoutStaffInput>
  }

  export type project_staffUpsertWithWhereUniqueWithoutStaffInput = {
    where: project_staffWhereUniqueInput
    update: XOR<project_staffUpdateWithoutStaffInput, project_staffUncheckedUpdateWithoutStaffInput>
    create: XOR<project_staffCreateWithoutStaffInput, project_staffUncheckedCreateWithoutStaffInput>
  }

  export type project_staffUpdateWithWhereUniqueWithoutStaffInput = {
    where: project_staffWhereUniqueInput
    data: XOR<project_staffUpdateWithoutStaffInput, project_staffUncheckedUpdateWithoutStaffInput>
  }

  export type project_staffUpdateManyWithWhereWithoutStaffInput = {
    where: project_staffScalarWhereInput
    data: XOR<project_staffUpdateManyMutationInput, project_staffUncheckedUpdateManyWithoutStaffInput>
  }

  export type site_reportsUpsertWithWhereUniqueWithoutStaffInput = {
    where: site_reportsWhereUniqueInput
    update: XOR<site_reportsUpdateWithoutStaffInput, site_reportsUncheckedUpdateWithoutStaffInput>
    create: XOR<site_reportsCreateWithoutStaffInput, site_reportsUncheckedCreateWithoutStaffInput>
  }

  export type site_reportsUpdateWithWhereUniqueWithoutStaffInput = {
    where: site_reportsWhereUniqueInput
    data: XOR<site_reportsUpdateWithoutStaffInput, site_reportsUncheckedUpdateWithoutStaffInput>
  }

  export type site_reportsUpdateManyWithWhereWithoutStaffInput = {
    where: site_reportsScalarWhereInput
    data: XOR<site_reportsUpdateManyMutationInput, site_reportsUncheckedUpdateManyWithoutStaffInput>
  }

  export type addressesUpsertWithoutStaffInput = {
    update: XOR<addressesUpdateWithoutStaffInput, addressesUncheckedUpdateWithoutStaffInput>
    create: XOR<addressesCreateWithoutStaffInput, addressesUncheckedCreateWithoutStaffInput>
    where?: addressesWhereInput
  }

  export type addressesUpdateToOneWithWhereWithoutStaffInput = {
    where?: addressesWhereInput
    data: XOR<addressesUpdateWithoutStaffInput, addressesUncheckedUpdateWithoutStaffInput>
  }

  export type addressesUpdateWithoutStaffInput = {
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateManyWithoutAddressesNestedInput
    projects?: projectsUpdateManyWithoutAddressesNestedInput
  }

  export type addressesUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    street_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_name?: StringFieldUpdateOperationsInput | string
    additional_address?: NullableStringFieldUpdateOperationsInput | string | null
    zip_code?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUncheckedUpdateManyWithoutAddressesNestedInput
    projects?: projectsUncheckedUpdateManyWithoutAddressesNestedInput
  }

  export type rolesUpsertWithoutStaffInput = {
    update: XOR<rolesUpdateWithoutStaffInput, rolesUncheckedUpdateWithoutStaffInput>
    create: XOR<rolesCreateWithoutStaffInput, rolesUncheckedCreateWithoutStaffInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutStaffInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutStaffInput, rolesUncheckedUpdateWithoutStaffInput>
  }

  export type rolesUpdateWithoutStaffInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stage_checklistsUpsertWithWhereUniqueWithoutStaffInput = {
    where: stage_checklistsWhereUniqueInput
    update: XOR<stage_checklistsUpdateWithoutStaffInput, stage_checklistsUncheckedUpdateWithoutStaffInput>
    create: XOR<stage_checklistsCreateWithoutStaffInput, stage_checklistsUncheckedCreateWithoutStaffInput>
  }

  export type stage_checklistsUpdateWithWhereUniqueWithoutStaffInput = {
    where: stage_checklistsWhereUniqueInput
    data: XOR<stage_checklistsUpdateWithoutStaffInput, stage_checklistsUncheckedUpdateWithoutStaffInput>
  }

  export type stage_checklistsUpdateManyWithWhereWithoutStaffInput = {
    where: stage_checklistsScalarWhereInput
    data: XOR<stage_checklistsUpdateManyMutationInput, stage_checklistsUncheckedUpdateManyWithoutStaffInput>
  }

  export type tasksUpsertWithWhereUniqueWithoutStaffInput = {
    where: tasksWhereUniqueInput
    update: XOR<tasksUpdateWithoutStaffInput, tasksUncheckedUpdateWithoutStaffInput>
    create: XOR<tasksCreateWithoutStaffInput, tasksUncheckedCreateWithoutStaffInput>
  }

  export type tasksUpdateWithWhereUniqueWithoutStaffInput = {
    where: tasksWhereUniqueInput
    data: XOR<tasksUpdateWithoutStaffInput, tasksUncheckedUpdateWithoutStaffInput>
  }

  export type tasksUpdateManyWithWhereWithoutStaffInput = {
    where: tasksScalarWhereInput
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyWithoutStaffInput>
  }

  export type time_logsUpsertWithWhereUniqueWithoutStaffInput = {
    where: time_logsWhereUniqueInput
    update: XOR<time_logsUpdateWithoutStaffInput, time_logsUncheckedUpdateWithoutStaffInput>
    create: XOR<time_logsCreateWithoutStaffInput, time_logsUncheckedCreateWithoutStaffInput>
  }

  export type time_logsUpdateWithWhereUniqueWithoutStaffInput = {
    where: time_logsWhereUniqueInput
    data: XOR<time_logsUpdateWithoutStaffInput, time_logsUncheckedUpdateWithoutStaffInput>
  }

  export type time_logsUpdateManyWithWhereWithoutStaffInput = {
    where: time_logsScalarWhereInput
    data: XOR<time_logsUpdateManyMutationInput, time_logsUncheckedUpdateManyWithoutStaffInput>
  }

  export type staffCreateWithoutStage_checklistsInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutStage_checklistsInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutStage_checklistsInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutStage_checklistsInput, staffUncheckedCreateWithoutStage_checklistsInput>
  }

  export type project_stagesCreateWithoutStage_checklistsInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutStage_checklistsInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutStage_checklistsInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutStage_checklistsInput, project_stagesUncheckedCreateWithoutStage_checklistsInput>
  }

  export type staffUpsertWithoutStage_checklistsInput = {
    update: XOR<staffUpdateWithoutStage_checklistsInput, staffUncheckedUpdateWithoutStage_checklistsInput>
    create: XOR<staffCreateWithoutStage_checklistsInput, staffUncheckedCreateWithoutStage_checklistsInput>
    where?: staffWhereInput
  }

  export type staffUpdateToOneWithWhereWithoutStage_checklistsInput = {
    where?: staffWhereInput
    data: XOR<staffUpdateWithoutStage_checklistsInput, staffUncheckedUpdateWithoutStage_checklistsInput>
  }

  export type staffUpdateWithoutStage_checklistsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutStage_checklistsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type project_stagesUpsertWithoutStage_checklistsInput = {
    update: XOR<project_stagesUpdateWithoutStage_checklistsInput, project_stagesUncheckedUpdateWithoutStage_checklistsInput>
    create: XOR<project_stagesCreateWithoutStage_checklistsInput, project_stagesUncheckedCreateWithoutStage_checklistsInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutStage_checklistsInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutStage_checklistsInput, project_stagesUncheckedUpdateWithoutStage_checklistsInput>
  }

  export type project_stagesUpdateWithoutStage_checklistsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutStage_checklistsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesCreateWithoutStage_tagsInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutStage_tagsInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutStage_tagsInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutStage_tagsInput, project_stagesUncheckedCreateWithoutStage_tagsInput>
  }

  export type tagsCreateWithoutStage_tagsInput = {
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsCreateNestedManyWithoutTagsInput
    project_tags?: project_tagsCreateNestedManyWithoutTagsInput
  }

  export type tagsUncheckedCreateWithoutStage_tagsInput = {
    id?: number
    label: string
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    document_tags?: document_tagsUncheckedCreateNestedManyWithoutTagsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutTagsInput
  }

  export type tagsCreateOrConnectWithoutStage_tagsInput = {
    where: tagsWhereUniqueInput
    create: XOR<tagsCreateWithoutStage_tagsInput, tagsUncheckedCreateWithoutStage_tagsInput>
  }

  export type project_stagesUpsertWithoutStage_tagsInput = {
    update: XOR<project_stagesUpdateWithoutStage_tagsInput, project_stagesUncheckedUpdateWithoutStage_tagsInput>
    create: XOR<project_stagesCreateWithoutStage_tagsInput, project_stagesUncheckedCreateWithoutStage_tagsInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutStage_tagsInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutStage_tagsInput, project_stagesUncheckedUpdateWithoutStage_tagsInput>
  }

  export type project_stagesUpdateWithoutStage_tagsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutStage_tagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type tagsUpsertWithoutStage_tagsInput = {
    update: XOR<tagsUpdateWithoutStage_tagsInput, tagsUncheckedUpdateWithoutStage_tagsInput>
    create: XOR<tagsCreateWithoutStage_tagsInput, tagsUncheckedCreateWithoutStage_tagsInput>
    where?: tagsWhereInput
  }

  export type tagsUpdateToOneWithWhereWithoutStage_tagsInput = {
    where?: tagsWhereInput
    data: XOR<tagsUpdateWithoutStage_tagsInput, tagsUncheckedUpdateWithoutStage_tagsInput>
  }

  export type tagsUpdateWithoutStage_tagsInput = {
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUpdateManyWithoutTagsNestedInput
    project_tags?: project_tagsUpdateManyWithoutTagsNestedInput
  }

  export type tagsUncheckedUpdateWithoutStage_tagsInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUncheckedUpdateManyWithoutTagsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type document_tagsCreateWithoutTagsInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    documents: documentsCreateNestedOneWithoutDocument_tagsInput
  }

  export type document_tagsUncheckedCreateWithoutTagsInput = {
    document_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type document_tagsCreateOrConnectWithoutTagsInput = {
    where: document_tagsWhereUniqueInput
    create: XOR<document_tagsCreateWithoutTagsInput, document_tagsUncheckedCreateWithoutTagsInput>
  }

  export type document_tagsCreateManyTagsInputEnvelope = {
    data: document_tagsCreateManyTagsInput | document_tagsCreateManyTagsInput[]
    skipDuplicates?: boolean
  }

  export type project_tagsCreateWithoutTagsInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    projects: projectsCreateNestedOneWithoutProject_tagsInput
  }

  export type project_tagsUncheckedCreateWithoutTagsInput = {
    project_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_tagsCreateOrConnectWithoutTagsInput = {
    where: project_tagsWhereUniqueInput
    create: XOR<project_tagsCreateWithoutTagsInput, project_tagsUncheckedCreateWithoutTagsInput>
  }

  export type project_tagsCreateManyTagsInputEnvelope = {
    data: project_tagsCreateManyTagsInput | project_tagsCreateManyTagsInput[]
    skipDuplicates?: boolean
  }

  export type stage_tagsCreateWithoutTagsInput = {
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_stages: project_stagesCreateNestedOneWithoutStage_tagsInput
  }

  export type stage_tagsUncheckedCreateWithoutTagsInput = {
    stage_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_tagsCreateOrConnectWithoutTagsInput = {
    where: stage_tagsWhereUniqueInput
    create: XOR<stage_tagsCreateWithoutTagsInput, stage_tagsUncheckedCreateWithoutTagsInput>
  }

  export type stage_tagsCreateManyTagsInputEnvelope = {
    data: stage_tagsCreateManyTagsInput | stage_tagsCreateManyTagsInput[]
    skipDuplicates?: boolean
  }

  export type document_tagsUpsertWithWhereUniqueWithoutTagsInput = {
    where: document_tagsWhereUniqueInput
    update: XOR<document_tagsUpdateWithoutTagsInput, document_tagsUncheckedUpdateWithoutTagsInput>
    create: XOR<document_tagsCreateWithoutTagsInput, document_tagsUncheckedCreateWithoutTagsInput>
  }

  export type document_tagsUpdateWithWhereUniqueWithoutTagsInput = {
    where: document_tagsWhereUniqueInput
    data: XOR<document_tagsUpdateWithoutTagsInput, document_tagsUncheckedUpdateWithoutTagsInput>
  }

  export type document_tagsUpdateManyWithWhereWithoutTagsInput = {
    where: document_tagsScalarWhereInput
    data: XOR<document_tagsUpdateManyMutationInput, document_tagsUncheckedUpdateManyWithoutTagsInput>
  }

  export type project_tagsUpsertWithWhereUniqueWithoutTagsInput = {
    where: project_tagsWhereUniqueInput
    update: XOR<project_tagsUpdateWithoutTagsInput, project_tagsUncheckedUpdateWithoutTagsInput>
    create: XOR<project_tagsCreateWithoutTagsInput, project_tagsUncheckedCreateWithoutTagsInput>
  }

  export type project_tagsUpdateWithWhereUniqueWithoutTagsInput = {
    where: project_tagsWhereUniqueInput
    data: XOR<project_tagsUpdateWithoutTagsInput, project_tagsUncheckedUpdateWithoutTagsInput>
  }

  export type project_tagsUpdateManyWithWhereWithoutTagsInput = {
    where: project_tagsScalarWhereInput
    data: XOR<project_tagsUpdateManyMutationInput, project_tagsUncheckedUpdateManyWithoutTagsInput>
  }

  export type stage_tagsUpsertWithWhereUniqueWithoutTagsInput = {
    where: stage_tagsWhereUniqueInput
    update: XOR<stage_tagsUpdateWithoutTagsInput, stage_tagsUncheckedUpdateWithoutTagsInput>
    create: XOR<stage_tagsCreateWithoutTagsInput, stage_tagsUncheckedCreateWithoutTagsInput>
  }

  export type stage_tagsUpdateWithWhereUniqueWithoutTagsInput = {
    where: stage_tagsWhereUniqueInput
    data: XOR<stage_tagsUpdateWithoutTagsInput, stage_tagsUncheckedUpdateWithoutTagsInput>
  }

  export type stage_tagsUpdateManyWithWhereWithoutTagsInput = {
    where: stage_tagsScalarWhereInput
    data: XOR<stage_tagsUpdateManyMutationInput, stage_tagsUncheckedUpdateManyWithoutTagsInput>
  }

  export type staffCreateWithoutTasksInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    time_logs?: time_logsCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutTasksInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutTasksInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutTasksInput, staffUncheckedCreateWithoutTasksInput>
  }

  export type project_stagesCreateWithoutTasksInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutTasksInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    time_logs?: time_logsUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutTasksInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutTasksInput, project_stagesUncheckedCreateWithoutTasksInput>
  }

  export type staffUpsertWithoutTasksInput = {
    update: XOR<staffUpdateWithoutTasksInput, staffUncheckedUpdateWithoutTasksInput>
    create: XOR<staffCreateWithoutTasksInput, staffUncheckedCreateWithoutTasksInput>
    where?: staffWhereInput
  }

  export type staffUpdateToOneWithWhereWithoutTasksInput = {
    where?: staffWhereInput
    data: XOR<staffUpdateWithoutTasksInput, staffUncheckedUpdateWithoutTasksInput>
  }

  export type staffUpdateWithoutTasksInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type project_stagesUpsertWithoutTasksInput = {
    update: XOR<project_stagesUpdateWithoutTasksInput, project_stagesUncheckedUpdateWithoutTasksInput>
    create: XOR<project_stagesCreateWithoutTasksInput, project_stagesUncheckedCreateWithoutTasksInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutTasksInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutTasksInput, project_stagesUncheckedUpdateWithoutTasksInput>
  }

  export type project_stagesUpdateWithoutTasksInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutTasksInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type projectsCreateWithoutTime_logsInput = {
    reference: string
    name: string
    description?: string | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsCreateNestedManyWithoutProjectsInput
    events?: eventsCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsCreateNestedManyWithoutProjectsInput
    addresses?: addressesCreateNestedOneWithoutProjectsInput
    clients: clientsCreateNestedOneWithoutProjectsInput
    site_reports?: site_reportsCreateNestedManyWithoutProjectsInput
  }

  export type projectsUncheckedCreateWithoutTime_logsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    documents?: documentsUncheckedCreateNestedManyWithoutProjectsInput
    events?: eventsUncheckedCreateNestedManyWithoutProjectsInput
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProjectsInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProjectsInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProjectsInput
    project_stages?: project_stagesUncheckedCreateNestedManyWithoutProjectsInput
    project_tags?: project_tagsUncheckedCreateNestedManyWithoutProjectsInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type projectsCreateOrConnectWithoutTime_logsInput = {
    where: projectsWhereUniqueInput
    create: XOR<projectsCreateWithoutTime_logsInput, projectsUncheckedCreateWithoutTime_logsInput>
  }

  export type staffCreateWithoutTime_logsInput = {
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsCreateNestedManyWithoutStaffInput
    project_media?: project_mediaCreateNestedManyWithoutStaffInput
    project_staff?: project_staffCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsCreateNestedManyWithoutStaffInput
    addresses?: addressesCreateNestedOneWithoutStaffInput
    roles: rolesCreateNestedOneWithoutStaffInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutStaffInput
    tasks?: tasksCreateNestedManyWithoutStaffInput
  }

  export type staffUncheckedCreateWithoutTime_logsInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    events?: eventsUncheckedCreateNestedManyWithoutStaffInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutStaffInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutStaffInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutStaffInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutStaffInput
    tasks?: tasksUncheckedCreateNestedManyWithoutStaffInput
  }

  export type staffCreateOrConnectWithoutTime_logsInput = {
    where: staffWhereUniqueInput
    create: XOR<staffCreateWithoutTime_logsInput, staffUncheckedCreateWithoutTime_logsInput>
  }

  export type project_stagesCreateWithoutTime_logsInput = {
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffCreateNestedManyWithoutProject_stagesInput
    projects: projectsCreateNestedOneWithoutProject_stagesInput
    site_reports?: site_reportsCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesUncheckedCreateWithoutTime_logsInput = {
    id?: number
    project_id: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
    project_materials?: project_materialsUncheckedCreateNestedManyWithoutProject_stagesInput
    project_media?: project_mediaUncheckedCreateNestedManyWithoutProject_stagesInput
    project_staff?: project_staffUncheckedCreateNestedManyWithoutProject_stagesInput
    site_reports?: site_reportsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_checklists?: stage_checklistsUncheckedCreateNestedManyWithoutProject_stagesInput
    stage_tags?: stage_tagsUncheckedCreateNestedManyWithoutProject_stagesInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProject_stagesInput
  }

  export type project_stagesCreateOrConnectWithoutTime_logsInput = {
    where: project_stagesWhereUniqueInput
    create: XOR<project_stagesCreateWithoutTime_logsInput, project_stagesUncheckedCreateWithoutTime_logsInput>
  }

  export type projectsUpsertWithoutTime_logsInput = {
    update: XOR<projectsUpdateWithoutTime_logsInput, projectsUncheckedUpdateWithoutTime_logsInput>
    create: XOR<projectsCreateWithoutTime_logsInput, projectsUncheckedCreateWithoutTime_logsInput>
    where?: projectsWhereInput
  }

  export type projectsUpdateToOneWithWhereWithoutTime_logsInput = {
    where?: projectsWhereInput
    data: XOR<projectsUpdateWithoutTime_logsInput, projectsUncheckedUpdateWithoutTime_logsInput>
  }

  export type projectsUpdateWithoutTime_logsInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutTime_logsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type staffUpsertWithoutTime_logsInput = {
    update: XOR<staffUpdateWithoutTime_logsInput, staffUncheckedUpdateWithoutTime_logsInput>
    create: XOR<staffCreateWithoutTime_logsInput, staffUncheckedCreateWithoutTime_logsInput>
    where?: staffWhereInput
  }

  export type staffUpdateToOneWithWhereWithoutTime_logsInput = {
    where?: staffWhereInput
    data: XOR<staffUpdateWithoutTime_logsInput, staffUncheckedUpdateWithoutTime_logsInput>
  }

  export type staffUpdateWithoutTime_logsInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutTime_logsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type project_stagesUpsertWithoutTime_logsInput = {
    update: XOR<project_stagesUpdateWithoutTime_logsInput, project_stagesUncheckedUpdateWithoutTime_logsInput>
    create: XOR<project_stagesCreateWithoutTime_logsInput, project_stagesUncheckedCreateWithoutTime_logsInput>
    where?: project_stagesWhereInput
  }

  export type project_stagesUpdateToOneWithWhereWithoutTime_logsInput = {
    where?: project_stagesWhereInput
    data: XOR<project_stagesUpdateWithoutTime_logsInput, project_stagesUncheckedUpdateWithoutTime_logsInput>
  }

  export type project_stagesUpdateWithoutTime_logsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutTime_logsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type clientsCreateManyAddressesInput = {
    id?: number
    company_name?: string | null
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    siret?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type projectsCreateManyAddressesInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    client_id: number
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type staffCreateManyAddressesInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    role_id: number
    phone?: string | null
    mobile?: string | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type clientsUpdateWithoutAddressesInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutClientsNestedInput
    events?: eventsUpdateManyWithoutClientsNestedInput
    projects?: projectsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutAddressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutClientsNestedInput
    events?: eventsUncheckedUpdateManyWithoutClientsNestedInput
    projects?: projectsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateManyWithoutAddressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type projectsUpdateWithoutAddressesInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutAddressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateManyWithoutAddressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type staffUpdateWithoutAddressesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    roles?: rolesUpdateOneRequiredWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutAddressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateManyWithoutAddressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type documentsCreateManyClientsInput = {
    id?: number
    project_id: number
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type eventsCreateManyClientsInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    project_id?: number | null
    staff_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type projectsCreateManyClientsInput = {
    id?: number
    reference: string
    name: string
    description?: string | null
    address_id?: number | null
    status?: $Enums.project_status | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    estimated_duration?: number | null
    budget?: Decimal | DecimalJsLike | number | string | null
    actual_cost?: Decimal | DecimalJsLike | number | string | null
    margin?: Decimal | DecimalJsLike | number | string | null
    priority?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type documentsUpdateWithoutClientsInput = {
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUpdateManyWithoutDocumentsNestedInput
    projects?: projectsUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type documentsUncheckedUpdateWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUncheckedUpdateManyWithoutDocumentsNestedInput
  }

  export type documentsUncheckedUpdateManyWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUpdateWithoutClientsInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects?: projectsUpdateOneWithoutEventsNestedInput
    staff?: staffUpdateOneWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUncheckedUpdateManyWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type projectsUpdateWithoutClientsInput = {
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUpdateManyWithoutProjectsNestedInput
    events?: eventsUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUpdateManyWithoutProjectsNestedInput
    addresses?: addressesUpdateOneWithoutProjectsNestedInput
    site_reports?: site_reportsUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: documentsUncheckedUpdateManyWithoutProjectsNestedInput
    events?: eventsUncheckedUpdateManyWithoutProjectsNestedInput
    project_materials?: project_materialsUncheckedUpdateManyWithoutProjectsNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProjectsNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProjectsNestedInput
    project_stages?: project_stagesUncheckedUpdateManyWithoutProjectsNestedInput
    project_tags?: project_tagsUncheckedUpdateManyWithoutProjectsNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type projectsUncheckedUpdateManyWithoutClientsInput = {
    id?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumproject_statusFieldUpdateOperationsInput | $Enums.project_status | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    actual_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    margin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type document_tagsCreateManyDocumentsInput = {
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type document_tagsUpdateWithoutDocumentsInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: tagsUpdateOneRequiredWithoutDocument_tagsNestedInput
  }

  export type document_tagsUncheckedUpdateWithoutDocumentsInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_tagsUncheckedUpdateManyWithoutDocumentsInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_materialsCreateManyMaterialsInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_materialsUpdateWithoutMaterialsInput = {
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects?: projectsUpdateOneRequiredWithoutProject_materialsNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_materialsNestedInput
  }

  export type project_materialsUncheckedUpdateWithoutMaterialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsUncheckedUpdateManyWithoutMaterialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsCreateManyProject_stagesInput = {
    id?: number
    project_id: number
    material_id: number
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_mediaCreateManyProject_stagesInput = {
    id?: number
    project_id?: number | null
    staff_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_staffCreateManyProject_stagesInput = {
    id?: number
    project_id: number
    staff_id: number
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type site_reportsCreateManyProject_stagesInput = {
    id?: number
    project_id: number
    staff_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_checklistsCreateManyProject_stagesInput = {
    id?: number
    label: string
    is_done?: boolean | null
    staff_id?: number | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_tagsCreateManyProject_stagesInput = {
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type tasksCreateManyProject_stagesInput = {
    id?: number
    label: string
    description?: string | null
    assigned_to?: number | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsCreateManyProject_stagesInput = {
    id?: number
    staff_id: number
    project_id: number
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_materialsUpdateWithoutProject_stagesInput = {
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    materials?: materialsUpdateOneRequiredWithoutProject_materialsNestedInput
    projects?: projectsUpdateOneRequiredWithoutProject_materialsNestedInput
  }

  export type project_materialsUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    material_id?: IntFieldUpdateOperationsInput | number
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsUncheckedUpdateManyWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    material_id?: IntFieldUpdateOperationsInput | number
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_mediaUpdateWithoutProject_stagesInput = {
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneWithoutProject_mediaNestedInput
    staff?: staffUpdateOneWithoutProject_mediaNestedInput
  }

  export type project_mediaUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_mediaUncheckedUpdateManyWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_staffUpdateWithoutProject_stagesInput = {
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects?: projectsUpdateOneRequiredWithoutProject_staffNestedInput
    staff?: staffUpdateOneRequiredWithoutProject_staffNestedInput
  }

  export type project_staffUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_staffUncheckedUpdateManyWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_reportsUpdateWithoutProject_stagesInput = {
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutSite_reportsNestedInput
    staff?: staffUpdateOneWithoutSite_reportsNestedInput
  }

  export type site_reportsUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type site_reportsUncheckedUpdateManyWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_checklistsUpdateWithoutProject_stagesInput = {
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: staffUpdateOneWithoutStage_checklistsNestedInput
  }

  export type stage_checklistsUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_checklistsUncheckedUpdateManyWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_tagsUpdateWithoutProject_stagesInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: tagsUpdateOneRequiredWithoutStage_tagsNestedInput
  }

  export type stage_tagsUncheckedUpdateWithoutProject_stagesInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_tagsUncheckedUpdateManyWithoutProject_stagesInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksUpdateWithoutProject_stagesInput = {
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: staffUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksUncheckedUpdateManyWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsUpdateWithoutProject_stagesInput = {
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutTime_logsNestedInput
    staff?: staffUpdateOneRequiredWithoutTime_logsNestedInput
  }

  export type time_logsUncheckedUpdateWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsUncheckedUpdateManyWithoutProject_stagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type documentsCreateManyProjectsInput = {
    id?: number
    client_id?: number | null
    type: $Enums.document_type
    reference: string
    status?: $Enums.document_status | null
    amount?: Decimal | DecimalJsLike | number | string | null
    tva_rate?: Decimal | DecimalJsLike | number | string | null
    issue_date: Date | string
    due_date?: Date | string | null
    payment_date?: Date | string | null
    payment_method?: string | null
    notes?: string | null
    file_path?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type eventsCreateManyProjectsInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    staff_id?: number | null
    client_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_materialsCreateManyProjectsInput = {
    id?: number
    material_id: number
    stage_id?: number | null
    quantity_planned: number
    quantity_used?: number | null
    unit_price: Decimal | DecimalJsLike | number | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_mediaCreateManyProjectsInput = {
    id?: number
    stage_id?: number | null
    staff_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_staffCreateManyProjectsInput = {
    id?: number
    staff_id: number
    stage_id?: number | null
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_stagesCreateManyProjectsInput = {
    id?: number
    name: string
    description?: string | null
    start_date?: Date | string | null
    end_date?: Date | string | null
    status?: string | null
    order_index: number
    estimated_duration?: number | null
    actual_duration?: number | null
    completion_percentage?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_tagsCreateManyProjectsInput = {
    tag_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type site_reportsCreateManyProjectsInput = {
    id?: number
    staff_id?: number | null
    stage_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsCreateManyProjectsInput = {
    id?: number
    staff_id: number
    stage_id?: number | null
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type documentsUpdateWithoutProjectsInput = {
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUpdateManyWithoutDocumentsNestedInput
    clients?: clientsUpdateOneWithoutDocumentsNestedInput
  }

  export type documentsUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_tags?: document_tagsUncheckedUpdateManyWithoutDocumentsNestedInput
  }

  export type documentsUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumdocument_typeFieldUpdateOperationsInput | $Enums.document_type
    reference?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumdocument_statusFieldUpdateOperationsInput | $Enums.document_status | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tva_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    issue_date?: DateTimeFieldUpdateOperationsInput | Date | string
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUpdateWithoutProjectsInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutEventsNestedInput
    staff?: staffUpdateOneWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsUpdateWithoutProjectsInput = {
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    materials?: materialsUpdateOneRequiredWithoutProject_materialsNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_materialsNestedInput
  }

  export type project_materialsUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    material_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_materialsUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    material_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity_planned?: IntFieldUpdateOperationsInput | number
    quantity_used?: NullableIntFieldUpdateOperationsInput | number | null
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_mediaUpdateWithoutProjectsInput = {
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: staffUpdateOneWithoutProject_mediaNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_mediaNestedInput
  }

  export type project_mediaUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_mediaUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_staffUpdateWithoutProjectsInput = {
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    staff?: staffUpdateOneRequiredWithoutProject_staffNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_staffNestedInput
  }

  export type project_staffUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_staffUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_stagesUpdateWithoutProjectsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_materials?: project_materialsUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutProject_stagesNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutProject_stagesNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutProject_stagesNestedInput
    stage_tags?: stage_tagsUncheckedUpdateManyWithoutProject_stagesNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProject_stagesNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutProject_stagesNestedInput
  }

  export type project_stagesUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_index?: IntFieldUpdateOperationsInput | number
    estimated_duration?: NullableIntFieldUpdateOperationsInput | number | null
    actual_duration?: NullableIntFieldUpdateOperationsInput | number | null
    completion_percentage?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_tagsUpdateWithoutProjectsInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: tagsUpdateOneRequiredWithoutProject_tagsNestedInput
  }

  export type project_tagsUncheckedUpdateWithoutProjectsInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_tagsUncheckedUpdateManyWithoutProjectsInput = {
    tag_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type site_reportsUpdateWithoutProjectsInput = {
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: staffUpdateOneWithoutSite_reportsNestedInput
    project_stages?: project_stagesUpdateOneWithoutSite_reportsNestedInput
  }

  export type site_reportsUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type site_reportsUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsUpdateWithoutProjectsInput = {
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: staffUpdateOneRequiredWithoutTime_logsNestedInput
    project_stages?: project_stagesUpdateOneWithoutTime_logsNestedInput
  }

  export type time_logsUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsUncheckedUpdateManyWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type staffCreateManyRolesInput = {
    id?: number
    firstname: string
    lastname: string
    email: string
    phone?: string | null
    mobile?: string | null
    address_id?: number | null
    hire_date: Date | string
    is_available?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type staffUpdateWithoutRolesInput = {
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUpdateManyWithoutStaffNestedInput
    addresses?: addressesUpdateOneWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUpdateManyWithoutStaffNestedInput
    tasks?: tasksUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    events?: eventsUncheckedUpdateManyWithoutStaffNestedInput
    project_media?: project_mediaUncheckedUpdateManyWithoutStaffNestedInput
    project_staff?: project_staffUncheckedUpdateManyWithoutStaffNestedInput
    site_reports?: site_reportsUncheckedUpdateManyWithoutStaffNestedInput
    stage_checklists?: stage_checklistsUncheckedUpdateManyWithoutStaffNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutStaffNestedInput
    time_logs?: time_logsUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type staffUncheckedUpdateManyWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    hire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsCreateManyStaffInput = {
    id?: number
    title: string
    description?: string | null
    event_type: $Enums.event_type
    start_date: Date | string
    end_date: Date | string
    all_day?: boolean | null
    location?: string | null
    project_id?: number | null
    client_id?: number | null
    status?: string | null
    color?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type project_mediaCreateManyStaffInput = {
    id?: number
    project_id?: number | null
    stage_id?: number | null
    media_type?: string | null
    file_path: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_staffCreateManyStaffInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    role_description?: string | null
    start_date: Date | string
    end_date?: Date | string | null
    hours_planned?: number | null
    hours_worked?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type site_reportsCreateManyStaffInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    report_type?: string | null
    description: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_checklistsCreateManyStaffInput = {
    id?: number
    stage_id: number
    label: string
    is_done?: boolean | null
    comment?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type tasksCreateManyStaffInput = {
    id?: number
    stage_id: number
    label: string
    description?: string | null
    due_date?: Date | string | null
    status?: string | null
    priority?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type time_logsCreateManyStaffInput = {
    id?: number
    project_id: number
    stage_id?: number | null
    check_in: Date | string
    check_out?: Date | string | null
    comment?: string | null
    gps_lat?: Decimal | DecimalJsLike | number | string | null
    gps_long?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type eventsUpdateWithoutStaffInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutEventsNestedInput
    projects?: projectsUpdateOneWithoutEventsNestedInput
  }

  export type eventsUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type eventsUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    event_type?: Enumevent_typeFieldUpdateOperationsInput | $Enums.event_type
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    all_day?: NullableBoolFieldUpdateOperationsInput | boolean | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    client_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_mediaUpdateWithoutStaffInput = {
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneWithoutProject_mediaNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_mediaNestedInput
  }

  export type project_mediaUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_mediaUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    file_path?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_staffUpdateWithoutStaffInput = {
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects?: projectsUpdateOneRequiredWithoutProject_staffNestedInput
    project_stages?: project_stagesUpdateOneWithoutProject_staffNestedInput
  }

  export type project_staffUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type project_staffUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    role_description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hours_planned?: NullableIntFieldUpdateOperationsInput | number | null
    hours_worked?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type site_reportsUpdateWithoutStaffInput = {
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutSite_reportsNestedInput
    project_stages?: project_stagesUpdateOneWithoutSite_reportsNestedInput
  }

  export type site_reportsUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type site_reportsUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    report_type?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_checklistsUpdateWithoutStaffInput = {
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_stages?: project_stagesUpdateOneRequiredWithoutStage_checklistsNestedInput
  }

  export type stage_checklistsUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_checklistsUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    is_done?: NullableBoolFieldUpdateOperationsInput | boolean | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksUpdateWithoutStaffInput = {
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_stages?: project_stagesUpdateOneRequiredWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    stage_id?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsUpdateWithoutStaffInput = {
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutTime_logsNestedInput
    project_stages?: project_stagesUpdateOneWithoutTime_logsNestedInput
  }

  export type time_logsUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type time_logsUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    stage_id?: NullableIntFieldUpdateOperationsInput | number | null
    check_in?: DateTimeFieldUpdateOperationsInput | Date | string
    check_out?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    gps_lat?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    gps_long?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_tagsCreateManyTagsInput = {
    document_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type project_tagsCreateManyTagsInput = {
    project_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type stage_tagsCreateManyTagsInput = {
    stage_id: number
    created_at?: Date | string | null
    synced_at?: Date | string | null
    synced_by_device_id?: string | null
  }

  export type document_tagsUpdateWithoutTagsInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: documentsUpdateOneRequiredWithoutDocument_tagsNestedInput
  }

  export type document_tagsUncheckedUpdateWithoutTagsInput = {
    document_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_tagsUncheckedUpdateManyWithoutTagsInput = {
    document_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_tagsUpdateWithoutTagsInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: projectsUpdateOneRequiredWithoutProject_tagsNestedInput
  }

  export type project_tagsUncheckedUpdateWithoutTagsInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type project_tagsUncheckedUpdateManyWithoutTagsInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_tagsUpdateWithoutTagsInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_stages?: project_stagesUpdateOneRequiredWithoutStage_tagsNestedInput
  }

  export type stage_tagsUncheckedUpdateWithoutTagsInput = {
    stage_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stage_tagsUncheckedUpdateManyWithoutTagsInput = {
    stage_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    synced_by_device_id?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}