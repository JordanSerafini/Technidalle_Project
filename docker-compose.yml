services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Database/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - ./Database/seed_db_part1.sql:/docker-entrypoint-initdb.d/seed_db_part1.sql
      - ./Database/seed_db_part2.sql:/docker-entrypoint-initdb.d/seed_db_part2.sql
      - ./Database/seed_db_part3.sql:/docker-entrypoint-initdb.d/seed_db_part3.sql
      - ./Database/seed_db_part4.sql:/docker-entrypoint-initdb.d/seed_db_part4.sql

    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres_sync:
    image: postgres:15
    container_name: postgres_sync
    environment:
      POSTGRES_USER: sync_user
      POSTGRES_PASSWORD: sync_password
      POSTGRES_DB: sync_db
    ports:
      - 5433:5432
    volumes:
      - postgres_sync_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sync_user -d sync_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # sync_service:
  #   build:
  #     context: ./Backend/sync_service
  #     dockerfile: Dockerfile
  #   container_name: sync_service
  #   ports:
  #     - "3006:3006"
  #   environment:
  #     - PORT=3006
  #     - DB_HOST=postgres_sync
  #     - DB_PORT=5432
  #     - DB_USER=sync_user
  #     - DB_PASSWORD=sync_password
  #     - DB_NAME=sync_db
  #     - EBP_SERVER=host.docker.internal
  #     - EBP_DATABASE=votre_base_ebp
  #     - EBP_USER=votre_utilisateur_ebp
  #     - EBP_PASSWORD=votre_mot_de_passe_ebp
  #     - EBP_PORT=1433
  #   depends_on:
  #     postgres_sync:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - ./Backend/sync_service:/app

  resources:
    build:
      context: ./Backend/resources_service
      dockerfile: Dockerfile
    container_name: resources
    ports:
      - "3005:3005"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      - PORT=3005
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./Backend/resources_service:/app
      - /app/generated/prisma

  projects:
    build:
      context: ./Backend/projects_service
      dockerfile: Dockerfile
    container_name: projects
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./Backend/projects_service:/app
      - /app/generated/prisma

  client:
    build:
      context: ./Backend/clients_service
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./Backend/clients_service:/app
      - /app/generated/prisma

  documents:
    build:
      context: ./Backend/documents_service
      dockerfile: Dockerfile
    container_name: documents
    ports:
      - "3004:3004"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./Backend/documents_service:/app
      - ./Backend/documents_service/uploads:/app/uploads
      - /app/generated/prisma

  planning:
    build:
      context: ./Backend/planning_service
      dockerfile: Dockerfile
    container_name: planning
    ports:
      - "3007:3007"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./Backend/planning_service:/app
      - /app/generated/prisma       

  api-gateway:
    build:
      context: ./Backend/api_gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      resources:
        condition: service_started
      projects:
        condition: service_started
      client:
        condition: service_started
      documents:
        condition: service_started
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  postgres_sync_data:
